<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Michael Lustfield</title><link href="https://michael.lustfield.net/" rel="alternate"></link><link href="https://michael.lustfield.net/feeds/all.atom.xml" rel="self"></link><id>https://michael.lustfield.net/</id><updated>2019-07-03T00:00:00-05:00</updated><entry><title>Fully Encrypted Disk</title><link href="https://michael.lustfield.net/linux/fully-encrypted-disk" rel="alternate"></link><published>2019-07-03T00:00:00-05:00</published><updated>2019-07-03T00:00:00-05:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2019-07-03:/linux/fully-encrypted-disk</id><summary type="html">&lt;p&gt;An intelligent mind once said, &amp;quot;if I can touch your system, then it's not your
system.&amp;quot; This phrase shaped the way I approached security, and increased my
paranoia.&lt;/p&gt;
&lt;p&gt;Although many guides exist that describe full disk encryption, they
unfortunately fall a bit short of the claim and leave a bit …&lt;/p&gt;</summary><content type="html">&lt;p&gt;An intelligent mind once said, &amp;quot;if I can touch your system, then it's not your
system.&amp;quot; This phrase shaped the way I approached security, and increased my
paranoia.&lt;/p&gt;
&lt;p&gt;Although many guides exist that describe full disk encryption, they
unfortunately fall a bit short of the claim and leave a bit too much unencrypted
data available to be tampered with. Fortunately, GRUB2 makes near-full disk
encryption very easy, it just takes a few extra steps.&lt;/p&gt;
&lt;div class="section" id="falling-short"&gt;
&lt;h2&gt;Falling Short&lt;/h2&gt;
&lt;p&gt;The most common method of full(ish) disk encryption is &amp;quot;Encrypted LVM.&amp;quot; This
approach, and many others, often use a separate /boot which is used to handle
decryption.&lt;/p&gt;
&lt;p&gt;When /boot is left unencrypted and secureboot is disabled, an attacker (Evil
Maid) is able to edit configuration files (grub.cfg), insert boot options, or
replace an entire initrd/initramfs image with one containing malicious code.&lt;/p&gt;
&lt;p&gt;Depending on distro of choice, hardware, and BIOS, secureboot might be
available. With secure boot, it can be possible to detect changes to initramfs,
but this doesn't mean the boot process can't be manipulated via boot parameters
or other methods.&lt;/p&gt;
&lt;p&gt;Although it's currently imposible to encrypt the MBR, everything else can be
encrypted pretty easily. This guide is all about using a single encrypted
partitions filling the entire disk.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="installation-with-encryption"&gt;
&lt;h2&gt;Installation With Encryption&lt;/h2&gt;
&lt;p&gt;The process provided here is based on the Debian installer. From the boot menu,
choose &amp;quot;Advanced options&amp;quot; and then &amp;quot;Expert installation.&amp;quot; Despite the name,
this installation method is quite easy, it just provides more flexibility.&lt;/p&gt;
&lt;p&gt;This process requires GRUB and generates an MBR that is too large to fit in the
standard 512 byte space. Newer partioning tools usually leave a large space
before the first partition to accomodate this problem, however, this is largely
dependent on the installer. It is much safer to follow a manual partitioning
process.&lt;/p&gt;
&lt;p&gt;To manually configure the partition table:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Follow the installer through the standard steps&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;During &amp;quot;Load installer components from CD&amp;quot;, select &amp;quot;parted-udeb&amp;quot;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Stop after &amp;quot;Detect disks&amp;quot; completes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Switch to a terminal session (Alt+F2)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Use parted to generate the partition table:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
parted -a optimal /dev/sda # or your relevant disk
mklabel msdos
mkpart primary 10M 100%
quit
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Switch back to the installer (Alt+F1 or Alt+F7 for graphical)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once partitioned, the remaining steps will take place from the installer:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Continue to &amp;quot;Partition disks&amp;quot;&lt;/li&gt;
&lt;li&gt;Choose the &amp;quot;Manual&amp;quot; partitioning option&lt;/li&gt;
&lt;li&gt;If prompted for &amp;quot;Force UEFI installation,&amp;quot; choose &amp;quot;No&amp;quot; [1]&lt;/li&gt;
&lt;li&gt;Select the previously created partition&lt;/li&gt;
&lt;li&gt;Change 'Use as' to 'physical volume for encryption'&lt;/li&gt;
&lt;li&gt;Make any other changes you want and select &amp;quot;Done [...]&amp;quot;&lt;/li&gt;
&lt;li&gt;Select 'Configure encrypted volumes'&lt;/li&gt;
&lt;li&gt;Select 'Create encrypted volumes,' select the crypto disk, and finish&lt;/li&gt;
&lt;li&gt;Select the newly created disk (probably sda1_crypt)&lt;/li&gt;
&lt;li&gt;Change 'Use as' to 'physical volume for LVM'&lt;/li&gt;
&lt;li&gt;Select 'Configure the Logical Volume Manager'&lt;/li&gt;
&lt;li&gt;Create a volume group, some volumes, finish, and configure those volumes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[1] This usually means the installer was started in EFI-mode.&lt;/p&gt;
&lt;p&gt;The final result should look similar to this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="luks_partition" src="/files/uploads/luks_partition.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Newer versions of cryptsetup will generate encrypted volumes using Version 2
headers. These headers are not currently supported by GRUB and need to be
downgraded.&lt;/p&gt;
&lt;p&gt;After the step: &amp;quot;Install the GRUB boot loader on a hard disk&amp;quot;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Go to the console (Alt+F2)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Downgrade the LUKS Header:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cryptsetup luksDump /dev/sda1 | grep ^V
# If &amp;quot;Version: 1,&amp;quot; then skip the remainder of this step

cryptsetup luksChangeKey --key-slot 0 --pbkdf pbkdf2 /dev/sda1
# Enter the LUKS passphrase three times
cryptsetup convert --type luks1 /dev/sda1
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition to downgrading the header, GRUB's MBR needs some extra modules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Start chroot:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mount -t proc none /target/proc
mount -t sysfs none /target/sys
mount -o rbind /run /target/run
chroot /target /bin/bash
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Edit grub config (vi /etc/default/grub) and append:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
GRUB_ENABLE_CRYPTODISK=&amp;quot;y&amp;quot;
GRUB_RELOAD_MODULES=&amp;quot;lvm cryptodisk&amp;quot;
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Re-run the GRUB installation step:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
update-grub
grub-install --recheck /dev/sda
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Although not related to disk encryption, this is an excellent opportunity to
remove the insanity that SystemD brings with it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;From inside the chroot, swap the init system:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
apt install sysvinit-core
apt purge systemd
rm -rf /usr/lib/systemd
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Switch back to the installer (Alt+F1)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Finish the installation&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="troubleshooting"&gt;
&lt;h2&gt;Troubleshooting&lt;/h2&gt;
&lt;p&gt;For reasons I have not yet been able to identify, GRUB installation rarely works
with this configuration the first time through. If the newly installed system
can't be booted because the MBR can't be found or because &amp;quot;error: disk
'lvmid/xyz' not found,&amp;quot; run these steps to fix the problem.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Boot back into the installer&lt;/li&gt;
&lt;li&gt;Select &amp;quot;Advanced options&amp;quot; -&amp;gt; &amp;quot;Rescue mode&amp;quot;&lt;/li&gt;
&lt;li&gt;Once prompted, provide the LUKS passphrase and mount the root disk&lt;/li&gt;
&lt;li&gt;Switch to a terminal (Alt+F2)&lt;/li&gt;
&lt;li&gt;Manually mount extra partitions&lt;/li&gt;
&lt;li&gt;Return to rescue screen (Alt+F1)&lt;/li&gt;
&lt;li&gt;From &amp;quot;Rescue operations,&amp;quot; select &amp;quot;Execute a shell in [...]root&lt;/li&gt;
&lt;li&gt;Select &amp;quot;Reinstall GRUB boot loader&amp;quot;&lt;/li&gt;
&lt;li&gt;Select &amp;quot;Reboot the system&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="decryption-during-boot"&gt;
&lt;h2&gt;Decryption During Boot&lt;/h2&gt;
&lt;p&gt;During boot, the disk will need to be unlocked twice. The first decryption will
make /boot available for grub to boot from. The second will be used to mount the
root file system and boot. It's important to note that the first password will be
entered using the hardware's default keyboard layout; the second will be entered
using the OS-configured keyboard layout.&lt;/p&gt;
&lt;p&gt;It's possible to embed a decryption key into initramfs so that the key only
needs to be entered once, but this has significant security implications and is
strongly discouraged. This setup is explained in good detail in Step 4 (Avoiding
the extra password prompt) on a &lt;a class="reference external" href="https://cryptsetup-team.pages.debian.net/cryptsetup/encrypted-boot.html"&gt;Debian cryptsetup&lt;/a&gt; page.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="better-security"&gt;
&lt;h2&gt;Better Security&lt;/h2&gt;
&lt;p&gt;When GRUB supports LUKSv2, the key will be able to be stored entirely within the
kernel, which will prevent a lot of potential security problems. Once this
becomes available, it will be worth migrating to.&lt;/p&gt;
&lt;/div&gt;
</content><category term="linux"></category><category term="linux"></category><category term="file systems"></category><category term="security"></category></entry><entry><title>Tips for Living with an Ostomy</title><link href="https://michael.lustfield.net/rambling/tips-for-living-with-an-ostomy" rel="alternate"></link><published>2019-03-17T00:00:00-05:00</published><updated>2019-03-17T00:00:00-05:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2019-03-17:/rambling/tips-for-living-with-an-ostomy</id><summary type="html">&lt;p&gt;My experience with colorectal (adenocarcinoma, T3aN0M0 [Stage 2]) cancer officially
began on the 9th of October in 2017. After 8 rounds of chemo and 27 rounds of
radiation, I arrived at surgery. Unfortunately, I came out on the other side of
surgery with a permanent colostomy. Learning to live with …&lt;/p&gt;</summary><content type="html">&lt;p&gt;My experience with colorectal (adenocarcinoma, T3aN0M0 [Stage 2]) cancer officially
began on the 9th of October in 2017. After 8 rounds of chemo and 27 rounds of
radiation, I arrived at surgery. Unfortunately, I came out on the other side of
surgery with a permanent colostomy. Learning to live with an ostomy hasn't been a
breeze, but hopefully sharing what I learned can help someone with this transition.&lt;/p&gt;
&lt;div class="section" id="the-initial-shock"&gt;
&lt;h2&gt;The Initial Shock&lt;/h2&gt;
&lt;p&gt;For some people, an ostomy is a welcome change from issues such as inflammatory
bowel disease. For others, it comes from a traumatic life event or as part of
a fight with cancer. For anyone receiving an ostomy, there will be an initial
shock.&lt;/p&gt;
&lt;p&gt;Going into my surgery, I knew that waking up with the ostomy on my right side would
mean that it was temporary and on the left side would mean it's permanent. My
initial shock came when I awoke and any hope of this being temporary vanished.&lt;/p&gt;
&lt;p&gt;A colon resection is a major surgery, and with any major surgery, there's always
recovery and often a lot of pain. This type of surgery, particularly Lower Anterior
Resection (LAR), comes with a high probability of damaging some nerve tissue around
the bladder; it can be very unpleasant and cause re-cathing, but these troubles
should be short-lived. Open and honest communication with a healthcare team is
critical and can alleviate a lot of suffering; most problems that will be
encountered are not uncommon and this communication ensures that those common
solutions (medication, movement, etc.) can be provided.&lt;/p&gt;
&lt;p&gt;After surgery, the stoma will be inflamed and it will take time for the swelling to
subside. Cutting each barrier to size is tedious at first, but with some practice,
it becomes quick and easy. More importantly, after the body heals from surgery,
the stoma size will become constant and pre-cut barriers can be ordered. This
eliminates the need to cut each barrier and eliminates potential sharp edges.&lt;/p&gt;
&lt;p&gt;Approximately three to nine months after surgery, life should be able to resume
(relatively) as normal. There will still be adjustments and lifestyle changes,
but these become trivial. The body can take over a year to fully recover; however,
the major issues are up front and everything gets exponentially easier as various
body parts finish healing.&lt;/p&gt;
&lt;p&gt;The important thing to remember is that &amp;quot;this too, shall pass.&amp;quot;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-best-fit"&gt;
&lt;h2&gt;The Best Fit&lt;/h2&gt;
&lt;p&gt;There are a handful of suppliers and they're all absolutely terrible companies to
deal with. It's common for a Wound Ostomy Continence (WOC) nurse to have a working
relationship with a supplier, but that doesn't mean the supplier cares anything
about customer service. As a patient, it is important to research and shop around
to find the best option. Suppliers, such as Byram, that provide a website to
re-order previously purchased products, may still be terrible and provide a
terrible website, but at least re-ordering won't involve much effort.&lt;/p&gt;
&lt;p&gt;Some WOC nurses will try to help by placing orders, but it's common for these
orders to be inaccurate or incomplete. It's often best to ask the nurse what they
recommend and then place an order or request a sample.&lt;/p&gt;
&lt;p&gt;Fortunately, unlike suppliers, manufacturers tend to have a strong vested interest
in making sure patients are satisfied; they have sales staff available to help
determine the best &amp;quot;appliance&amp;quot; to fit a particular person. These staff members are
typically very friendly and eager to help. They should be able to answer questions
about products available, provide samples, answer concerns about a  product/sample
received, offer alternatives, offer general advice, etc.&lt;/p&gt;
&lt;p&gt;Although no individual is identical to another, the problems encountered are rarely
rare; even if a &amp;quot;perfect&amp;quot; solution can't be provided, what's available should be
able to adequately handle most problems. Seeking samples from various manufacturers
is an excellent way to find just the right fit.&lt;/p&gt;
&lt;p&gt;Some basic research should include looking at a catalog provided by a supplier or
two. &lt;a class="reference external" href="https://www.byramhealthcare.com/our-services/our-catalogs"&gt;Byram provides&lt;/a&gt; a massive, disorganized, but helpful catalog which includes
some some nice tips for measuring, management, diet, etc. After finding some
interesting products, do a search to find the company's website. On the site, look
for an option to request a sample--sometimes in the product list--or look for a
&amp;quot;contact us&amp;quot; page. If some of the products seem confusing, then go straight to
that &amp;quot;contact us&amp;quot; page and (ideally) call the manufacturer and ask for help
deciding what product is best.&lt;/p&gt;
&lt;p&gt;Coloplast and Hollister have been more than happy to provide a few samples and
even ask if it's okay to notify someone of new products that may potentially be
relevant and helpful so that samples of the product can be provided.&lt;/p&gt;
&lt;p&gt;Once the right fit is found, the ostomy experience changes from a daunting chore
to little more than brushing teeth and flossing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="simple-but-effective-tools"&gt;
&lt;h2&gt;Simple but Effective Tools&lt;/h2&gt;
&lt;p&gt;Hollister provided one dark disposal bag for each throw-away pouch, but Coloplast
provided a larger/heavier bag for multiple pouches. As disgusting as that may
sound, the implication provided some simple enlightenment.&lt;/p&gt;
&lt;p&gt;Rather than relying on the bags they provide, the larger bags are now used when
traveling. One of the larger bags is put underneath the bag in the restroom
garbage can and disposed of at the end of the trip. If using room service, it may
be a good idea to bring along a few extra.&lt;/p&gt;
&lt;p&gt;Depending on the company/product chosen, the disposal bags may be adequate. With
Coloplast Sensura, it will be the larger bags and smaller individual-use bags can
be substituted with &lt;a class="reference external" href="https://www.amazon.com/gp/product/B06Y2S7YTD"&gt;bos bags&lt;/a&gt;, or similar.&lt;/p&gt;
&lt;p&gt;Rather than tossing each bag into an open bin that others might frequently walk
by, a &lt;a class="reference external" href="https://www.amazon.com/dp/B007IRMTXE"&gt;litter genie&lt;/a&gt; is an excellent way to keep these hidden away. The lid
carrying the product name can be removed without impacting it's ability to retain
odor. It even provides a discrete place for women to dispose of feminine hygiene
products. It's wise to shop around for &lt;a class="reference external" href="https://www.amazon.com/gp/product/B0784BRYYJ"&gt;cheaper replacement bags&lt;/a&gt;; they're often
at least 50% cheaper.&lt;/p&gt;
&lt;p&gt;Another very helpful device is an air filter. The &lt;a class="reference external" href="https://www.amazon.com/dp/B002SHCEVG"&gt;TrueAir room filter&lt;/a&gt; is rather
large, but it does a fantastic job. They also provide a &lt;a class="reference external" href="https://www.amazon.com/dp/B003PWSQMY"&gt;smaller wall-plug device&lt;/a&gt;
that seems more suited for travel.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-belt"&gt;
&lt;h2&gt;The Belt&lt;/h2&gt;
&lt;p&gt;Any belt found in a supplier or manufacturer catalog is likely going to include
only medical belts used to treat certain issues, such as a herniation. Another type
of belt is designed to help conceal the ostomy bag. StealthBelt is a well-known
example of this latter type.&lt;/p&gt;
&lt;p&gt;These belts are designed to be comfortable, keep the bag discreet, and eliminate
odors/sounds. Unfortunately, they also tend to retain a bit of heat and can cause
a barrier to fail (blow-out).&lt;/p&gt;
&lt;p&gt;Instead of opting for the belt, a t-shirt underneath a loose-fitting shirt can
offer nearly the same benefits, without the risk of excess heat. Some barriers
are nicer to live with than others, and other barriers handle excess heat/sweat
better than others. Remember the importance of shopping around; there's no harm
in finding two products that work well in different situations, such as with or
without a belt.&lt;/p&gt;
&lt;p&gt;Regardless of whether a belt is used--but especially so--it's extremely important
to watch out for signs of a blow-out. A common symptom will be itching around the
peristomal skin or an unusual sensation of &amp;quot;pancaking.&amp;quot;&lt;/p&gt;
&lt;p&gt;It's impossible to say if a belt is appropriate for some, just the same way it's
impossible to say if an appliance will be right. It's a bit of a trial-and-error
situation. Fortunately, this situation is all within the control of one person.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="don-t-panic"&gt;
&lt;h2&gt;Don't Panic&lt;/h2&gt;
&lt;p&gt;Many troubles with an ostomy are well-documented and easily-researched. A few,
however, have some elusive answers.&lt;/p&gt;
&lt;p&gt;First of all, large white bumps on a stoma are most often normal and caused by
irritation. When they first show up, a surgeon may want to biopsy them, but
it's most likely they're just from irritation. They may or may not ever go away.&lt;/p&gt;
&lt;p&gt;A hernia or prolapse will be terrifying the first time they're encountered, but
neither should carry concern about visiting an emergency room. Instead, continue
practicing healthy care and contact a WOC nurse to decide what steps to take next.&lt;/p&gt;
&lt;p&gt;It should be noted that improving muscle tone and a healthy diet greatly reduce
the chance of a hernia/prolapse.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="travel"&gt;
&lt;h2&gt;Travel&lt;/h2&gt;
&lt;p&gt;Traveling with an ostomy is not terribly difficult, although it does require some
special consideration and planning.&lt;/p&gt;
&lt;p&gt;Filters tend to work, but only for short periods of time. If a good diet is
maintained, then it should be possible to make use of stickers that cover the
filter, which can be temporarily/permanently removed. These stickers help ensure
no odor gets out, and help keep the filter from getting plugged from the outside.&lt;/p&gt;
&lt;p&gt;As mentioned above, bringing the right quantity and size of disposal bags can be
extremely helpful. A large, heavy-duty, dark-colored bag is great to place
beneath a trash can liner, and smaller bags are ideal for each disposed pouch.&lt;/p&gt;
&lt;p&gt;Most hotels hang a hair dryer up in a bag, but the hair dryer can be placed
anywhere convenient and ostomy supplies placed into the bag. This provides a nice
discrete way to keep all necessary items handy while remaining inconspicuous. In
this scenario, even if someone happens across these items, it's not likely the same
person will do so a second time.&lt;/p&gt;
&lt;p&gt;If it's possible to tour a destination with a backpack, then it's wise to bring two
sets of ostomy supplies. One set can remain in the room, and another set can be
carried along for any urgent needs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Living with an ostomy is an adjustment. It takes time to recover and to get used
to a new way of living. A new standard for life will eventually emerge and the
problems that once terrified will become tiny blips in history.&lt;/p&gt;
&lt;p&gt;&amp;quot;Tough times do not last; tough people do last.&amp;quot;&lt;/p&gt;
&lt;/div&gt;
</content><category term="rambling"></category><category term="ostomy"></category></entry><entry><title>Secure Password Vault Using Yubikey</title><link href="https://michael.lustfield.net/linux/secure-password-vault-using-yubikey" rel="alternate"></link><published>2017-02-14T00:00:00-06:00</published><updated>2017-02-14T00:00:00-06:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2017-02-14:/linux/secure-password-vault-using-yubikey</id><summary type="html">&lt;p&gt;Up until recently, my passwords were stored in a rather precarious manner. For
my birthday, I decided it would be a nice gift to myself to perform a complete
password refresh. This involved taking inventory of every password there was
any record or memory of and resetting it to unique …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Up until recently, my passwords were stored in a rather precarious manner. For
my birthday, I decided it would be a nice gift to myself to perform a complete
password refresh. This involved taking inventory of every password there was
any record or memory of and resetting it to unique and cryptographically random
password of random length--between ~25 and ~200 characters long. Now I have
reason to keep these passwords secure!&lt;/p&gt;
&lt;div class="section" id="my-delay"&gt;
&lt;h2&gt;My Delay&lt;/h2&gt;
&lt;p&gt;Most people that know me would be surprised to learn I never needed a password
vault. It was possible to avoid using a password vault by memorizing different
algorithms. This worked well because an employer and year/quarter could be fed
into the algorithm to produce work-centric time-based passwords.&lt;/p&gt;
&lt;p&gt;This comes with some obvious issues. The first, and likely biggest, issue being
that I'm not able to memorize an algorithm that wouldn't reveal a good portion
of the pattern after ~5 cracked passwords.&lt;/p&gt;
&lt;p&gt;The previous solution included coming up with a weak and easy algorithm as well
as a strong and difficult alterantive. It also included replacing each after a
few years of use. Unfortunately, forgetting old didn't fit into the equation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-vault"&gt;
&lt;h2&gt;The Vault&lt;/h2&gt;
&lt;p&gt;The first step is deciding on a tool to use for the password vault. After doing
a review and audit of various tools, I settled on KeePassX. Although it uses
the same database format as KeePass2, I trust this tool significantly more.
Every person considering a solution for storing this much private data should
do their own research in order to trust their decision.&lt;/p&gt;
&lt;p&gt;When doing the password refresh, no &amp;quot;current&amp;quot; password was moved to the vault.
Instead, new passwords were generated and services updated with the new password
before erasing old records.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="in-comes-luks"&gt;
&lt;h2&gt;In Comes LUKS&lt;/h2&gt;
&lt;p&gt;It should be obvious that a very strong password should be set on the keepass
database. Maybe less obvious is that it would be rather silly to give keepass
our full trust. Despite having reviewed the source code and knowing smarter
people have already done the same, it's still a good idea to provide an extra
layer of protection. Remember, this is data that should be kept &lt;em&gt;very&lt;/em&gt; secure.&lt;/p&gt;
&lt;p&gt;Being familiar with LUKS, I saw it as the obvious tool for this job. LUKS
provides the ability to store a tiny little file used for encryption that can
be backed up just like any other file.&lt;/p&gt;
&lt;p&gt;LUKS also provides the ability to store headers in a separate file. The headers
include the eight available key slots as well as other data required to unlock
the encrypted volume. Headers can get a bit large but they are static so they
become virtually non-existent with differential backups. The encrypted volume
only needs to fit your password database and only needs to be large enough to
accommodate growth. This will be the size consumed for any differential backup
that includes the encrypted volume.&lt;/p&gt;
&lt;p&gt;To build a playground structure similar to mine:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mkdir -p ~/.luks/{crypts,headers,mnt}
&lt;/pre&gt;
&lt;p&gt;To build files for encryption:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
dd if=/dev/urandom of=~/.luks/headers/vault bs=1MB count=2
dd if=/dev/urandom of=~/.luks/crypts/vault bs=200KB count=1
mkdir /.luks/mnt/vault
&lt;/pre&gt;
&lt;p&gt;It's recommended to use &lt;em&gt;--use-random&lt;/em&gt; to ensure a stronger entropy pool. When
creating the LUKS volumes, use a memorable and secure password. This will later
be removed and kept as a backup.&lt;/p&gt;
&lt;p&gt;Making cryptography:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo cryptsetup luksFormat ~/.luks/crypts/vault \
    --header ~/.luks/headers/vault \
    -s 512 --align-payload=0 --use-random
&lt;/pre&gt;
&lt;p&gt;Now that the encryption stuff has been configured, some sysadmin stuff needs to
be performed. This is pretty basic so explanation will be skipped.&lt;/p&gt;
&lt;p&gt;It's a root thing:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cryptsetup open ~/.luks/crypts/vault \
    --header ~/.luks/headers/vault vault
mkfs.ext2 -I 128 /dev/mapper/vault
mount /dev/mapper/vault ~/.luks/mnt/vault
chown $user:$user ~/.luks/mnt/vault
&lt;/pre&gt;
&lt;p&gt;Closing it up (also root):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
umount ~/.luks/mnt/vault
cryptsetup close vault
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="yubikey-encryption"&gt;
&lt;h2&gt;Yubikey Encryption&lt;/h2&gt;
&lt;p&gt;The only reasonably secure way to trust the yubikey seems to be with the
challenge-response / hmac-sha1 option. This seems to accept an input password
up to 64 characters long, combine it with a secret, and produce a 40 character
long hash.&lt;/p&gt;
&lt;p&gt;This was actually a pretty big concern for me because [0-9a-f]{40} wouldn't take
a computer too terribly much time to crack. After some thinking, it became quite
obvious that the simple solution was using the yubikey hash as a portion of the
complete password rather than the whole thing.&lt;/p&gt;
&lt;p&gt;Pro-tip: Most of the tools I reviewed that used a yubikey as an authentication
factor only utilized this return value. That includes the 'yubikey-luks'
package in a few package repositories. Most tools didn't even include a sane
option for decryption.&lt;/p&gt;
&lt;p&gt;Configuring the Yubikey:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Install and launch &amp;quot;yubikey-personalization-gui&amp;quot;&lt;/li&gt;
&lt;li&gt;Select Challenge-Response tab, then HMAC-SHA1&lt;/li&gt;
&lt;li&gt;Configuration Slot: 2&lt;/li&gt;
&lt;li&gt;Configuration Protection: &amp;lt;strongly recommended | but not serial&amp;gt;&lt;/li&gt;
&lt;li&gt;Require User Input: &amp;lt;recommend yes | this means touching key&amp;gt;&lt;/li&gt;
&lt;li&gt;Click Generate, then Write Configuration&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If there's any intention of using the key as a permanent resident, it would be
wise to reset slot 1 and ensure it does not respond to contact (user input).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="password-derivatives"&gt;
&lt;h2&gt;Password Derivatives&lt;/h2&gt;
&lt;p&gt;To produce a strong password for LUKS (the encrypted volume), the algorithm
used should produce a key that is both variable in length and character set.
As unlikely as it is that the yubikey is storing entered passwords and caching
generated hashes, yubikey is now closed source and there's absolutely zero proof
that isn't happening. This is describing paranoia, but addressing the silly fear
is quite easy.&lt;/p&gt;
&lt;p&gt;My first algorithm looked much like this:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
salt='71'
read -sp '' -t 20 vault_key
len=&amp;quot;${#vault_key}&amp;quot;
luks_pass=&amp;quot;${vault_key:5}$(/usr/bin/ykchalresp -2 \
    &amp;quot;$(sha256sum &amp;lt;&amp;lt;&amp;lt;&amp;quot;${vault_key:0:8}$salt${vault_key:$(($len - 5)):4}&amp;quot; | cut -d ' ' -f 1)&amp;quot;)&amp;quot;
# sudo cryptsetup open [...]
unset vault_key luks_pass

# sample_in:  YouAreCorrectHorse,ThatIs&amp;#64;BatteryStaple!
# sample_out: eCorrectHorse,ThatIs&amp;#64;BatteryStaple!ac3bc63c4949f8c902ea49a7d9409f506c79bcdc
&lt;/pre&gt;
&lt;p&gt;If able, coming up with a more secure algorithm than this would be a good idea.
If using this sample, at least change the salt. Verifying checksums of binaries
accessed of the script checking checksums would also be an excellent idea.&lt;/p&gt;
&lt;p&gt;If the configuration was set to require user input, processing will stop at the
&amp;quot;luks_pass=&amp;quot; line and the yubikey will begin blinking green. Once the key has
been touched it will emit solid green until the hash is generated and returned.&lt;/p&gt;
&lt;p&gt;Pro-tip: sha512sum produces a string too large for ykchalresp (64 limit)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="adding-factors"&gt;
&lt;h2&gt;Adding Factors&lt;/h2&gt;
&lt;p&gt;Knowing the final derived password means the original plain password can finally
be retired. If there is no backup of the headers file, this would be an
excellent time to make the copy and stick it away in a safe.&lt;/p&gt;
&lt;p&gt;To add the yubikey-derived key:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo cryptsetup luksAddKey ~/.luks/headers/vault
# first enter the old (current) password
# enter the derived password
# enter it a second time
&lt;/pre&gt;
&lt;p&gt;To delete the old key:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo cryptsetup luksKillSlot ~/.luks/headers/vault 0
# note: slot 0 is the first used and will have the plain password
#       this can be verified using luksDump
# enter the old password (for this slot)
&lt;/pre&gt;
&lt;p&gt;Up to eight key slots are available for storing description keys. The same
process that was used above can be repeated to add additional devices with the
only exception being that no keys will be deleted.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="vault-access"&gt;
&lt;h2&gt;Vault Access&lt;/h2&gt;
&lt;p&gt;Now that all record of that key for copy/paste purposes and the clipboard has
been scrubbed, all that's left is to build a convenient script to make accessing
the vault a bit less painful.&lt;/p&gt;
&lt;p&gt;I have included a very simple script to use as a starting point for your venture.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="final-thoughts"&gt;
&lt;h2&gt;Final Thoughts&lt;/h2&gt;
&lt;p&gt;It would be nice to build a very strong and universal algorithm.&lt;/p&gt;
&lt;p&gt;Most attacks that could hijack this derived password would also imply the
attacker has already made it into the system far enough to grab a copy of the
keepass file after the volume were mounted. If the intrusion is ever detected,
ample time will be available to do another password refresh using a new password
vault and encrypted volume.&lt;/p&gt;
&lt;p&gt;Attachments:&lt;/p&gt;
&lt;p&gt;&lt;img alt="image0" src="/files/icons/text-plain.png" /&gt; &lt;a class="reference external" href="/files/uploads/access_vault"&gt;access_vault&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="linux"></category><category term="linux"></category><category term="security"></category></entry><entry><title>Long Term Secure Backups</title><link href="https://michael.lustfield.net/linux/long-term-secure-backups" rel="alternate"></link><published>2016-05-28T00:00:00-05:00</published><updated>2016-05-28T00:00:00-05:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2016-05-28:/linux/long-term-secure-backups</id><summary type="html">&lt;p&gt;Not that long ago, I managed to delete all of my physical HV hosts, backup
server, all external backups, and a bit more. The first question that most
people would ask would probably be how that's even possible. That may become
a post by itself; it probably won't, though. What …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Not that long ago, I managed to delete all of my physical HV hosts, backup
server, all external backups, and a bit more. The first question that most
people would ask would probably be how that's even possible. That may become
a post by itself; it probably won't, though. What really matters is how I can
keep this from ever happening again?&lt;/p&gt;
&lt;p&gt;I sat down for some time to come up with some requirements, some ideas, and
eventually rolled out a backup solution that I feel confident with.&lt;/p&gt;
&lt;div class="section" id="requirements"&gt;
&lt;h2&gt;Requirements&lt;/h2&gt;
&lt;p&gt;To build this backup solution, I first needed to define a set of requirements.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;No server can see backups from other servers&lt;/li&gt;
&lt;li&gt;The backup server can not access other servers&lt;/li&gt;
&lt;li&gt;The backup server must create versioned backups (historical archives)&lt;/li&gt;
&lt;li&gt;No server can access its own historical archive&lt;/li&gt;
&lt;li&gt;All archives must be uploaded to an off-site location&lt;/li&gt;
&lt;li&gt;All off-site backups must enforce data retention&lt;/li&gt;
&lt;li&gt;The backup server must be unable to delete backups from an off-site location&lt;/li&gt;
&lt;li&gt;All off-site backups must be retained for a minimum of three months&lt;/li&gt;
&lt;li&gt;The backup server must keep two years worth of historical archives&lt;/li&gt;
&lt;li&gt;The entire solution must be fully automated&lt;/li&gt;
&lt;li&gt;Low budget&lt;/li&gt;
&lt;li&gt;Can't impact quality of service&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some of these may sound like common sense, but most backup tools, including the
big dollar options, don't meet all of them. In some (way too many) cases, the
backup server is given access to root (or administrator) on most systems.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-stack"&gt;
&lt;h2&gt;The Stack&lt;/h2&gt;
&lt;p&gt;Deciding how this stack should be contructed was definitely the most time
consuming part of this project. I'm going to attempt to lay out what I built
in the order of the direction data flows. Wish me luck!&lt;/p&gt;
&lt;div class="section" id="server-to-backup-server"&gt;
&lt;h3&gt;Server to Backup Server&lt;/h3&gt;
&lt;p&gt;The obvious choice is SSH. It's a standard, reasonably secure, and very easy.&lt;/p&gt;
&lt;p&gt;When people do backups with SSH, the typical decision is to have the backup
server initiate and control backups, which almost always means the backup server
has the ability to log into other servers. This makes your backup server a
substantially higher value target for an attacker. Yes, it's horrible if any
system gets compromised, but this minimizes the impact and aids in recovery.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="scheduling"&gt;
&lt;h3&gt;Scheduling&lt;/h3&gt;
&lt;p&gt;Every server has a backup script that runs on a pseudo-random schedule. Because
the node name will always be the same and checksums are worthless unless they
produce the same value every time, I was able to use the node name to build the
backup schedule.&lt;/p&gt;
&lt;p&gt;This boils down to what is essentially:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;snap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nt"&gt;cron.present&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;identifier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;snap&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;/usr/local/sbin/snap&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;hour&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;2,10,18&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;minute&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;pillar&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;backup_minute&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The 'backup_minute' is created with ext_pillar. To build the entire ext_pillar
is a task for the reader, what matters is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;zlib&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;zlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crc32&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grains&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hostname&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You may notice that using 60 doubles the chance a backup running on the top of
the hour. You can feel free to choose 59, but I like nice round numbers that
are easy to identify.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ssh-keys"&gt;
&lt;h3&gt;SSH Keys&lt;/h3&gt;
&lt;p&gt;I mentioned that I wanted something 100% automated. I'm a huge fan of Salt and
use it in my home environment, so Salt was the only choice for the automation.&lt;/p&gt;
&lt;p&gt;A feature of Salt is the Salt Mine. The mine is a way for minions (every server)
to report bits of data back to the salt master that can be shared with other
systems. I utilized this feature to share root's SSH public key. I also used
salt to generate that key if it doesn't already exist.&lt;/p&gt;
&lt;p&gt;Here's a mini-snippet for clarification:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;root_sshkeygen&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nt"&gt;cmd.run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;ssh-keygen&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;-f&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;/root/.ssh/id_rsa&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;-t&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;rsa&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;-N&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&amp;#39;&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;unless&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;test&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;-f&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;/root/.ssh/id_rsa.pub&amp;#39;&lt;/span&gt;

&lt;span class="nt"&gt;/etc/salt/minion.d/mine.conf&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nt"&gt;file.managed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;contents&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
        &lt;span class="no"&gt;mine_functions:&lt;/span&gt;
          &lt;span class="no"&gt;ssh.user_keys:&lt;/span&gt;
            &lt;span class="no"&gt;user: root&lt;/span&gt;
            &lt;span class="no"&gt;prvfile: False&lt;/span&gt;
            &lt;span class="no"&gt;pubfile: /root/.ssh/id_rsa.pub&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Overall, this is pretty simple, but amazingly effective.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="user-accounts"&gt;
&lt;h3&gt;User Accounts&lt;/h3&gt;
&lt;p&gt;At this point, all of the servers are ready to back up their data. They just
aren't able to yet because the backup server is sitting there empty with no user
accounts.&lt;/p&gt;
&lt;p&gt;This part is surprisingly easy as well. I simply use salt to create a separate
jailed home directory for every server in the environment. The salt master
already has the public SSH keys for every server in addition to the servers
hostname.&lt;/p&gt;
&lt;p&gt;To keep things simple, this example does not include jails.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;server&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;keys&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;salt&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mine.get&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;](&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ssh.user_keys&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;.items&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;server&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="nt"&gt;user.present&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;server&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;createhome&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;True&lt;/span&gt;
  &lt;span class="nt"&gt;ssh_auth.present&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;server&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;names&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;[&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;root&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id_rsa.pub&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; &lt;span class="p p-Indicator"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Ensures the user directory is never readable by others&lt;/span&gt;
&lt;span class="nt"&gt;/home/&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;server&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nt"&gt;file.directory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;server&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;group&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;server&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;0700&amp;#39;&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;require&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;server&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will get user accounts created on the backup server, add the SSH public
key to the users trusted keychain, and force the users home directory to be set
to 700 which prevents other users/groups from accessing the data.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="backup-archives"&gt;
&lt;h3&gt;Backup Archives&lt;/h3&gt;
&lt;p&gt;Now that data is getting from all servers to the backup server, it's time to
start having more than a single copy of the data. The best tool I could find for
this job was rsnapshot. I simply point rsnapshot at /home (or /srv/jails) and
keep data stored where the existing servers can't access it. This means no
compromised server can destroy any previous backups.&lt;/p&gt;
&lt;p&gt;I broke some of my own rules and have rsnapshot also backing up my pfSense device
as well as my Cisco switch configurations. I'll get a better solution in place
for those, but that is it's own project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ice-ice-baby"&gt;
&lt;h3&gt;Ice Ice Baby&lt;/h3&gt;
&lt;p&gt;At this point, we have a rather complete backup option that meets nearly
everything I care about. So far, we're at $0.00 to build this solution.
However, off-site backups haven't been included.&lt;/p&gt;
&lt;p&gt;Do you want to trust your buddy and arrange to share backups with each other?
Hopefully the obvious answer to everyone is an emphatic NO.&lt;/p&gt;
&lt;p&gt;The only two reasonable options I found were AWS Glacier and Google Nearline.
Because we're talking about data that you should never need to actually access,
the two options are very comparable. Google Nearline advertises fastest time to
first byte; however, the more you pull down, the slower your retrieval rate is.
AWS Glacier advertises cheapest storage, but the faster you want your data, the
more you get to pay.&lt;/p&gt;
&lt;p&gt;The important thing to remember is that you're dealing with an off-site backup.
You are &amp;quot;putting it on ice.&amp;quot; If nothing ever breaks, the only time you will ever
access this data is to verify your backup process.&lt;/p&gt;
&lt;p&gt;I wrote a relatively simple script that runs on a cron (2x/mo) that:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Creates a squashfs image of the entire rsnapshot archive&lt;/li&gt;
&lt;li&gt;Encrypts the quashfs image with a public GPG key&lt;/li&gt;
&lt;li&gt;Uploads the encrypted image&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I created a GPG key pair for this single process, encrypted the private key with
my personal key, moved multiple copies (including paper) to various locations,
and removed the private key from the server.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="wrapping-up"&gt;
&lt;h2&gt;Wrapping Up&lt;/h2&gt;
&lt;p&gt;There are a &lt;em&gt;lot&lt;/em&gt; of backup options that exist. I have concerns about nearly
every option that exists, including most commercial/enterprise offerings. To
have a backup solution that I considered reasonably secure, I had to spend a
lot of time thinking through the process and researching many different tools.&lt;/p&gt;
&lt;p&gt;I very much hope that what I put here will prove useful to other people trying
address similar concerns. As always, I'm more than eager to answer questions.&lt;/p&gt;
&lt;/div&gt;
</content><category term="linux"></category><category term="infrastructure"></category><category term="backups"></category><category term="linux"></category><category term="security"></category></entry><entry><title>Ground Up Infrastructure</title><link href="https://michael.lustfield.net/misc/ground-up-infrastructure" rel="alternate"></link><published>2016-01-02T00:00:00-06:00</published><updated>2016-01-02T00:00:00-06:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2016-01-02:/misc/ground-up-infrastructure</id><summary type="html">&lt;p&gt;I've been working with a company that recently lost a very large amount of their
infrastructure. Not only were servers lost, but also backups, application data,
and much more. Unfortunately, I'm not at liberty to share too many details, but
I am able to say that it was the situation …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been working with a company that recently lost a very large amount of their
infrastructure. Not only were servers lost, but also backups, application data,
and much more. Unfortunately, I'm not at liberty to share too many details, but
I am able to say that it was the situation your worst nightmares are made of.&lt;/p&gt;
&lt;p&gt;Very recently, I also lost all of my personal infrastructure. I lost all virtual
machines, VM hosts, networking configuration, router configs, firewall rules,
backups, the other backups, the third set of backups, AP configs, etc. It was
rather brutal. The only thing I got to keep was my laptop and anything I've put
on a public service.&lt;/p&gt;
&lt;div class="section" id="disaster-recovery"&gt;
&lt;h2&gt;Disaster Recovery&lt;/h2&gt;
&lt;p&gt;First of all, both situations had very different causes. One was malicious and
the other was entirely PEBKAC. The company I've been working with was quite
fortunate and, because of some encryption, the tapes were able to be recovered.&lt;/p&gt;
&lt;p&gt;The lesson learned here is that just having a disaster recovery plan and testing
it isn't enough. You need to test it from &lt;em&gt;NOTHING&lt;/em&gt;. Don't test restoring a VM
onto a hypervisor. Test it by building a new UCS fabric interconnect from only
what you would have available if your building disappeared this second.&lt;/p&gt;
&lt;p&gt;In my personal situation, there was &lt;em&gt;nothing&lt;/em&gt; to go back to. So, I got to build
my personal infrastructure from the group all the way back up to the top. How
this happens is a question I've been asked many times. Instead of trying to
explain it each time, I decided I'd prefer just write about it and hope that the
information is valuable to others. If I provide poor information, I hope I get
yelled at so that I can correct any mistakes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-basics"&gt;
&lt;h2&gt;The Basics&lt;/h2&gt;
&lt;p&gt;Where a person (or organization) chooses to start rebuilding from scratch is
entirely up to them. In a larger organization, I would expect to see each piece
managed by a separate team that I would hope are communicating effectively.&lt;/p&gt;
&lt;p&gt;The basics that nearly every infrastructure has:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Switches&lt;/li&gt;
&lt;li&gt;Routers&lt;/li&gt;
&lt;li&gt;Physical Servers&lt;/li&gt;
&lt;li&gt;Virtual Servers&lt;/li&gt;
&lt;li&gt;Hypervisors&lt;/li&gt;
&lt;li&gt;Access Points&lt;/li&gt;
&lt;li&gt;Backups&lt;/li&gt;
&lt;li&gt;VLAN's&lt;/li&gt;
&lt;li&gt;Backups&lt;/li&gt;
&lt;li&gt;Configuration Management Systems&lt;/li&gt;
&lt;li&gt;Git Server&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Yes, as a matter of fact, I &lt;em&gt;do&lt;/em&gt; consider git and salt (configuration management)
to be critical pieces. You should too. Having all salt data held within git is
the only reason I was able to get things back up as quickly as I did.&lt;/p&gt;
&lt;p&gt;My preference was to start with the switch configs. Thanks to salt, I just copied
and pasted the previous configuration I had on my laptop. Next up was the VM Host.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="preparations"&gt;
&lt;h2&gt;Preparations&lt;/h2&gt;
&lt;p&gt;Before getting started, I connected to my cable modem directly with my laptop and
then downloaded a proxmox and pfsense ISO. With my particular setup and the order
this particular rebuild was happening in, those were the &amp;quot;off-line&amp;quot; resources I
needed to aquire.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="vm-host"&gt;
&lt;h2&gt;VM Host&lt;/h2&gt;
&lt;p&gt;I chose proxmox because I have a lot of experience with it and it runs on Debian.
If you're not me, it might be wise to explore your options. I also chose to
install proxmox entirely off of the network because it couldn't have reached the
Internet anyway and I didn't want to deal with the cabling or switch port
configurations.&lt;/p&gt;
&lt;p&gt;The proxmox installer is pretty dumb. You select a disk, IP settings, and that's
pretty much it. After the installation finishes, it's time to configure it. Since
this is Debian and I'm familiar with the way proxmox interacts with it, I went
directly into &lt;cite&gt;/etc/network/interfaces&lt;/cite&gt; and modified it to be exactly what I
wanted to be there. I also got to edit udev rules to modify ethX assignments.&lt;/p&gt;
&lt;p&gt;WAN:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;WAN -&amp;gt; eth2&lt;/li&gt;
&lt;li&gt;eth2 -&amp;gt; vmbr1&lt;/li&gt;
&lt;li&gt;vmbr1 -- &amp;lt;WAN_IF_on_pfSense&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LAN:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;eth0 -&amp;gt; bond0&lt;/li&gt;
&lt;li&gt;eth1 -&amp;gt; bond0&lt;/li&gt;
&lt;li&gt;bond0 -&amp;gt; vmbr0 (802.3ad)&lt;/li&gt;
&lt;li&gt;vmbr0 -- &amp;lt;LAN_Interfaces_with_VLAN_Tag&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once configured, the VM host could be reattached to the switch without troubles.&lt;/p&gt;
&lt;p&gt;I connected to the proxmox web interface from my laptop, logged in, and created
a VM (not container). This VM had one interface for vmbr0 and one for vmbr1. This
is the &lt;em&gt;ONLY&lt;/em&gt; system that ever does anything with vmbr1 or eth2. They are off
limits to every other system including the host itself. There is one additional
NIC attached per VLAN with the appropriate VLAN tag.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="router"&gt;
&lt;h2&gt;Router&lt;/h2&gt;
&lt;p&gt;Now that the VM Host is up and has the VM created, it's time to spin up a virtual
router. After uploading the pfSense ISO, I attached it to the VM and booted it up.
The pfSense installation is pretty straight forward. Remember to double check the
MAC addresses to ensure they match the interface you're configuring.&lt;/p&gt;
&lt;p&gt;I had to temporarily enable DHCP on the LAN interface while getting things
rocking, but eventually stuck all servers into their own VLAN without DHCP and
removed DHCP from LAN. DHCP (and DHCPv6) was only enabled on the guest, non-guest,
and lab networks. Using static IP addresses means a faster boot time, but it also
means less attack surfaces.&lt;/p&gt;
&lt;p&gt;When configuring VLAN's, be careful what you choose. If you're too restrictive up
front, you'll run yourself into walls. If you're too open, you'll do the same.
However, if you're using strictly IPv6 on a properly deployed, it's entirely
irrelevant. You'll have exactly one /64 per subnet.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="switch"&gt;
&lt;h2&gt;Switch&lt;/h2&gt;
&lt;p&gt;If I didn't have a switch configuration already available, this is where I would
have started working on the switch. I configured an access port to be in the
correct VLAN and connected my laptop to it. Then I grabbed a DHCP address.&lt;/p&gt;
&lt;p&gt;Once I was able to grab this address and talk to the Internet, I decided it was
time for sleep. It was already 05:00 by this point.&lt;/p&gt;
&lt;p&gt;The only thing that was really special was having a pair of switch ports set up
with LACP set up as a trunk port as well as another trunk port for my access
point. The remaining ports were set up as standard access ports that were set to
their correct VLAN.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="temp-wlc"&gt;
&lt;h2&gt;Temp WLC&lt;/h2&gt;
&lt;p&gt;So far, I've been dealing with physical network connections. About now, I was
getting quite frustrated with being connected to a wire.&lt;/p&gt;
&lt;p&gt;I deployed a temporary Wireless LAN Controller (WLC) VM to get the AP configured.
Once deployed, I let the software configure the AP, configured the correct VLAN
per SSID. I didn't get fancy at this point because it's all temporary.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="openvpn"&gt;
&lt;h2&gt;OpenVPN&lt;/h2&gt;
&lt;p&gt;Now that I was comfortably working on my sofa, I decided to configure OpenVPN on
pfSense. If you're going to do this, I strongly recommend installing the &amp;quot;OpenVPN
Client Export Utility&amp;quot; because it makes life happy and grand.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="dynamic-dns"&gt;
&lt;h2&gt;Dynamic DNS&lt;/h2&gt;
&lt;p&gt;This infrastructure is at a residental address and the ISP available no longer
offers any static addresses. I set up DynDNS for the public address. Thankfully,
this doesn't change unless the cable modem loses power.&lt;/p&gt;
&lt;p&gt;Everything is connected to a UPS that has been &amp;quot;slightly&amp;quot; modified to last
&amp;quot;slightly&amp;quot; longer. This takes the appearance of two very large deep cycle
batteries that could run 100% of my infrastructure (modem, VM host, wireless AP,
etc.) for over a full day. That's more than sufficient in  my book. :D&lt;/p&gt;
&lt;p&gt;I happen to use Hurricane Electric for DNS. Within their interface, you can
optionally select a record for Dynamic DNS. Afetr enabling it, there is a refresh
icon on that line that you can select to generate a random key. Within pfSense,
while creating the DynDNS entry, you'll need to configure these options:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Service Type: he.net OR he.net (v6)&lt;/li&gt;
&lt;li&gt;Hostname: &amp;lt;fqdn_of_dyndns_entry&amp;gt;&lt;/li&gt;
&lt;li&gt;Username: &amp;lt;fqdn_of_dyndns_entry&amp;gt;&lt;/li&gt;
&lt;li&gt;Password: &amp;lt;generated_key&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="ipv6"&gt;
&lt;h2&gt;IPv6&lt;/h2&gt;
&lt;p&gt;My ISP only offers a /64 for the entire network. If only they'd heard about RFC's
and the value of following them. I need a minimum of a /60 for my network. This
forced me to ignore native IPv6 from my ISP, I wound up using Tunnel Broker to get
the /48 that my ISP should be providing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="vm-template"&gt;
&lt;h2&gt;VM Template&lt;/h2&gt;
&lt;p&gt;Now it's time to build a VM template for the virtual machines that will become
the production image. To get started, I downloaded a copy of the Debian 8 template
through the proxmox web interface.&lt;/p&gt;
&lt;p&gt;We'll assume the file is named /tmp/debian-8.0-standard.tar.gz. To open this
archive for editing:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;mkdir /tmp/d&lt;/li&gt;
&lt;li&gt;tar -zx -C /tmp/d -f /tmp/debian-8.0-standard.tar.gz&lt;/li&gt;
&lt;li&gt;mount -o rbind /dev /tmp/d/dev&lt;/li&gt;
&lt;li&gt;mount -t sysfs none /tmp/d/sys&lt;/li&gt;
&lt;li&gt;mount -t tmpfs none /tmp/d/tmp&lt;/li&gt;
&lt;li&gt;mount -t proc  none /tmp/d/proc&lt;/li&gt;
&lt;li&gt;cp /etc/resolv.conf /tmp/d/etc/resolve.conf&lt;/li&gt;
&lt;li&gt;chroot /tmp/d /bin/bash&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Next up, we want to modify the template. Things I did:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;aptitude # remove any excess cruft you don't want&lt;/li&gt;
&lt;li&gt;aptitude install vim screen salt-minion apt-transport-https&lt;/li&gt;
&lt;li&gt;echo 'master: $fqdn_or_ip' &amp;gt;/etc/salt/minion.d/master.conf&lt;/li&gt;
&lt;li&gt;salt-call state.sls sys.files.salt,sys.files.apt&lt;/li&gt;
&lt;li&gt;aptitude update; aptitude upgrade; aptitude clean&lt;/li&gt;
&lt;li&gt;aptitude purge -y --purge-unused ~c&lt;/li&gt;
&lt;li&gt;dpkg-reconfigure locales&lt;/li&gt;
&lt;li&gt;/etc/init.d/salt-minion stop&lt;/li&gt;
&lt;li&gt;rm -Rf /etc/salt/minion_id /etc/salt/pki&lt;/li&gt;
&lt;li&gt;cat /dev/null &amp;gt;/etc/resolv.conf; exit&lt;/li&gt;
&lt;li&gt;rm /tmp/d/root/.bash_history&lt;/li&gt;
&lt;li&gt;umount /tmp/d/&lt;em&gt;/&lt;/em&gt;; umount /tmp/d/*&lt;/li&gt;
&lt;li&gt;tar -czp -f /tmp/debian-8-&amp;lt;your_tag&amp;gt;.tar.gz * -C /tmp/d&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This new tarball just needs to be uploaded to your VM host.&lt;/p&gt;
&lt;p&gt;Side note, the packages I had installed went from 404 to 191 after removing what
I considered extra cruft. That's 213 packages times the number of servers that
won't need to be updated.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="salt-master"&gt;
&lt;h2&gt;Salt Master&lt;/h2&gt;
&lt;p&gt;It's exciting to finally be at this point. It's pretty much pain free from this
point on. In my opinion, configuration management is one of the absolute critical
pieces of every infrastructure and my choice is salt. I deployed the new template
and installed salt-master on it. Then I configured &lt;cite&gt;/etc/salt/master.d/main.conf&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;For the moment, I'll point salt-master at &lt;cite&gt;/srv/salt/{states,data,pillar}/&lt;/cite&gt;. Then
I wrote the states that now manage salt-master configs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="git-server"&gt;
&lt;h2&gt;Git Server&lt;/h2&gt;
&lt;p&gt;Next up is the git server! Deploy the VM template, create salt states to configure
your choice of a git server. My choice was gogs (GO Git Service). It feels like a
somewhat clunky version of gitlab with all of the feauters that I actually use
but has a massively smaller footprint.&lt;/p&gt;
&lt;p&gt;Once this was up, I created a system account and group so that the salt master
could access the salt states. Then I moved &lt;cite&gt;/srv/salt/{states,data,pillar}&lt;/cite&gt; to
their own repositories that the salt master could access. Then I modified the
master config (using salt) to point at the git server instead of the local file
system. Last, but not least, &lt;cite&gt;rm -rf /srv/salt&lt;/cite&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="permanent-wlc"&gt;
&lt;h2&gt;Permanent WLC&lt;/h2&gt;
&lt;p&gt;At this point, we're ready to deploy every single server by pushing commits to
the git repositories. This is where I destroyed the old temporary WLC and created
a new WLC server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="security"&gt;
&lt;h2&gt;Security&lt;/h2&gt;
&lt;p&gt;Hurray! I've now described exactly what my home network looks like and how to
build it. Should I now be paranoid about getting attacked? Yup, absolutely! We all
need to be paranoid all of the time. Keeping software in use hidden isn't anything
I've ever considered to be confidential information.&lt;/p&gt;
&lt;p&gt;On that note, one level of paranoia that I love is having a special VLAN for
accessing the server network. This means that, even if you get connected to my
non-guest network, it still doesn't mean you can talk to my server network.&lt;/p&gt;
&lt;p&gt;I'm also pretty strict about firewall rules. Every connection in to or out of any
VLAN needs an explicit firewall rule.&lt;/p&gt;
&lt;p&gt;There are billions of things a person can do to decrease security risk. I'd love
to discuss many of them and might just need to write a separate blog post about
it. The bottom line, though, is that security by obscurity or secrecy is not
reliable security. If you build a strong and secure infrastructure, you should be
able to feel confident explaining the intricacies of your network. Unless, of
course, you're paranoid.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-comes-next"&gt;
&lt;h2&gt;What Comes Next&lt;/h2&gt;
&lt;p&gt;After finishing all of that, I deployed a logging server and an apt caching proxy
followed by writing salt states to make servers report to them. Next up is the
backup server and configuring external backups.&lt;/p&gt;
&lt;/div&gt;
</content><category term="misc"></category><category term="infrastructure"></category><category term="debian"></category><category term="networking"></category><category term="virtualization"></category></entry><entry><title>Geo Point with Elasticsearch 2.x</title><link href="https://michael.lustfield.net/misc/geo-point-with-elasticsearch-2x" rel="alternate"></link><published>2015-12-22T00:00:00-06:00</published><updated>2015-12-22T00:00:00-06:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2015-12-22:/misc/geo-point-with-elasticsearch-2x</id><summary type="html">&lt;p&gt;I was recently brought into an interesting project that deals with analyzing
some exciting data. I have my preferred search solutions and hate java, but
I had to bite my tongue and acknowledge an ELK stack is the best tool for this
particular job.&lt;/p&gt;
&lt;div class="section" id="elk-stack"&gt;
&lt;h2&gt;ELK Stack&lt;/h2&gt;
&lt;p&gt;An &amp;quot;ELK stack&amp;quot; refers …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I was recently brought into an interesting project that deals with analyzing
some exciting data. I have my preferred search solutions and hate java, but
I had to bite my tongue and acknowledge an ELK stack is the best tool for this
particular job.&lt;/p&gt;
&lt;div class="section" id="elk-stack"&gt;
&lt;h2&gt;ELK Stack&lt;/h2&gt;
&lt;p&gt;An &amp;quot;ELK stack&amp;quot; refers to logstash, elasticsearch, and kibana. It's worth noting
that one should always ensure the versions they use match up on the compatibility
matrix.&lt;/p&gt;
&lt;p&gt;Back in the kibana 3 days, things were pretty magical. There was less integration
with elasticsearch and kibana was mostly left up to guess what was in elasticsearch.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="kibana-4"&gt;
&lt;h2&gt;Kibana 4&lt;/h2&gt;
&lt;p&gt;Kibana 4 has significantly more features and more integration with elasticsearch,
but it means a lot of added complexity. The number one headache I faced was
putting a geo_point into elasticsearch so that kibana 4 could plot it. I had the
geo coordinates, so it seemed like sticking it into a geo_point field should be
absolutely trivial.&lt;/p&gt;
&lt;p&gt;Unfortunately, you can't just tell logstash that these coordinates are
geographical coordinates. That's because logstash will speak JSON and geo_point
is not a valid type.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="elk-and-geo-point"&gt;
&lt;h2&gt;ELK and geo_point&lt;/h2&gt;
&lt;p&gt;In order to get our coordinates from logstash to a kibana 4 map, we have two
options. Our first option is to issue a curl request against elasticsearch that
will modify the index. In my opinion, this is a sub-par option. The other option
is to generate a new template to be used on a new index that includes the
coordinates. This means doing everything within logstash.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="logstash-template"&gt;
&lt;h2&gt;Logstash Template&lt;/h2&gt;
&lt;p&gt;The default template for any elasticsearch index matching &amp;quot;logstash-*&amp;quot; is
&amp;quot;elasticsearch-template.json&amp;quot; and it's location depends on how you chose to
install logstash.&lt;/p&gt;
&lt;p&gt;It's contents will look like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;template&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;logstash-*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;settings&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;index.refresh_interval&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;5s&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;mappings&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;_default_&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;quot;_all&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;enabled&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;omit_norms&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;quot;dynamic_templates&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;quot;message_field&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;quot;match&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;quot;match_mapping_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;quot;mapping&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
             &lt;span class="nt"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;index&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;analyzed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;omit_norms&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
           &lt;span class="p"&gt;}&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt;
       &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;quot;string_fields&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;quot;match&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;quot;match_mapping_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;quot;mapping&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
             &lt;span class="nt"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;index&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;analyzed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;omit_norms&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;quot;fields&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                 &lt;span class="nt"&gt;&amp;quot;raw&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;index&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;not_analyzed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;ignore_above&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
               &lt;span class="p"&gt;}&lt;/span&gt;
           &lt;span class="p"&gt;}&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;quot;properties&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;quot;@version&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;index&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;not_analyzed&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;quot;geoip&amp;quot;&lt;/span&gt;  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;object&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="nt"&gt;&amp;quot;dynamic&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="nt"&gt;&amp;quot;properties&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;quot;location&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;geo_point&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
             &lt;span class="p"&gt;}&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This geoip field is for if we're providing an IP address that we want processed
and turned into geographical coordinates. In our scenario, we already have this
data, so this field is useless. However, we do need a geo_point field.&lt;/p&gt;
&lt;p&gt;Let's create /etc/logstash/templates/monster.json:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;template&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;monster-*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;settings&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;index.refresh_interval&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;60s&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;mappings&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;_default_&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;quot;_all&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;enabled&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;omit_norms&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;quot;dynamic_templates&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;message_field&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;quot;match&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;quot;match_mapping_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;quot;mapping&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;index&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;analyzed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;omit_norms&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;string_fields&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;quot;match&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;quot;match_mapping_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;quot;mapping&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;index&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;analyzed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;omit_norms&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;fields&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;quot;raw&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;index&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;not_analyzed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;ignore_above&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;quot;properties&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;@version&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;index&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;not_analyzed&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;lonlat&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;geo_point&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What changed:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Template name changed&lt;/li&gt;
&lt;li&gt;The geoip object was removed&lt;/li&gt;
&lt;li&gt;The lonlat field was added&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="logstash-configuration"&gt;
&lt;h2&gt;Logstash Configuration&lt;/h2&gt;
&lt;p&gt;Everything in logstash is driven by the configuration files. These are usually
located in /etc/logstash/conf.d/&amp;lt;filename&amp;gt;.conf.&lt;/p&gt;
&lt;p&gt;To get this working, we need to ensure that the lonlat field is populated and we
need to make sure the output uses the correct index name and template.&lt;/p&gt;
&lt;p&gt;The filter { } section is relatively simple. In my case, I had the data, but the
longitude and latitude fields were flipped.&lt;/p&gt;
&lt;p&gt;My filter section of /etc/logstash/conf.d/monster.json:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;filter {
  # Monster Attacks
  if [type] == &amp;quot;monster_data&amp;quot; {
    # [...]
    if [monster_location] {
      grok {
        match =&amp;gt; [ &amp;quot;monster_location&amp;quot;, &amp;quot;%{BASE10NUM:latitude:float},%{BASE10NUM:longitude:float}&amp;quot; ]
      }
      mutate {
        add_field =&amp;gt; [ &amp;quot;[lonlat]&amp;quot;, &amp;quot;%{longitude}&amp;quot; ]
        add_field =&amp;gt; [ &amp;quot;[lonlat]&amp;quot;, &amp;quot;%{latitude}&amp;quot; ]
      }
    }
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The next thing we need is an output to elasticsearch that pulls all of these
modifications together.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;output {
  if [type] == &amp;quot;monster_data&amp;quot; {
    # Send to elasticsearch set hosts entry to the IP of your elasticsearch node
    elasticsearch {
      template =&amp;gt; &amp;quot;/etc/logstash/templates/monster.json&amp;quot;
      template_overwrite =&amp;gt; true
      hosts =&amp;gt; &amp;quot;127.0.0.1:9200&amp;quot;
      workers =&amp;gt; &amp;quot;2&amp;quot;
      index =&amp;gt;  &amp;quot;monster-%{+YYYY.MM.dd}&amp;quot;
    }
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is an output to elasticsearch that uses our custom template.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="summary"&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;Now, feel free to start ingesting data. When you try to plot these points on a
map within Kibana 4, you'll be able to use the lonlat field that we created.&lt;/p&gt;
&lt;p&gt;Overall, this is actually a &lt;em&gt;very&lt;/em&gt; simple thing to do. It's just been documented
very poorly. I hope that this helps others learn about storing a geo_point field
as well as working with logstash templates. :)&lt;/p&gt;
&lt;/div&gt;
</content><category term="misc"></category><category term="elasticsearch"></category><category term="kibana"></category><category term="logstash"></category><category term="geo"></category></entry><entry><title>Getting a Perfect SSL Labs Score</title><link href="https://michael.lustfield.net/nginx/getting-a-perfect-ssl-labs-score" rel="alternate"></link><published>2015-01-19T16:45:00-06:00</published><updated>2015-01-19T16:45:00-06:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2015-01-19:/nginx/getting-a-perfect-ssl-labs-score</id><summary type="html">&lt;p&gt;&lt;img alt="ssllabs_100.png" src="/files/uploads/ssllabs_100.png" style="width: 100%;" /&gt;&lt;/p&gt;
&lt;p&gt;Running web servers is both fun and infuriating. We get to do some really neat
and fun things, sure. We also have an ever changing battlefield. When we sleep,
the other guys are wide awake. Keeping a web server secure is tough.&lt;/p&gt;
&lt;p&gt;Just one of the many battles in this …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="ssllabs_100.png" src="/files/uploads/ssllabs_100.png" style="width: 100%;" /&gt;&lt;/p&gt;
&lt;p&gt;Running web servers is both fun and infuriating. We get to do some really neat
and fun things, sure. We also have an ever changing battlefield. When we sleep,
the other guys are wide awake. Keeping a web server secure is tough.&lt;/p&gt;
&lt;p&gt;Just one of the many battles in this war is SSL. If you have a website that
either provides or accepts private data, you /should/ already know that SSL is
not an option, it's a requirement. I say should because that's proven to not be
an obvious fact.&lt;/p&gt;
&lt;p&gt;If you're on this page, then you know that you need or want SSL and are looking
for the best configuration settings. Congratulations, I already like you better.&lt;/p&gt;
&lt;p&gt;Obviously, I'll only be discussing Nginx since it's the only real web server. ;)&lt;/p&gt;
&lt;div class="section" id="certificate"&gt;
&lt;h2&gt;Certificate&lt;/h2&gt;
&lt;p&gt;This section is easy to get 100% on.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Make sure your cert and chain are in the correct order.&lt;/li&gt;
&lt;li&gt;Don't use SHA1 (use SHA256) for the signature algorithm.&lt;/li&gt;
&lt;li&gt;Use a well known/trusted CA.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SSL Labs is pretty good about being descriptive about any issues here.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="protocol-support"&gt;
&lt;h2&gt;Protocol Support&lt;/h2&gt;
&lt;p&gt;The best place to start with securing your website is protocol support. It's a
given that you shouldn't be using SSLv2. It should also be a given that you
should no longer be using SSLv3. The recent POODLE vulnerability pretty much put
the final knife in it.&lt;/p&gt;
&lt;p&gt;This means you should only support the TLS protocols.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;ssl_protocols&lt;/span&gt; &lt;span class="s"&gt;TLSv1&lt;/span&gt; &lt;span class="s"&gt;TLSv1.1&lt;/span&gt; &lt;span class="s"&gt;TLSv1.2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is reasonably secure. However, we want a &amp;quot;perfect&amp;quot; score. This will give
you a score of 95. Disabling TLSv1.0 gives you a 97. Disabling TLSv1.1 gives you
that last bit to 100.&lt;/p&gt;
&lt;p&gt;So, if you want a perfect score, you'll use this.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;ssl_protocols&lt;/span&gt; &lt;span class="s"&gt;TLSv1.2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="key-exchange"&gt;
&lt;h2&gt;Key Exchange&lt;/h2&gt;
&lt;p&gt;By default, Nginx will use the default DHE (Ephemeral Diffie-Hellman) paramaters
provided by openssl. This uses a weak key that gets lower scores. The best thing
to do is build your own. You can create a 2048 bit key, but let's go ahead and
toss 4096 at it.&lt;/p&gt;
&lt;p&gt;First, you need to build the file. I'm going to assume you keep SSL files in
/etc/nginx/ssl.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
openssl dhparam -out /etc/nginx/ssl/dhparam.pem 4096
&lt;/pre&gt;
&lt;p&gt;Then in your Nginx configuration, you'll need this.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;ssl_dhparam&lt;/span&gt; &lt;span class="s"&gt;ssl/dhparam.pem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="cipher-strength"&gt;
&lt;h2&gt;Cipher Strength&lt;/h2&gt;
&lt;p&gt;This one especially is ever changing. What's best today, may not be so hot
tomorrow. Here, you'll have a battle between high security and compatibility.
Keeping with the topic of this post, we care about security only.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;ssl_ciphers&lt;/span&gt; &lt;span class="s"&gt;AES256+EECDH:AES256+EDH:!aNULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ssl_prefer_server_ciphers&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="ssl-stapling"&gt;
&lt;h2&gt;SSL Stapling&lt;/h2&gt;
&lt;p&gt;SSL Stapling doesn't exactly make you any more secure, but it does help the
client significantly. In short, you help the client by telling them they can
use your server for OCSP information for your domain instead of letting the
browser make the request to an often unreliable resource.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;ssl_stapling&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ssl_stapling_verify&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="ssl-sessions"&gt;
&lt;h2&gt;SSL Sessions&lt;/h2&gt;
&lt;p&gt;Maintaining SSL Sessions is definitely a good thing for everyone if you expect
the user to be on your website for more than a single page view. These are
rather trivial settings.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;ssl_session_cache&lt;/span&gt; &lt;span class="s"&gt;shared:SSL:10m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ssl_session_timeout&lt;/span&gt; &lt;span class="mi"&gt;10m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="extra-ssl-ecdh-curve"&gt;
&lt;h2&gt;Extra: ssl_ecdh_curve&lt;/h2&gt;
&lt;p&gt;It turns out, some openssl implementations don't provide a nice default for nginx
to inherit, so it becomes a good idea to specify this manually. (Thanks James
from Penn State)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;ssl_ecdh_curve&lt;/span&gt; &lt;span class="s"&gt;secp384r1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It has been suggested x25519 is a more secure but slightly less compatible option.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="http-headers"&gt;
&lt;h2&gt;HTTP Headers&lt;/h2&gt;
&lt;p&gt;We'll also want to add a few headers.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;Strict-Transport-Security&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;max-age=31536000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;includeSubdomains&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;X-Frame-Options&lt;/span&gt; &lt;span class="s"&gt;DENY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;X-Content-Type-Options&lt;/span&gt; &lt;span class="s"&gt;nosniff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;They don't help you're score, but they're quite helpful.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="gzip"&gt;
&lt;h2&gt;Gzip&lt;/h2&gt;
&lt;p&gt;Some attacks are possible because of gzip being enabled on SSL requests. In
most cases, the best action is to simply disable gzip for SSL requests.&lt;/p&gt;
&lt;p&gt;SSL Blocks:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;gzip&lt;/span&gt; &lt;span class="no"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="putting-it-together"&gt;
&lt;h2&gt;Putting it Together&lt;/h2&gt;
&lt;p&gt;The command to run:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
openssl dhparam -out /etc/nginx/ssl/dhparam.pem 4096
&lt;/pre&gt;
&lt;p&gt;The Nginx configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;ssl_session_cache&lt;/span&gt; &lt;span class="s"&gt;shared:SSL:10m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ssl_session_timeout&lt;/span&gt; &lt;span class="mi"&gt;10m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ssl_protocols&lt;/span&gt; &lt;span class="s"&gt;TLSv1.2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ssl_prefer_server_ciphers&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ssl_ciphers&lt;/span&gt; &lt;span class="s"&gt;AES256+EECDH:AES256+EDH:!aNULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ssl_stapling&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ssl_stapling_verify&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ssl_dhparam&lt;/span&gt; &lt;span class="s"&gt;ssl/dhparam.pem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ssl_ecdh_curve&lt;/span&gt; &lt;span class="s"&gt;secp384r1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;Strict-Transport-Security&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;max-age=31536000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;includeSubdomains&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;X-Frame-Options&lt;/span&gt; &lt;span class="s"&gt;DENY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;X-Content-Type-Options&lt;/span&gt; &lt;span class="s"&gt;nosniff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In any server block listening for SSL:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;443&lt;/span&gt; &lt;span class="s"&gt;ssl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;# gzip should not be used with ssl&lt;/span&gt;
    &lt;span class="kn"&gt;gzip&lt;/span&gt; &lt;span class="no"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's not hard once you know the super-duper magic sauce. Just remember that you
are sacrificing compatibility for the sake of security. Enjoy!&lt;/p&gt;
&lt;/div&gt;
</content><category term="nginx"></category><category term="nginx"></category><category term="ssl"></category><category term="ssllabs"></category><category term="tls"></category></entry><entry><title>Book Review - Nginx Module Extension</title><link href="https://michael.lustfield.net/nginx/book-review-nginx-module-extension" rel="alternate"></link><published>2014-03-14T00:00:00-05:00</published><updated>2014-03-14T00:00:00-05:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2014-03-14:/nginx/book-review-nginx-module-extension</id><summary type="html">&lt;p&gt;I apparently do enough work with Nginx that people keep asking me to review
things. In this case, Packt asked me to review another book called &amp;quot;Nginx
Module Extension.&amp;quot; Well, a decent module development book doesn't exist, so
I'm rather excited to dive in!&lt;/p&gt;
&lt;div class="section" id="while-reading"&gt;
&lt;h2&gt;While Reading&lt;/h2&gt;
&lt;p&gt;Instead of just a …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I apparently do enough work with Nginx that people keep asking me to review
things. In this case, Packt asked me to review another book called &amp;quot;Nginx
Module Extension.&amp;quot; Well, a decent module development book doesn't exist, so
I'm rather excited to dive in!&lt;/p&gt;
&lt;div class="section" id="while-reading"&gt;
&lt;h2&gt;While Reading&lt;/h2&gt;
&lt;p&gt;Instead of just a summary when I'm done, I want to also include my reactions
while reading.&lt;/p&gt;
&lt;div class="section" id="table-of-contents"&gt;
&lt;h3&gt;Table of Contents&lt;/h3&gt;
&lt;p&gt;I hope I'm missing something, but it seems that the first 82 pages of this book
are focused on teaching you the basics of Nginx. That doesn't leave much for
discussing the actual module development. My assumption from the cover was that
we finally had a book explaining module development. I guess another book that
explains getting started would be okay.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="preface"&gt;
&lt;h3&gt;Preface&lt;/h3&gt;
&lt;p&gt;The preface mentions that:&lt;/p&gt;
&lt;blockquote&gt;
This book is for advanced users such as system administrators and developers
who want to extend Nginx's functionality using its highly flexible add-on system.
We look at the existing modules available and how to compile and install them,
along with practical examples of how to configure them with focus on optimizing
the configuration. It also goes beyond what is available off the shelf and teaches
you how to write your own module, in case something is not available from the
big Nginx open source community.&lt;/blockquote&gt;
&lt;p&gt;and:&lt;/p&gt;
&lt;blockquote&gt;
This book is intended for advanced users, system administrators, and developers
of Nginx modules.&lt;/blockquote&gt;
&lt;p&gt;Okay, so we actually can expect to dive into something. Maybe module development
within Nginx is much easier than I assumed. That would be a nice surprise.&lt;/p&gt;
&lt;p&gt;I do enjoy that the progression of this book is from absolute basics to in depth
and advanced usage.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="chapters-1-4"&gt;
&lt;h3&gt;Chapters 1-4&lt;/h3&gt;
&lt;p&gt;The first chapter briefly goes over installing Nginx on every OS I've heard of
it being installed on. Some of this was taken directly from the Nginx wiki which
is an excellent source of information. It's a relatively simple and easy to
follow chapter that gets through the basics.&lt;/p&gt;
&lt;p&gt;The second chapter discusses configuring the events and main modules.&lt;/p&gt;
&lt;p&gt;Chapter three explains configuration schematics and directives. It gets pretty
thorough without being boring. For a beginner, the information provided here is
very useful.&lt;/p&gt;
&lt;p&gt;Chapter four is the logical continuation of third party modules. This chapter
takes a long time to explain the use of a small number of third party modules.
The modules explained are useful and the explanation is thorough, but I would
have preferred seeing an overview of finding modules, documentation, and usage.&lt;/p&gt;
&lt;p&gt;In the end, I'm calling these sections the basic intro to Nginx. That would be
great if we weren't over half way through the book already.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="chapters-5"&gt;
&lt;h3&gt;Chapters 5&lt;/h3&gt;
&lt;p&gt;This dives into the very basic structure of a module. It also references files
within the Nginx source that provide further information about development.
This chapter takes a pretty quick dive into development of modules and explains
many different points of interaction between Nginx core and the module.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="chapter-6"&gt;
&lt;h3&gt;Chapter 6&lt;/h3&gt;
&lt;p&gt;Nope, that's it. We're done. After chapter 5, we have the index followed by some
advertising of more Nginx books by this publisher.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="after-reading"&gt;
&lt;h2&gt;After Reading&lt;/h2&gt;
&lt;p&gt;I enjoyed the basics of this book. It takes you through compiling and installing
Nginx as well as getting it configured properly. It does a solid job of making
you have a clue what's going on.&lt;/p&gt;
&lt;p&gt;Unfortunately, the actual module development, the title of the book, is very
lacking. It's just a pile of details to get you started and then abruptly ends.&lt;/p&gt;
&lt;p&gt;If the author added some more chapters to bring the development part together
and expand on initial concepts, this could have been an excellent book. If
you're looking for a basic intro to Nginx book, skip chapter five and get this.
If you want to dive into developing Nginx modules, this isn't the book for you.&lt;/p&gt;
&lt;/div&gt;
</content><category term="nginx"></category><category term="nginx"></category><category term="packt"></category><category term="review"></category></entry><entry><title>Blog With Pelican and Nginx</title><link href="https://michael.lustfield.net/nginx/blog-with-pelican-and-nginx" rel="alternate"></link><published>2013-08-08T00:00:00-05:00</published><updated>2013-08-08T00:00:00-05:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2013-08-08:/nginx/blog-with-pelican-and-nginx</id><summary type="html">&lt;p&gt;I used to be a big lover of Drupal as a blogging platform. It's incredibly easy
and trivial to deploy a new site with it and it comes with everything needed to
write a blog. It's also incredibly easy to extend and with little work the whole
SEO buzz stuff …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I used to be a big lover of Drupal as a blogging platform. It's incredibly easy
and trivial to deploy a new site with it and it comes with everything needed to
write a blog. It's also incredibly easy to extend and with little work the whole
SEO buzz stuff is pretty much already there. I've found that Wordpress makes it
pretty hard for search engines to handle your content, but it is almost strictly
a blogging platform.&lt;/p&gt;
&lt;p&gt;I've come to the realization that working on these platforms is just a pain in
the bum. I don't want to have to go out to a website, even if my own, to write
the the entry. Sure, you can load up an editor and write it in there, but that's
just another hassle.&lt;/p&gt;
&lt;p&gt;On top of that, when any page is accessed, the platform has to render that page
which is usually rather slow because it has to grab everything from a database
and then assemble it. Adding cache can help substantially, but it's still not
usually all that fast.&lt;/p&gt;
&lt;p&gt;So, I don't like these platforms anymore. As much as I was sold on them in the
past, I just can't justify them anymore. Well, if I don't want to render the
pages with every request and caching isn't enough, there's always static
content.&lt;/p&gt;
&lt;p&gt;Static content is great because it's fast. However, if you're creating all of
the content by hand, you get to repeat yourself rather frequently. You get to
make sure all your pages stay in sync. Yuck!&lt;/p&gt;
&lt;div class="section" id="in-comes-pelican"&gt;
&lt;h2&gt;In Comes Pelican&lt;/h2&gt;
&lt;p&gt;Pelican is a python application that's rather neat. You get to write your blog
content with restructuredtext or markdown. You have to set it up initially, but
once you're done, you can just keep writing away and never worry about what's
actually rendered. There's not really much to it. The best part is that because
of how it works, you can use plugins to generate pre-gzipped pages and serve
those when the browser will accept gzip encoding.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="getting-started"&gt;
&lt;h2&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;I'm going to explain how I utilize pelican for the very blog that you're reading
right now.&lt;/p&gt;
&lt;p&gt;First, you need to install pelican.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
aptitude install python-pelican
&lt;/pre&gt;
&lt;p&gt;If you're still with me, then great! You should have no troubles with the rest!&lt;/p&gt;
&lt;p&gt;Next up, the directory structure:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mkdir -p /var/www/myblog/{content,plugins}
touch /var/www/myblog/plugins/__init__.py
&lt;/pre&gt;
&lt;p&gt;Followed by getting some themes others have contributed:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git clone https://github.com/getpelican/pelican-themes.git /var/www/myblog/themes
&lt;/pre&gt;
&lt;p&gt;We'll follow that by grabbing two plugins that I personally find mandatory:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
wget https://raw.github.com/getpelican/pelican-plugins/master/sitemap/sitemap.py -O /var/www/myblog/plugins/sitemap.py
wget https://github.com/getpelican/pelican-plugins/blob/master/gzip_cache/gzip_cache.py -O /var/www/myblog/plugins/gzip_cache.py
&lt;/pre&gt;
&lt;p&gt;Now we need to write a configuration file.&lt;/p&gt;
&lt;p&gt;vim /var/www/myblog/pelicanconf.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;michael&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Michael Lustfield&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://michael.lustfield.net&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;PAGE_DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;content/pages&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;WITH_FUTURE_DATES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;RELATIVE_URLS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;America/Chicago&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;en&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;TYPOGRIFY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;./themes/syte&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;FEED_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rss.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;/rss.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;

&lt;span class="n"&gt;ARTICLE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;{category}&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="si"&gt;{slug}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;ARTICLE_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;{category}&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="si"&gt;{slug}&lt;/span&gt;&lt;span class="s1"&gt;.htm&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;GOOGLE_ANALYTICS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt; YOUR GA CODE &amp;gt;&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;PLUGINS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;plugins.sitemap&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;plugins.gzip_cache&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;SITEMAP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;format&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;priorities&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;indexes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;pages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;changefreqs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;monthly&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;indexes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;daily&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;pages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;monthly&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is almost the exact configuration I use for my blog. I use a different
theme and have the GOOGLE_ANALYTICS variable filled in. Beyond that, this is it.&lt;/p&gt;
&lt;p&gt;Some notes about this...&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The content will generate links without the .htm&lt;/li&gt;
&lt;li&gt;The pages will be generated with the .htm extension&lt;/li&gt;
&lt;li&gt;There is a subdirectory created for each category&lt;/li&gt;
&lt;li&gt;All the posts in that category wind up under that directory&lt;/li&gt;
&lt;li&gt;There is an rss.xml file generated under each subdirectory for that category&lt;/li&gt;
&lt;li&gt;There is still an /rss.xml file generated&lt;/li&gt;
&lt;li&gt;The &amp;quot;slug&amp;quot; (name of the file without the extension) will be used for the URI&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I choose to put .htm files on the file system because that makes sense. However,
it doesn't let me use pretty permalinks. I don't want .html in every request.
When we get to the nginx part, we'll tell it to see if the requested file exists
on the file system with either .htm or .html extension first.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="writing-content"&gt;
&lt;h2&gt;Writing Content&lt;/h2&gt;
&lt;p&gt;A blog is useless without content. The Pelican docs have a &lt;a class="reference external" href="http://docs.getpelican.com/en/3.2/getting_started.html#writing-content-using-pelican"&gt;Getting Started&lt;/a&gt;
page that explains writing content. I'm just going to go through the basics.&lt;/p&gt;
&lt;p&gt;Figure out the categories you want. These should be generic and sensible. For
my blog, I have linux, nginx, rambling, and misc. You should always have a
misc category, even if it's not used. You'll also want a directory for pages
that aren't part of your blog.&lt;/p&gt;
&lt;p&gt;So...&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mkdir /var/www/myblog/content/{linux,nginx,rambling,misc,pages}
&lt;/pre&gt;
&lt;p&gt;So, let's say we want to write a blog about Linux and grafiti.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
vim /var/www/myblog/content/linux/linux-and-grafiti.rst
&lt;/pre&gt;
&lt;p&gt;Yay, we're now writing a blog post in the linux category about linux and
grafiti. The blog entry will look like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gh"&gt;Linux, Grafiti, and You&lt;/span&gt;
&lt;span class="gh"&gt;=======================&lt;/span&gt;
&lt;span class="nc"&gt;:date:&lt;/span&gt; 2013-12-05
&lt;span class="nc"&gt;:tags:&lt;/span&gt; linux, grafiti

Some content written with restructuredtext...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That's all there is to writing content! Se the &lt;a class="reference external" href="http://docs.getpelican.com/en/3.2/getting_started.html#writing-content-using-pelican"&gt;Getting Started&lt;/a&gt; page in the
Pelican docs to get further details.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="publishing-content"&gt;
&lt;h2&gt;Publishing Content&lt;/h2&gt;
&lt;p&gt;Run the command:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
pelican -s /var/www/myblog/pelicanconf.py
&lt;/pre&gt;
&lt;p&gt;and your content will be generated in output/.&lt;/p&gt;
&lt;p&gt;Want to update your content? It's the same command. You can put that in a
cron task if you like. If you put it in cron, you'll probably want to add the
-q flag as well.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="making-nginx-serve-content"&gt;
&lt;h2&gt;Making Nginx Serve Content&lt;/h2&gt;
&lt;p&gt;First, we need to install Nginx:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
aptitude install nginx-light
&lt;/pre&gt;
&lt;p&gt;If you have a default server block, it's only there as an example. Feel free to
get rid of it:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
rm /etc/nginx/sites-enabled/default
&lt;/pre&gt;
&lt;p&gt;Now we need to write a configuration file for the blog.&lt;/p&gt;
&lt;p&gt;vim /etc/nginx/conf.d/myblog.conf:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="s"&gt;[::]:80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;example.com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;root&lt;/span&gt; &lt;span class="s"&gt;/var/www/myblog/output&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;# Instead of handling the index, just&lt;/span&gt;
        &lt;span class="c1"&gt;# rewrite / to /index.html&lt;/span&gt;
        &lt;span class="kn"&gt;rewrite&lt;/span&gt; &lt;span class="s"&gt;^&lt;/span&gt; &lt;span class="s"&gt;/index.html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;# Serve a .gz version if it exists&lt;/span&gt;
        &lt;span class="kn"&gt;gzip_static&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c1"&gt;# Try to serve the clean url version first&lt;/span&gt;
        &lt;span class="kn"&gt;try_files&lt;/span&gt; &lt;span class="nv"&gt;$uri.htm&lt;/span&gt; &lt;span class="nv"&gt;$uri.html&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/favicon.ico&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;# This never changes, so don&amp;#39;t let it expire&lt;/span&gt;
        &lt;span class="kn"&gt;expires&lt;/span&gt; &lt;span class="s"&gt;max&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;^~&lt;/span&gt; &lt;span class="s"&gt;/theme&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;# This content should very rarely, if ever, change&lt;/span&gt;
        &lt;span class="kn"&gt;expires&lt;/span&gt; &lt;span class="s"&gt;1y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The gzip_static directive tells nginx that if the file should be served gzipped
that we may, and do, have the file already gzipped and to use that instead. It
means that nginx doesn't need to use any extra CPU to serve gzipped data.&lt;/p&gt;
&lt;p&gt;From above, we generate links without the .htm extension, but we generate the
files with them. That's just a way to make the request pretty. Our try_files
directive makes it possible to do that.&lt;/p&gt;
&lt;p&gt;Go ahead and restart nginx:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
service nginx restart
&lt;/pre&gt;
&lt;p&gt;Go check out your new blog! It's all static content and serving it is fast. :D&lt;/p&gt;
&lt;/div&gt;
</content><category term="nginx"></category><category term="nginx"></category><category term="pelican"></category><category term="blog"></category></entry><entry><title>Completely Automated ESXi Deployment</title><link href="https://michael.lustfield.net/misc/completely-automated-esxi-deployment" rel="alternate"></link><published>2013-08-08T00:00:00-05:00</published><updated>2013-08-08T00:00:00-05:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2013-08-08:/misc/completely-automated-esxi-deployment</id><summary type="html">&lt;p&gt;This post has to come with the disclaimer that 99.97% of ESXi deployments have
&lt;em&gt;NO&lt;/em&gt; use for anything this complicated. For that 0.03% of us, ESXi can be one
heck of a deployment nightmare. It doesn't have to be, though.&lt;/p&gt;
&lt;div class="section" id="background-the-situation"&gt;
&lt;h2&gt;Background: The Situation&lt;/h2&gt;
&lt;p&gt;The company I work for …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;This post has to come with the disclaimer that 99.97% of ESXi deployments have
&lt;em&gt;NO&lt;/em&gt; use for anything this complicated. For that 0.03% of us, ESXi can be one
heck of a deployment nightmare. It doesn't have to be, though.&lt;/p&gt;
&lt;div class="section" id="background-the-situation"&gt;
&lt;h2&gt;Background: The Situation&lt;/h2&gt;
&lt;p&gt;The company I work for has hundreds of remote facilities and each of these
facilities connects back to our main office. Most of the time this is a pair of
T1 lines, but sometimes it's just a single line. Each facility needs local file
storage. They need other things locally, but the file storage is easy to put
into perspective.&lt;/p&gt;
&lt;p&gt;The easy answer is to deploy a server at each facility that keeps data locally
and synchronizes with our main office.&lt;/p&gt;
&lt;p&gt;Well, we will want to replace this hardware someday so obviously we'll want
virtualization. There are many options out there and we almost went with proxmox
but in the end settled on ESXi.&lt;/p&gt;
&lt;p&gt;So now we will have an ESXi host at each facility and virtual machines running
on it. The ESXi install is rather light and doing that remotely is no real
headache. However, we also need to install customized servers on each one. Each
of these servers needs to pull a lot of data during installation and installing
at the facility makes no sense. Installing locally and pushing the image to the
ESXi host at the facility is equally absurd. In our case, this could be a few
weeks.&lt;/p&gt;
&lt;p&gt;This is the situation we were faced with.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-solution"&gt;
&lt;h2&gt;The Solution&lt;/h2&gt;
&lt;p&gt;The solution was to build a single thumb drive that did a complete deployment of
the ESXi host and all the virtual machines without touching the network.&lt;/p&gt;
&lt;p&gt;Sounds simple or impossible depending on your understanding of ESXi. The answer
is actually somewhere in between. It's incredibly difficult to figure out
because even ESXi developers told me it wasn't possible. Once you figure it out,
it's not horrible to repeat the process.&lt;/p&gt;
&lt;p&gt;Basically:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Build the Virtual Machines to be put in the install&lt;/li&gt;
&lt;li&gt;Export them to an OVA file&lt;/li&gt;
&lt;li&gt;Put the OVA files on a web server&lt;/li&gt;
&lt;li&gt;Put the installer on the thumb drive&lt;/li&gt;
&lt;li&gt;Modify the installer to include the images&lt;/li&gt;
&lt;li&gt;Set up first boot stuff&lt;/li&gt;
&lt;li&gt;Create an image&lt;/li&gt;
&lt;li&gt;Set up a thumb drive to deploy that image&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Sounds easy, right? Sure...&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="creating-the-ova"&gt;
&lt;h2&gt;Creating the OVA&lt;/h2&gt;
&lt;p&gt;I'll breeze over this section. All you want to do is deploy a local ESXi server,
install your virtual machines, and configure them as needed. If they're Linux
boxes, then you will probably have a first boot script embedded. If it's a
Windows server, don't forget the sysprep.&lt;/p&gt;
&lt;p&gt;Once the virtual servers are ready, turn them off. Export them as an OVA. The
OVF option will create a few files where the OVA will stick everything in one
file.&lt;/p&gt;
&lt;p&gt;Upload those files to a web server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="esxi-on-usb-thumb-drive"&gt;
&lt;h2&gt;ESXi on USB Thumb Drive&lt;/h2&gt;
&lt;p&gt;Our ESXi install disk needed extra drivers and we just used &lt;a class="reference external" href="http://esxi-customizer.v-front.de"&gt;ESXi Customizer&lt;/a&gt;
to get them in there. That tool doesn't really need any explanation.&lt;/p&gt;
&lt;p&gt;When you have the ESXi ISO that you plan to use, you'll want to stick it on a
USB stick. This is important because it lets you modify things easily. In my
case, my thumb drive was sdc.&lt;/p&gt;
&lt;p&gt;Prepping the thumb drive:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
fdisk /dev/sdc
# Make sure only one partition consumes the entire drive
# Make sure to set the bootable flag
mkfs.vfat -n vmware_sm -F 32 /dev/sdc1
syslinux /dev/sdc1
cat /usr/lib/syslinux/mbr.bin &amp;gt; /dev/sdc
&lt;/pre&gt;
&lt;p&gt;Putting files on the thumb drive:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mkdir /mnt/{usb,iso}
mount -o loop esxi_supermicro.iso /mnt/iso
mount /dev/sdc1 /mnt/usb
rsync -au /mnt/iso/ /mnt/usb
&lt;/pre&gt;
&lt;p&gt;Then modify some files for use with syslinux:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cp /mnt/usb/isolinux.cfg /mnt/usb/syslinux.cfg
sed -i 's|menu.c32|mboot.c32|' /mnt/usb/syslinux.cfg
&lt;/pre&gt;
&lt;p&gt;The ISO is no longer needed:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
umount /mnt/iso
rmdir /mnt/iso
&lt;/pre&gt;
&lt;p&gt;You can now unmount /mnt/usb if you want to verify that you can boot to it and
run the installer. For the remainder, I'll assume that you left it since we have
to still customize it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="creating-our-customizations-the-boot-file"&gt;
&lt;h2&gt;Creating Our Customizations: The Boot File&lt;/h2&gt;
&lt;p&gt;Later, we'll be creating ks.cfg and ovf-00.t00. For the moment, assume that they
exist. We need to tell ESXi about them.&lt;/p&gt;
&lt;p&gt;Edit /mnt/usb/boot.cfg&lt;/p&gt;
&lt;p&gt;In the modules line, we need to tell ESXi about ovf-00.t00. Add /ovf-00.t00 to
the list. It will look like the following.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
--- /xorg.v00 --- /OEM-00.t00 --- /ovf-00.t00 --- /imgdb.tgz
&lt;/pre&gt;
&lt;p&gt;Make sure to keep the ' --- ' between each item.&lt;/p&gt;
&lt;p&gt;Where you see:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
kernelopt=runweasel
&lt;/pre&gt;
&lt;p&gt;Add ks=usb:/KS.CFG:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
kernelopt=runweasel ks=usb:/KS.CFG
&lt;/pre&gt;
&lt;p&gt;Now the installer will know that it needs to load the /ovf-00.t00 file into
memory and used the ks.cfg file as the kickstart when booting. If you don't
quite see the magic yet, this already allows us to make the installation
fully hands off.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="creating-our-customizations-the-kickstart"&gt;
&lt;h2&gt;Creating Our Customizations: The Kickstart&lt;/h2&gt;
&lt;p&gt;Now we get to the fun part. The first step is to create a kickstart file. This
is rather easy. It will look very much like this:&lt;/p&gt;
&lt;p&gt;Edit /mnt/usb/ks.cfg:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
##
# Basic install options
##
vmaccepteula
rootpw ROOTPASS
install --firstdisk --overwritevmfs
network --bootproto=dhcp

##
# Less basic scripts
##

%post --interpreter=busybox
##
# Copy custom ovf/ova/misc data to the host
# Configure name servers for DNS resolution
# Download the OVA files
# Reset host UUIDs
# Halt system
##
cp -R /ovf /vmfs/volumes/datastore1/
cat &amp;gt;/etc/resolv.conf &amp;lt;&amp;lt;FILE_DNS
nameserver 1.2.3.4
nameserver 1.2.3.5
FILE_DNS
wget http://example.com/Server1.ova -O /vmfs/volumes/datastore1/ovf/files/Server1.ova
wget http://example.com/Server2.ova -O /vmfs/volumes/datastore1/ovf/files/Server2.ova
/sbin/firmwareConfig.sh --reset-only
halt

%firstboot --interpreter=busybox
##
# Get datastore1 back after cloning
# Reset password (lost in config reset)
# Install vib for LSI controller
# Deploy ova files (virtual machines)
# Launch the process to join this box to vSphere
# Reboot is NOT needed and causes issues
##
esxcfg-volume -M datastore1
printf 'ROOTPASS' | passwd -s
sleep 10
esxcli software vib install -v /vmfs/volumes/datastore1/ovf/misc/lsiprovider.vib --no-sig-check
center=&amp;quot;$(hostname | awk -F '.' '{print $2}')&amp;quot;
/vmfs/volumes/datastore1/ovf/tools/ovftool --datastore=datastore1 --noSSLVerify --name=&amp;quot;Server1-$center&amp;quot; /vmfs/volumes/datastore1/ovf/files/Server1.ova vi://root:ROOTPASS&amp;#64;127.0.0.1
/vmfs/volumes/datastore1/ovf/tools/ovftool --datastore=datastore1 --noSSLVerify --name=&amp;quot;Server2-$center&amp;quot; /vmfs/volumes/datastore1/ovf/files/Server2.ova vi://root:ROOTPASS&amp;#64;127.0.0.1
&lt;/pre&gt;
&lt;p&gt;There is a lot more you can with the kickstart, and ours is massive.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="creating-our-customizations-the-ovf"&gt;
&lt;h2&gt;Creating Our Customizations: The OVF&lt;/h2&gt;
&lt;p&gt;Notice in the above, I expect /ovf to exist. We're about to make it so! First
we need to aquire ovftools. The VMware website has an &lt;a class="reference external" href="http://www.vmware.com/support/developer/ovf/"&gt;ovftool download&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Download the 64bit version and install it.&lt;/p&gt;
&lt;p&gt;Now we need to make /ovf and the directories inside of it.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mkdir /tmp/ovf
mkdir /tmp/ovf/tools
mkdir /tmp/ovf/files
&lt;/pre&gt;
&lt;p&gt;Take the installed ovftools and stick them in the tools directory.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
rsync -au /usr/lib/vmware-ovftool/* /tmp/ovf/tools/
sed -i 's/bash/sh/' /tmp/ovf/tools/ovftool
&lt;/pre&gt;
&lt;p&gt;We leave an empty files directory. This is where the post install part of the
kickstart file will dump the OVA files.&lt;/p&gt;
&lt;p&gt;Now we need to turn the ovf directory into ovf-00.t00.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cd /tmp
tar cf ovf.tar ovf
gzip -9 ovf.tar
mv ovf.tar.gz /mnt/usb/ovf-00.t00
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="creating-our-customizations-finished"&gt;
&lt;h2&gt;Creating Our Customizations: Finished&lt;/h2&gt;
&lt;p&gt;Now that you have everything done, run umount /mnt/usb. Put that usb key into
your server and boot to it. The installer will go through and do what we told
it to.&lt;/p&gt;
&lt;p&gt;Once it powers off, you're ready to make an image from the installed ESXi.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="image-creation-usb-thumb-drive"&gt;
&lt;h2&gt;Image Creation: USB Thumb Drive&lt;/h2&gt;
&lt;p&gt;For this part, we need yet another USB thumb drive. To keep this easy, just
follow these basic steps.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Use a Windows box&lt;/li&gt;
&lt;li&gt;Download &lt;a class="reference external" href="http://www.linuxliveusb.com/en/download"&gt;LiLi USB Creator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download &lt;a class="reference external" href="http://clonezilla.org/downloads.php"&gt;Clonezilla&lt;/a&gt; (I used the alternative stable)&lt;/li&gt;
&lt;li&gt;Run LiLi&lt;/li&gt;
&lt;li&gt;Tell it to install Clonezilla to a thumb drive&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You'll probably want to make two copies of this. One for grabbing the image
and one for pushing the image. For pushing the image, it needs to be at least
as large as the image you're creating. For getting the image, 2GB is plenty.&lt;/p&gt;
&lt;p&gt;Our ESXi image was large enough that we had to split up the thumb drive. A 64GB
drive was given two partitions. The first was a 4GB FAT32 formatted partition
that we placed Clonezilla on to. The second partition was Ext2 formatted and
took up the remainder.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="image-creation-getting-the-image"&gt;
&lt;h2&gt;Image Creation: Getting the Image&lt;/h2&gt;
&lt;p&gt;Boot to the plain Clonezilla USB drive on the ESXi server. You will probably
want to also hook up a larger external hard drive for this.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Boot to Clonezilla (I usually ping the &amp;quot;Safe graphic&amp;quot; option)&lt;/li&gt;
&lt;li&gt;optional: Plug in external hard drive&lt;/li&gt;
&lt;li&gt;I usually ping the &amp;quot;Safe graphic&amp;quot; option&lt;/li&gt;
&lt;li&gt;For the keymap settings, default is usually fine&lt;/li&gt;
&lt;li&gt;Start_Clonezilla&lt;/li&gt;
&lt;li&gt;Choose device-image&lt;/li&gt;
&lt;li&gt;Pick where you want the image to go (local_dev for external HD)&lt;/li&gt;
&lt;li&gt;Run through the settings for that option&lt;/li&gt;
&lt;li&gt;Choose the Expert setting&lt;/li&gt;
&lt;li&gt;Choose savedisk&lt;/li&gt;
&lt;li&gt;Give it a name&lt;/li&gt;
&lt;li&gt;You probably only have one option (sda) for the local disk&lt;/li&gt;
&lt;li&gt;-q2 is usually best (partclone can handle sparse vmfs)&lt;/li&gt;
&lt;li&gt;Make sure to select the -nogui option!!! (I usually deselect -c)&lt;/li&gt;
&lt;li&gt;Compression is your choice&lt;/li&gt;
&lt;li&gt;Since this is going to ext, feel free to make a large partition size&lt;/li&gt;
&lt;li&gt;I usually choose to skip any checks (not safe)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For me, the command in the end looks something like this...&lt;/p&gt;
&lt;pre class="literal-block"&gt;
/usr/bin/ocs-sr -q2 -j2 -nogui -z1p -i 2000000 -sc -p true savedisk BArK-Image sda
&lt;/pre&gt;
&lt;p&gt;Now you get to wait for the image to get created. Once it's done, power off the
box and we can start working on the deployment thumb drive.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="image-creation-clonezilla-modifications"&gt;
&lt;h2&gt;Image Creation: Clonezilla Modifications&lt;/h2&gt;
&lt;p&gt;We're going back to that extra flash drive you made. In our case, it was 64GB.
The first 4GB partition (FAT32) has the standard Clonezilla image, for now.
The remainder of the flash drive should be a single ext2 partition. You'll want
yours to basically be the same, but maybe only a 16GB flash drive will be
needed. This second partition will hold only one thing (your image).&lt;/p&gt;
&lt;p&gt;We'll want to make some changes to the stuff LiLi put on the flash drive. For
now, we'll assume the flash drive is sdb.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mkdir /mnt/sdb1
mkdir /mnt/sdb2
mount /dev/sdb1 /mnt/sdb1
mount /dev/sdb2 /mnt/sdb2
&lt;/pre&gt;
&lt;p&gt;Now copy the image you created with Clonezilla into /mnt/sdb2 and unmount it.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
rsync -au /dir/to/BArK-Image /mnt/sdb2/
umount /mnt/sdb2
&lt;/pre&gt;
&lt;p&gt;That's all there is to getting our image on to the flash drive. That's not
enough, though. Sure, we could launch the vanilla clonezill on here and
tell it to use the image from the larger partition. However, we're trying to
make this fully automatic. We came this far and we're finishing the task!&lt;/p&gt;
&lt;p&gt;It's worth noting that live Linux distros use squashfs. This is an amazing tool
because it lets you make a large file system into something very tiny, but this
comes with the side effect that you're not able to actually modify the files.
Instead, we have to take that file system, unpack it, repack it, and replace it.&lt;/p&gt;
&lt;p&gt;To do this...&lt;/p&gt;
&lt;p&gt;Edit /mnt/sdb1/syslinux/syslinux.cfg:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
default vesamenu.c32
timeout 300
prompt 0
noescape 1
MENU MARGIN 5
 MENU BACKGROUND ocswp.png
# Set the color for unselected menu item and timout message
 MENU COLOR UNSEL 7;32;41 #c0000090 #00000000
 MENU COLOR TIMEOUT_MSG 7;32;41 #c0000090 #00000000
 MENU COLOR TIMEOUT 7;32;41 #c0000090 #00000000
 MENU COLOR HELP 7;32;41 #c0000090 #00000000

# MENU MASTER PASSWD

# Allow client to edit the parameters
ALLOWOPTIONS 1

# simple menu title
MENU TITLE The Amazing Corp.

label BArK Installer
  MENU DEFAULT
  # MENU HIDE
  MENU LABEL Automated Install
  kernel /live/vmlinuz
  append initrd=/live/initrd.img boot=live hostname=raring config quiet union=overlayfs noswap edd=on nomodeset noprompt locales= keyboard-layouts= ocs_live_run=&amp;quot;ocs-live-general&amp;quot; ocs_live_extra_param=&amp;quot;&amp;quot; ocs_live_batch=no ip=frommedia vga=normal nosplash
  TEXT HELP
  * Our amazing ESXi automated installer for remote boxes.
  * Disclaimer: This will wipe drives without warning
  ENDTEXT
&lt;/pre&gt;
&lt;p&gt;Feel free to copy/paste that exactly as is. This basically is what makes the
interactive boot stuff in Clonezilla go away. It doesn't really do much more.&lt;/p&gt;
&lt;p&gt;Moving on, we need to modify what happens after booting. You might remember
this as a sleek set of options for what we want to do. We know what we want to
do, so we're going to embed it.&lt;/p&gt;
&lt;p&gt;First up is grabbing the existing squashfs image.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mkdir /tmp/squash
mv /mnt/sdb1/live/filesystem.squashfs /tmp/squash/
cd /tmp/squash
unsquashfs filesystem.squashfs
cd squashfs-root
&lt;/pre&gt;
&lt;p&gt;Now you have Clonezilla at your mercy. The first thing we want to do is burn the
menu that launches when you start.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
rm etc/rc2.d/S99start-ocs-live
&lt;/pre&gt;
&lt;p&gt;It's that simple. We delete that file. If you were to start up with only that
change, you'd just end up at a shell. Now we need to tell it what to do when it
boots up.&lt;/p&gt;
&lt;p&gt;Edit etc/rc.local:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
#!/bin/bash
mkdir /home/partimag
mount /dev/sdb2 /home/partimag
yes y | /usr/sbin/ocs-sr -e2 -nogui -c -r -j2 -p /usr/sbin/ocs-finished restoredisk BArK-Image sda
exit 0
&lt;/pre&gt;
&lt;p&gt;Edit usr/sbin/ocs-finished:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
#!/bin/bash
serial=&amp;quot;$(sudo dmidecode -s system-serial-number)&amp;quot;
dialog --msgbox &amp;quot;Imaging finished. Press &amp;lt;enter&amp;gt; to shut down system.\nSerial Number: $serial&amp;quot; 5 56
sudo poweroff
&lt;/pre&gt;
&lt;p&gt;Make sure it's executable:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
chmod +x usr/sbin/ocs-finished
&lt;/pre&gt;
&lt;p&gt;This assumes that you named your image BArK-Image, as I did. Case matters!&lt;/p&gt;
&lt;p&gt;Now we need to create the new squashfs and put it on the flash drive.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
rm ../filesystem.squashfs
mksquashfs * ../filesystem.squashfs

cp ../filesystem.squashfs /mnt/sdb1/live/filesystem.squashfs
&lt;/pre&gt;
&lt;p&gt;That's all there is to it! Simple!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="using-it"&gt;
&lt;h2&gt;Using It&lt;/h2&gt;
&lt;p&gt;Simply boot to it. Done. It'll deploy that image to the first disk.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="final-thoughts"&gt;
&lt;h2&gt;Final Thoughts&lt;/h2&gt;
&lt;p&gt;This is a very complicated process. As I stated before, it's for edge cases
ONLY. If you're dealing with normal business needs, there are far superior
options out there. For the other 0.03% out there, I really hope this can take
you easily from the start to the end of this insane task.&lt;/p&gt;
&lt;/div&gt;
</content><category term="misc"></category><category term="vmware"></category></entry><entry><title>Bottle + UWSGI + Nginx Quickstart</title><link href="https://michael.lustfield.net/nginx/bottle-uwsgi-nginx-quickstart" rel="alternate"></link><published>2013-08-06T00:00:00-05:00</published><updated>2013-08-06T00:00:00-05:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2013-08-06:/nginx/bottle-uwsgi-nginx-quickstart</id><summary type="html">&lt;p&gt;Nginx is pretty sweet, that's a rather obvious statement from me. There are
already many nginx forks and contributions back to the original. I also happen
to have quite a spot in my heart for &lt;a class="reference external" href="http://bottlepy.org/docs/dev/"&gt;Bottle&lt;/a&gt;. In my eyes, it's a framework
that pretty much lets you forget you're working …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nginx is pretty sweet, that's a rather obvious statement from me. There are
already many nginx forks and contributions back to the original. I also happen
to have quite a spot in my heart for &lt;a class="reference external" href="http://bottlepy.org/docs/dev/"&gt;Bottle&lt;/a&gt;. In my eyes, it's a framework
that pretty much lets you forget you're working with the web. You get to write
your application as if the web didn't exist and then tack on the templating.&lt;/p&gt;
&lt;p&gt;Maybe it's not &lt;em&gt;that&lt;/em&gt; easy, but it's worth checking out! I'm going to take you
through the process of getting this amazing stack going. Let's get started!&lt;/p&gt;
&lt;div class="section" id="installing-stuff"&gt;
&lt;h2&gt;Installing Stuff&lt;/h2&gt;
&lt;p&gt;I'm going to be assuming the use of Debian. It's easy enough to adjust.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
aptitude install uwsgi uwsgi-plugin-python python-bottle nginx
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="your-first-bottle-application"&gt;
&lt;h2&gt;Your First Bottle Application&lt;/h2&gt;
&lt;p&gt;I tend to start with a basic structure:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
/var/www/webapp/
    plugins/
        __init__.py
    static/
        css/
        files/
        images/
        js/
    views/
        base.tpl
        page.tpl
    app.py
&lt;/pre&gt;
&lt;p&gt;Whether I have anything in the directories or not, they exist. It's just how I
make sure I keep things consistent across applications.&lt;/p&gt;
&lt;p&gt;A basic skeleton of app.py will look something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;A basic bottle app skeleton&lt;/span&gt;
&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;bottle&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;application&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bottle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Bottle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nd"&gt;@app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/static/&amp;lt;filename:path&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;    Serve static files&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;bottle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;static_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./static&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nd"&gt;@app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show_index&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;    The front &amp;quot;index&amp;quot; page&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Hello&amp;#39;&lt;/span&gt;

&lt;span class="nd"&gt;@app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/page/&amp;lt;page_name&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show_page&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page_name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;    Return a page that has been rendered using a template&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;page&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;page_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;page_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StripPathMiddleware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;    Get that slash out of the request&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__call__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;PATH_INFO&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;PATH_INFO&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;bottle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;StripPathMiddleware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;python_server&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0.0.0.0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8080&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I realize there's a bit going on here, but it's not a minimal skeleton. This
shows you how to serve static content, a basic text only front page, and a
templated page. While you're testing, you don't want that slash unless the main
page is being requested. Browsers seem to like adding that. It's not an issue
when we get to deployment because uwsgi will take car of that for you.&lt;/p&gt;
&lt;p&gt;Notice that bottle.run() only happens when you run app.py. It won't run when
you launch it as an application with uwsgi. This chunk is also the only place
that we call StripPathMiddleware. If you have no need for development, then you
can remove the last two chunks of code.&lt;/p&gt;
&lt;p&gt;Try it out!:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python app.py
&lt;/pre&gt;
&lt;p&gt;You'll see the application start running. Go to example.com:8080/. Neat, huh?&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-templating-system"&gt;
&lt;h2&gt;The Templating System&lt;/h2&gt;
&lt;p&gt;Bottle has a bunch of templating options. For now, we're only going to touch
the most basic option.&lt;/p&gt;
&lt;p&gt;views/page.tpl:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
You are visiting {{page_name}}!
%rebase base
&lt;/pre&gt;
&lt;p&gt;views/base.tpl:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt; &lt;span class="na"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;en&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ltr&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;My Site!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pagebody&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            %include
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is obviously &lt;em&gt;very&lt;/em&gt; basic, but it will get you started. Check out the
&lt;a class="reference external" href="http://bottle.readthedocs.org/en/latest/"&gt;Bottle Docs&lt;/a&gt; for more information. The templating options are endless!&lt;/p&gt;
&lt;p&gt;Now that you have this done, restart app.py and visit example.com:8080/page/foo.
You should be seeing a rather blank looking page that says &amp;quot;You are visiting
foo&amp;quot; with the title &amp;quot;My Site!&amp;quot;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="adding-uwsgi"&gt;
&lt;h2&gt;Adding UWSGI&lt;/h2&gt;
&lt;p&gt;Now that we have a very basic bottle application, it's time to fit it into the
stack. The built in web server that bottle offers is very slow. It's for
development only. Don't ever expect to use it in production.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
app = application = bottle.Bottle()
&lt;/pre&gt;
&lt;p&gt;This little gem is more magic than you think. Don't forget it!&lt;/p&gt;
&lt;p&gt;The UWSGI configuration is pretty simple. See the &lt;a class="reference external" href="http://projects.unbit.it/uwsgi"&gt;UWSGI Docs&lt;/a&gt; for more
details information.&lt;/p&gt;
&lt;p&gt;Edit /etc/uwsgi/apps-available/bottle.ini:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[uwsgi]&lt;/span&gt;
&lt;span class="na"&gt;socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/run/uwsgi/app/bottle/socket&lt;/span&gt;
&lt;span class="na"&gt;chdir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/var/www/bottle&lt;/span&gt;
&lt;span class="na"&gt;master&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;true&lt;/span&gt;
&lt;span class="na"&gt;plugins&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;python&lt;/span&gt;
&lt;span class="na"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;app.py&lt;/span&gt;
&lt;span class="na"&gt;uid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;www-data&lt;/span&gt;
&lt;span class="na"&gt;gid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;www-data&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then add a symlink from apps-enabled:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ln -s /etc/uwsgi/apps-available/bottle.ini /etc/uwsgi/apps-enabled/bottle.ini
&lt;/pre&gt;
&lt;p&gt;And restart the service:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
service uwsgi restart
&lt;/pre&gt;
&lt;p&gt;At this point you'll see a socket file created at /run/uwsgi-bottle.socket.
That's great, but we need to actually make use of it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="adding-nginx"&gt;
&lt;h2&gt;Adding Nginx&lt;/h2&gt;
&lt;p&gt;I prefer using the conf.d/ directory for my configurations. You can do as you
wish on your server.&lt;/p&gt;
&lt;p&gt;Edit /etc/nginx/conf.d/bottle.conf:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;upstream&lt;/span&gt; &lt;span class="s"&gt;_bottle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;server&lt;/span&gt; &lt;span class="s"&gt;unix:/run/uwsgi/app/bottle/socket&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="s"&gt;[::]:80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;deb.ngx.cc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;root&lt;/span&gt; &lt;span class="s"&gt;/var/www/bottle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;try_files&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="s"&gt;@uwsgi&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;@uwsgi&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;include&lt;/span&gt; &lt;span class="s"&gt;uwsgi_params&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;uwsgi_pass&lt;/span&gt; &lt;span class="s"&gt;_bottle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In our bottle application, we defined a route for static content. However, it's
better to have nignx serve this data so that we can avoid making python do any
work. That's why we use try_files in the location block. You want that in your
bottle application for development, but when we deploy, it won't actually get
used.&lt;/p&gt;
&lt;p&gt;Then restart the service:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
service nginx restart
&lt;/pre&gt;
&lt;p&gt;You'll now be able to access your bottle application from the internet through
nginx.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="final-thoughts"&gt;
&lt;h2&gt;Final Thoughts&lt;/h2&gt;
&lt;p&gt;This was a very brief tutorial. It's meant only to get you jump started into
having a usable bottle+uwsgi+nginx stack that you can expand on to fit your
environment/needs. If you feel any parts need additional explanation, please
let me know!&lt;/p&gt;
&lt;/div&gt;
</content><category term="nginx"></category><category term="bottle"></category><category term="nginx"></category><category term="uwsgi"></category><category term="python"></category></entry><entry><title>Esoteric Programming</title><link href="https://michael.lustfield.net/rambling/esoteric-programming" rel="alternate"></link><published>2011-07-30T04:38:00-05:00</published><updated>2011-07-30T04:38:00-05:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2011-07-30:/rambling/esoteric-programming</id><summary type="html">&lt;p&gt;How needlessly complicated can you make one thing?&lt;/p&gt;
&lt;p&gt;From Wikipedia: &amp;quot;An esoteric programming language (sometimes shortened
to esolang) is a programming language designed as a test of the
boundaries of computer programming language design, as a proof of
concept, or as a joke. There is usually no intention of the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;How needlessly complicated can you make one thing?&lt;/p&gt;
&lt;p&gt;From Wikipedia: &amp;quot;An esoteric programming language (sometimes shortened
to esolang) is a programming language designed as a test of the
boundaries of computer programming language design, as a proof of
concept, or as a joke. There is usually no intention of the language
being adopted for mainstream programming, although some esoteric
features such as visuospatial syntax have inspired practical
applications in the arts. Such languages are often popular among hackers
and hobbyists. This use of esoteric is meant to distinguish these
languages from more popular programming languages.&amp;quot;&lt;/p&gt;
&lt;p&gt;It basically is just saying that we sometimes do stupid crap, &amp;quot;just
'cause.&amp;quot; This is one of those times. If you ever read The Hitchhikers
Guide to the Galaxy, you'll get this.&lt;/p&gt;
&lt;p&gt;The Bash variant is quite large and a link is listed below.&lt;/p&gt;
&lt;p&gt;The BrainFuck variant (80 char width):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
++++++++[&amp;gt;+&amp;gt;++&amp;gt;+++&amp;gt;++++&amp;gt;+++++&amp;gt;++++++&amp;gt;+++++++&amp;gt;++++++++&amp;gt;+++++++++&amp;gt;++++++++++&amp;gt;+++++
++++++&amp;gt;++++++++++++&amp;gt;+++++++++++++&amp;gt;++++++++++++++&amp;gt;+++++++++++++++&amp;gt;+++++++++++++++
+&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;-]&amp;gt;++.--++.--+.-&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;+++.---&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;.&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;----.++++&amp;gt;&amp;gt;.---
.+++&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;.&amp;gt;&amp;gt;&amp;gt;&amp;gt;+.-&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;--.+++++.---&amp;gt;-.+&amp;lt;&amp;lt;---.+++&amp;gt;++.--&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;.&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;+.-&amp;gt;&amp;gt;&amp;gt;
&amp;gt;&amp;gt;+++.---&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;.&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;.&amp;lt;&amp;lt;&amp;lt;--.++&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;-.+&amp;gt;---.+++&amp;lt;++.--&amp;gt;----.+++++.-&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;
&amp;lt;&amp;lt;&amp;lt;.&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;----.++++&amp;gt;&amp;gt;&amp;gt;&amp;gt;-.+&amp;lt;-.+&amp;lt;&amp;lt;.&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;.&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;---.+++&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;++.--++.--+
+.--&amp;lt;.
&lt;/pre&gt;
&lt;p&gt;What am I trying to do with all of this? It should be pretty obvious,
I'm producing the question to the answer of everything.&lt;/p&gt;
&lt;p&gt;Normally I'd just say to go try this yourself but apparently people
scare much more easily than I do and they don't know haw to securely
test things so... I just pasted the result.&lt;/p&gt;
&lt;pre class="literal-block"&gt;


        [ The Answer Is `Fourty Two` ]


&lt;/pre&gt;
&lt;p&gt;Now, why would we do something like this? I could go on a depressing
rant about how I have very little to do that's more fun. I'll instead
just say, &amp;quot;Why the hell wouldn't I want to do something so fun!?&amp;quot;&lt;/p&gt;
&lt;p&gt;Side note- I get asked a lot if I generated it somehow. I did not. That
would have made it much less fun.&lt;/p&gt;
&lt;p&gt;Attachments:&lt;/p&gt;
&lt;p&gt;&lt;img alt="image0" src="/files/icons/text-plain.png" /&gt; &lt;a class="reference external" href="/files/uploads/forty_two"&gt;forty_two&lt;/a&gt;&lt;/p&gt;
</content><category term="rambling"></category><category term="bash"></category><category term="programming"></category><category term="overkill"></category></entry><entry><title>Dummies Guide to Setting Up Nginx</title><link href="https://michael.lustfield.net/nginx/dummies-guide-to-setting-up-nginx" rel="alternate"></link><published>2011-07-25T02:41:00-05:00</published><updated>2011-07-25T02:41:00-05:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2011-07-25:/nginx/dummies-guide-to-setting-up-nginx</id><summary type="html">&lt;p&gt;Nginx is one of those things that many people want to try but don't.
Why? Because it's scary. Well... Nginx itself isn't scary, but all of
the poor guides out there make it a nightmare. The first step in making
Nginx work for you is to not follow 95% of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nginx is one of those things that many people want to try but don't.
Why? Because it's scary. Well... Nginx itself isn't scary, but all of
the poor guides out there make it a nightmare. The first step in making
Nginx work for you is to not follow 95% of the guides found on Google.
That sounds backward from what you usually hear and I do hate giving
that advice. While many of the guides out there will get you going most
of the time in most situations, they tend to be suboptimal. Many of
these configurations tend to focus on reproducing how Apache does
things. Fortunately, they are not the same thing and are in fact quite
different. Even the guide in the Linode Library will yield poor results
(which is uncommon for them).&lt;/p&gt;
&lt;p&gt;So where should you go for help? Kind of easy actually. Nginx has a
fantastic wiki for most of your questions at &lt;a class="reference external" href="http://wiki.nginx.org/"&gt;http://wiki.nginx.org/&lt;/a&gt;.
There is an Nginx support channel (#nginx on irc.freenode.net) as well.
Once you know what tends to be wrong in most examples you'll be able to
start using Google. The reason being that most of the advanced stuff you
find floating around is usually pretty solid. The issue is just that
people get so excited by Nginx that when they see it's power they want
to say something before they fully understand what's going on.&lt;/p&gt;
&lt;p&gt;My aim here isn't to provide a dead simple solution for everything you
will ever want to do with Nginx. Consider this more like a guide to the
basics. Let's get started.&lt;/p&gt;
&lt;p&gt;I use Debian and Ubuntu, you may have to alter things to fit your
distribution.&lt;/p&gt;
&lt;div class="section" id="installing-stuff"&gt;
&lt;h2&gt;Installing Stuff&lt;/h2&gt;
&lt;p&gt;A very common use case for web servers is PHP based Content Management
Systems. A majority of the time, people settle on MySQL as their
database. I'll also assume you want a self managed PHP system as you
would get in Apache with mod_php. Do you also want the latest and
greatest version of Nginx and PHP?&lt;/p&gt;
&lt;p&gt;If your distribution does not have php5-fpm as an available package
(think pre-ubuntu_11.04) you will want the new stuff. This is in a nice
spiffy Personal Package Archive (PPA) which is maintained by the Nginx
community. To add these PPA's for the latest and greatest:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
aptitude install python-software-properties
add-apt-repository ppa:nginx/stable
echo 'deb http://packages.dotdeb.org squeeze all' &amp;gt;&amp;gt; /etc/apt/sources.list
wget http://www.dotdeb.org/dotdeb.gpg -O- | sudo apt-key add -
aptitude update
&lt;/pre&gt;
&lt;p&gt;Note: If you'd like to use only PHP5 from dotdeb, which is probably a
good idea, then copy the preferences.txt attachment to
/etc/apt/preferences. This will make dotdeb the lowest priority except
for php5* which will be the highest priority.&lt;/p&gt;
&lt;p&gt;GREAT! Access to some super neat stuff. Let's get it all installed!&lt;/p&gt;
&lt;p&gt;aptitude install nginx-light mysql-server php5-mysql php5-fpm php-apc&lt;/p&gt;
&lt;p&gt;You'll get asked for a root password for MySQL. Pick something secure
and don't forget it. At this point you have everything installed that
you need. You just don't have it configured yet. We don't _have_ to
stop these services while we're working on them but we should.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
/etc/init.d/php5-fpm stop
/etc/init.d/mysql stop
/etc/init.d/nginx stop
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="configuring-stuff"&gt;
&lt;h2&gt;Configuring Stuff&lt;/h2&gt;
&lt;p&gt;We may as well start with MySQL since it's the easiest. Edit the file
/etc/mysql/my.cnf. Add this stuff to the very bottom.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
default-storage-engine = innodb
innodb_buffer_pool_size = 128M
innodb_log_file_size = 10M # May need to purge (rm)
/var/lib/mysql/ib_logfile*
innodb_flush_method = O_DIRECT
innodb_file_per_table = 1
innodb_flush_log_at_trx_commit = 2
innodb_log_buffer_size = 1M
innodb_additional_mem_pool_size = 20M
# num cpu's/cores x2 is a good base line for
innodb_thread_concurrency
innodb_thread_concurrency = 8
innodb_open_files = 1024
ignore-builtin-innodb
innodb_file_per_table
plugin-load=innodb=ha_innodb_plugin.so;innodb_trx=ha_innodb_plugin.so;innodb_locks=ha_innodb_plugin.so;innodb_lock_waits=ha_innodb_plugin.so;innodb_cmp=ha_innodb_plugin.so;innodb_cmp_reset=ha_innodb_plugin.so;innodb_cmpmem=ha_innodb_plugin.so;innodb_cmpmem_reset=ha_innodb_plugin.so
&lt;/pre&gt;
&lt;p&gt;I'd rather not go into detail about each piece here. I'll sum it up this
way... It won't save you any RAM. In fact, this will use additional RAM.
It will, however, make thing faster and more efficient. It's kind of a
&amp;quot;MySQL Magic Sauce&amp;quot; I cooked up over some time that I have yet to find
issues with.&lt;/p&gt;
&lt;p&gt;Now for that PHP tuning. PHP-FPM works great out of the box. However,
it's configured with defaults that are a little less than optimal. For
starters, it uses a TCP socket as opposed to a UNIX socket. The TCP
socket is more universal, but not more efficient. It is also configured
to use dynamic processes which are not ideal either. Lastly, it is setup
with huge amounts of RAM allocated to each PHP process. This is fine
consiering all of the horribly inefficent PHP apps out there. If you're
running something sane, then it's just crazy. Below, I included the
lines that I changed in /etc/php5/fpm/pool.d/www.conf.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
listen = /var/run/php5-fpm.sock
listen.allowed_clients = 127.0.0.1
listen.owner = www-data
listen.group = www-data
listen.mode = 0660
user = www-data
group = www-data
pm = static
pm.max_children = 10
pm.max_requests = 1000
php_admin_value[memory_limit] = 32M
&lt;/pre&gt;
&lt;p&gt;Now, we move onto Nginx configuration. The best part of this is that the
most common cases already have templates for you. The default install
comes with a default configuration file in /etc/nginx/sites-enabled/.
Quite simply, this file should just be deleted if you have a clue what
you're doing. It's useful because it's loaded with comments, examples,
and links.&lt;/p&gt;
&lt;p&gt;I personally prefer keeping site configs in /etc/nginx/conf.d/&amp;lt;site&amp;gt;.conf.
Others prefer keeping configs in /etc/nginx/sites-available/ and then
creating a symlink to it from /etc/nginx/sites-enabled/. Either option
yields the exact same result. The only thing you should not do is keep
everything in the same file. It creates a maintenance nightmare.&lt;/p&gt;
&lt;p&gt;Let's say you're wanting to run a Drupal and you unpacked into
/var/www/drupal/. Go to &lt;a class="reference external" href="http://wiki.nginx.org/Drupal"&gt;http://wiki.nginx.org/Drupal&lt;/a&gt;. Copy/paste that
configuration example to your configuration file. Edit the line that
says 'root /var/www/drupal6;' and point it to where you unpacked Drupal
(/var/www/drupal). You will also want to edit the line that says
'server_name domain.tld;'. This should be the domain name that will be
used to access your site.&lt;/p&gt;
&lt;p&gt;Well... Let's see....&lt;/p&gt;
&lt;p&gt;We installed the packages, configured them, tuned a few things, grabbed
the source for a CMS, set it up, ect. What now? Let's fire it all up.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
/etc/init.d/php5-fpm start
/etc/init.d/mysql start
/etc/init.d/nginx start
&lt;/pre&gt;
&lt;p&gt;Of course you still need to create a database and user to access that
database as well as configure your CMS or whatever it may be. This
should give you an excellent start to your server.&lt;/p&gt;
&lt;p&gt;Further reading can be found on the Nginx Wiki. You definitely want to
check out this resource before consulting other resources.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://wiki.nginx.org/Pitfalls"&gt;http://wiki.nginx.org/Pitfalls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://wiki.nginx.org/Configuration"&gt;http://wiki.nginx.org/Configuration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My server is a Linode VPS. I use their smallest plan because I can't peg
the resources it offers.&lt;/p&gt;
&lt;p&gt;My advertisement... My VPS provider of choice has become &lt;a class="reference external" href="https://www.linode.com/?r=f29487efde244dc3e6af5c243803d9aef307e013"&gt;Linode&lt;/a&gt;. The smallest
option is more than powerful enough for running this blog, multiple irssi
sessions, and my development environment. If you use my referral link and remain
an active customer, I get a small bonus.&lt;/p&gt;
&lt;p&gt;Attachments:&lt;/p&gt;
&lt;p&gt;&lt;img alt="image0" src="/files/icons/text-plain.png" /&gt; &lt;a class="reference external" href="/files/uploads/preferences.txt"&gt;preferences.txt&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="nginx"></category><category term="nginx"></category><category term="administration"></category></entry><entry><title>Mister Jones</title><link href="https://michael.lustfield.net/rambling/mister-jones" rel="alternate"></link><published>2010-12-22T06:24:00-06:00</published><updated>2010-12-22T06:24:00-06:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2010-12-22:/rambling/mister-jones</id><summary type="html">&lt;p&gt;It's always great to have the latest and greatest gadget. That new
netbook is so small and everyone else has it. The Droid does so many
cool things, even SSH. I deserve to have all of this cool stuff.&lt;/p&gt;
&lt;p&gt;I'm getting rather annoyed with this attitude. Sure, I really want …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's always great to have the latest and greatest gadget. That new
netbook is so small and everyone else has it. The Droid does so many
cool things, even SSH. I deserve to have all of this cool stuff.&lt;/p&gt;
&lt;p&gt;I'm getting rather annoyed with this attitude. Sure, I really want a
Droid. They are really amazing. My fiancée no doubt gets tired of
hearing me talk about things I'd like to have. However, I would only
'like' to have these. I'm not one to go on and say I 'need' or 'deserve'
them. When I talk about them, I'm describing what I would probably do
with unlimited money.&lt;/p&gt;
&lt;p&gt;I try to save money because I know I'll need it. I hear so often that
I'm &amp;quot;so lucky because [you] don't have all these extra expenses.&amp;quot; Here's
the deal though... You choose to take on those extra expenses.&lt;/p&gt;
&lt;p&gt;One of the last people I got into this conversation with went on about
how they don't have enough income and can't support themselves. As they
were recently a business partner of mine, I knew exactly what they were
making. They were making (to the penny) exactly what I was making. I
mentioned this and this is where they said that I'm &amp;quot;lucky&amp;quot; that I don't
have a lot of extra expenses.&lt;/p&gt;
&lt;p&gt;I asked about what expenses he had that I didn't. It interested me
because I just had over 25% of my monthly income go to car repairs. It
turns out the extra expenses were from partying, cable tv, movie
channels, a huge cell phone plan, driving around, and going out to eat.&lt;/p&gt;
&lt;p&gt;Yup... I'm lucky that I don't have these; or maybe... just maybe... it's
because I &amp;quot;choose&amp;quot; to not shit my money away. I have the lowest cell
phone plan I could get by with (without overages). I don't waste money
on booze or cable tv. I do spend money on Internet, but I have the
lowest plan that I need to get done what I need to.&lt;/p&gt;
&lt;p&gt;The point I'm going after is this... If you're going to complain about
money, then I'm going to ask you what you're spending it on. If you give
me crap like a new tv, cable, alcohol, etc. then you better not be
expecting me to give a crap.&lt;/p&gt;
&lt;p&gt;It's actually very common for me to hear this so I decided I'm just
going to go on a rant about it. :)&lt;/p&gt;
</content><category term="rambling"></category><category term="money"></category><category term="rant"></category></entry><entry><title>Patience</title><link href="https://michael.lustfield.net/rambling/patience" rel="alternate"></link><published>2010-11-23T08:36:00-06:00</published><updated>2010-11-23T08:36:00-06:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2010-11-23:/rambling/patience</id><summary type="html">&lt;p&gt;&amp;quot;See that no one repays another evil for evil.&amp;quot;&lt;/p&gt;
&lt;p&gt;[ I Thessalonians 5:15 ]&lt;/p&gt;
&lt;p&gt;This is so easy to understand. It just says that if someone does an evil
act, don't react with yet more evil.&lt;/p&gt;
&lt;p&gt;Let's break it down though. How often have you been angered in IRC, on
the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&amp;quot;See that no one repays another evil for evil.&amp;quot;&lt;/p&gt;
&lt;p&gt;[ I Thessalonians 5:15 ]&lt;/p&gt;
&lt;p&gt;This is so easy to understand. It just says that if someone does an evil
act, don't react with yet more evil.&lt;/p&gt;
&lt;p&gt;Let's break it down though. How often have you been angered in IRC, on
the phone with technical support, or elsewhere. You feel they're just
being morons and you want to punch them. It happens to me a lot.&lt;/p&gt;
&lt;p&gt;Let's consider this the evil done unto us. We're being angered by
something that we fully disagree with (know better, or whatever). The
usual response seen in these settings is to react with further anger.
This can come in the form of yelling, flaming, ignoring, or those old
fashioned put-downs.&lt;/p&gt;
&lt;p&gt;Those reactions are not only unhelpful but they cause the issue to get
larger.&lt;/p&gt;
&lt;p&gt;Try this next time. Try to understand why the user is making you upset.&lt;/p&gt;
&lt;p&gt;In our field, it's likely that it's 'you' that just went with too little
sleep and are too easily aggitated. It's also possible that you don't
understand their issue well enough to bring it down to a level that they
can understand.&lt;/p&gt;
&lt;p&gt;Why are you wanting to return anger and evil? Settle down and return
something that's in the spirit of FOSS.&lt;/p&gt;
</content><category term="rambling"></category><category term="patience"></category></entry><entry><title>Simple IP Echo</title><link href="https://michael.lustfield.net/nginx/simple-ip-echo" rel="alternate"></link><published>2010-10-31T09:18:00-05:00</published><updated>2010-10-31T09:18:00-05:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2010-10-31:/nginx/simple-ip-echo</id><summary type="html">&lt;p&gt;OK! We all know Nginx is amazing and extremely light. I've been having
the need lately to quickly get the IP address of a location. There's
&amp;quot;whatismyip.com&amp;quot; but that's an ugly bloat. Look at how much you download
to just get a small string of numbers.&lt;/p&gt;
&lt;p&gt;To get around …&lt;/p&gt;</summary><content type="html">&lt;p&gt;OK! We all know Nginx is amazing and extremely light. I've been having
the need lately to quickly get the IP address of a location. There's
&amp;quot;whatismyip.com&amp;quot; but that's an ugly bloat. Look at how much you download
to just get a small string of numbers.&lt;/p&gt;
&lt;p&gt;To get around this a lot of people run their own website that displays
the IP address. This is usually done by passing the connection from
Apache to HTTP which has code similar to the following in it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="s"&gt;print(getenv(REMOTE_ADDR))&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="k"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That seems simple and light enough. Why add PHP into the mix though.
It's very much so an added bloat. Apache is enough of a bloat without
adding the extra bloat of PHP.&lt;/p&gt;
&lt;p&gt;Let's use a real web server and just let the web server do it. The
following is my Nginx configuration file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;ip.lustfield.net&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;default_type&lt;/span&gt; &lt;span class="s"&gt;text/plain&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$remote_addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I don't think there's a single possible way to get a faster and more
light weight response. Nginx doesn't do any processing aside from seeing
that it's right domain and returning the remote address as plain text.&lt;/p&gt;
&lt;p&gt;It's just SO simple and SO pretty.&lt;/p&gt;
</content><category term="nginx"></category><category term="nginx"></category></entry><entry><title>What You Need To Do After Installing Ubuntu 10.10</title><link href="https://michael.lustfield.net/linux/what-you-need-to-do-after-installing-ubuntu-1010" rel="alternate"></link><published>2010-10-03T02:32:00-05:00</published><updated>2010-10-03T02:32:00-05:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2010-10-03:/linux/what-you-need-to-do-after-installing-ubuntu-1010</id><summary type="html">&lt;p&gt;Every six months these articles become popular. I've been using Ubuntu
10.10 (Maverick Meerkat) for a few months now and I thought I'd share
what I thought.&lt;/p&gt;
&lt;div class="section" id="for-most-users"&gt;
&lt;h2&gt;For most users&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Install Ubuntu 10.10&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Install the little extras you might want, such as Thunderbird, Galeon …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Every six months these articles become popular. I've been using Ubuntu
10.10 (Maverick Meerkat) for a few months now and I thought I'd share
what I thought.&lt;/p&gt;
&lt;div class="section" id="for-most-users"&gt;
&lt;h2&gt;For most users&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Install Ubuntu 10.10&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Install the little extras you might want, such as Thunderbird, Galeon,
etc.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="for-cli-users"&gt;
&lt;h2&gt;For cli users&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
apt-get install aptitude
aptitude purge vim-tiny
aptitude install vim
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="for-psychotic-users-like-me"&gt;
&lt;h2&gt;For psychotic users like me&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Grab Alternate CD&lt;/p&gt;
&lt;p&gt;Install &amp;quot;Command Line&amp;quot; system&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Strip the crap out of it - bare essential packages only!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;TOO MANY PACKAGES! Get them out.&lt;/p&gt;
&lt;p&gt;No, you don't need that, prove to me you can't boot or network without
it..&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Get rid of vim-tiny; bring in vim and aptitude.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Tell aptitude not to bring in suggested/recommended packages.&lt;/p&gt;
&lt;p&gt;Now just install the bare minimum system you need&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Create a chroot; hop into it.&lt;/p&gt;
&lt;p&gt;Install what you need for compiling things.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 7:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Grab the kernel source, trim down until there's almost nothing there.&lt;/p&gt;
&lt;p&gt;Install that kernel to your system and remove all the other kernel
stuff.&lt;/p&gt;
&lt;p&gt;I like monolithic because now I have no need for copying modules.&lt;/p&gt;
&lt;p&gt;I also trimmed it to the point where I don't need initramfs/initrd.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 8:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Looks good? Now trim it some more.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 9:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Tweak the crap out of openbox and anything else you need.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 10:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;p&gt;Just for the heck of it, I decided to post my .config. I usually get
asked for it when I mention a stripped down kernel.&lt;/p&gt;
&lt;p&gt;Attachments:&lt;/p&gt;
&lt;p&gt;&lt;img alt="image0" src="/files/icons/application-octet-stream.png" /&gt; &lt;a class="reference external" href="/files/uploads/kernel.config"&gt;kernel.config&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="linux"></category><category term="linux"></category><category term="overkill"></category></entry><entry><title>Useful F1 in Firefox</title><link href="https://michael.lustfield.net/linux/useful-f1-in-firefox" rel="alternate"></link><published>2010-09-13T18:26:00-05:00</published><updated>2010-09-13T18:26:00-05:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2010-09-13:/linux/useful-f1-in-firefox</id><summary type="html">&lt;p&gt;Do you ever use F1 to bring up help pages in Firefox? Do you find this
feature useful? Do you like rhetorical questions?&lt;/p&gt;
&lt;p&gt;Personally, I've never found this F1 function useful or helpful. The
times I wanted some help from it I wasn't able to get the help I needed …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Do you ever use F1 to bring up help pages in Firefox? Do you find this
feature useful? Do you like rhetorical questions?&lt;/p&gt;
&lt;p&gt;Personally, I've never found this F1 function useful or helpful. The
times I wanted some help from it I wasn't able to get the help I needed.
So then this becomes a pointless feature. I bumped it some so I kinda of
got irritated.&lt;/p&gt;
&lt;p&gt;Here's what I did to make it useful:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Open a tab&lt;/li&gt;
&lt;li&gt;Go to &lt;a class="reference external" href="about:config"&gt;about:config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Search for app.support.baseURL&lt;/li&gt;
&lt;li&gt;Right click&lt;/li&gt;
&lt;li&gt;Modify&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You'll notice a question mark (?) at the end of that. This is because
firefox wants to add &amp;quot;firefox-f1&amp;quot; to the end of the URL. The ? changes
the extra text to part of a query string. The cool part is that tacked
on to the end of an existing query string, this little piece is usually
ignored. You could alternatively use an ampersand (&amp;amp;) if you know for a
fact that a query string is already formed.&lt;/p&gt;
&lt;p&gt;The result: an F1 hot key to a website you actually care about.&lt;/p&gt;
</content><category term="linux"></category><category term="tips"></category></entry><entry><title>Nginx Book Review</title><link href="https://michael.lustfield.net/nginx/nginx-book-review" rel="alternate"></link><published>2010-08-26T15:42:00-05:00</published><updated>2010-08-26T15:42:00-05:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2010-08-26:/nginx/nginx-book-review</id><summary type="html">&lt;p&gt;Most anyone reading this already knows me. My name is Michael Lustfield.
I'm running the servers of a starting web development company called
Kalliki Software. We've been in business for a little while now. When we
started we had an Apache Web server with less than one half a gigabyte …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Most anyone reading this already knows me. My name is Michael Lustfield.
I'm running the servers of a starting web development company called
Kalliki Software. We've been in business for a little while now. When we
started we had an Apache Web server with less than one half a gigabyte
of RAM. After three websites we were feeling the burn. The Apache web
server was taking us down. We didn't have the resources to grow out. We
needed to grow up. I turned to the two leaders, Nginx and Lighttpd.
After investigating each I easily settled on Nginx. We were then able to
handle upward of 10 websites on that exact same configuration. The
change was amazing. After all of my experiences, I absolutely would not
recommend Apache for anything.. ever.&lt;/p&gt;
&lt;p&gt;I was asked to review a book called &amp;quot;&lt;a class="reference external" href="http://www.packtpub.com/nginx-http-server-for-web-applications/book?utm_source=profarius.com&amp;amp;utm_medium=link&amp;amp;utm_content=blog&amp;amp;utm_campaign=mdb_004258"&gt;Nginx HTTP Server&lt;/a&gt;&amp;quot; by Clément
Nedelcu. It's been published by Packt Publishing.&lt;/p&gt;
&lt;p&gt;At the point of being asked to review this book, I'd moved into
customized packages of Nginx for distribution which include bug fixes
and feature additions. I'd also become the second administrator of the
Nginx wiki. I also provide support online.&lt;/p&gt;
&lt;p&gt;Prior to this review, I'd read books by Packt Publishing but never
actually considered much about the publisher. After reviewing them I
realized that they focus on producing books about open source. More
specifically, they produce books authored by the FOSS community. The
book I as asked to review was about the Nginx HTTP Server. Nginx is, as
the title states, an HTTP server. This is similar in nature to Apache.
The difference is that Nginx is build for high efficiency. This book was
meant to help users into its use.&lt;/p&gt;
&lt;p&gt;This book is obviously written for someone with no administrative
experience. In fact, it starts out the first couple chapters discussing
remote administration and command line basics. It also covered the
installation and configuration of nginx, nginx modules, and php/python
processes. This book was basically written in a way that it could guide
a Windows 95 user into configuring and setting up a high performance web
server with Nginx.&lt;/p&gt;
&lt;p&gt;The language of the book was of particular interest. The author is very
obviously not a native English speaker but was still able to clearly and
accurately explain everything. It boiled down to a lot of grammar
mistakes which can easily be ignored by someone less pedantic that
myself.&lt;/p&gt;
&lt;p&gt;The book itself covered many features. Some were funny to know existed
and others were extremely useful. The best part is that you can easily
make the binary of Nginx completely exclude these features which many
will never use. The book very clearly explained this process in the
second chapter.&lt;/p&gt;
&lt;p&gt;From a more experienced standpoint, I found many issues in the book. The
minor suggesting “apt-get install build-essential” for dependency
resolving of custom builds. I also noticed that the author suggested
compiling things on a system rather than installing from a repository.
From the point of support, this is bad. The book was written for
beginners and compiling a package is not a beginner task.&lt;/p&gt;
&lt;p&gt;The author suggested that not being able to read &amp;quot;.htaccess&amp;quot; files was a
bad thing but in reality this is an amazing performance gain by Nginx.
The author also suggested using an if statement in many places.
Unfortunately, an if is a horrible thing to use. 99.9% of the time there
is a much better way to handle it.&lt;/p&gt;
&lt;p&gt;The author also had poor examples of using root and index directives.
Any directive should be placed as high as possible in the block
hierarchy. This prevents a lot of duplication. For example, if every
website has the same indexes, then put the line in the http block once
and nowhere else. This is minor for smaller websites but causes issues
later.&lt;/p&gt;
&lt;p&gt;Almost any issues I found in this book I have already outlined in a
&lt;a class="reference external" href="http://wiki.nginx.org/Pitfalls"&gt;Pitfalls&lt;/a&gt; page on the &lt;a class="reference external" href="http://wiki.nginx.org/"&gt;Nginx Wiki&lt;/a&gt;. If you follow that after reading
the book, you'll be miles and miles ahead of most online guides.&lt;/p&gt;
&lt;p&gt;I do with the book had better line wrapping as some thing got confusing
to understand. This is especially true when a directive is split onto
two lines. I hope that knowing this in advance would enable a user to
avoid any confusion.&lt;/p&gt;
&lt;p&gt;Aside from the issues I've mentioned I actually found that the book was
very good. It could take nearly anyone with any technical skill and make
them understand how Nginx works and what it does. This is extremely
important. Understanding how Nginx works is even more important than the
style issues described above. As I said, a &lt;a class="reference external" href="http://wiki.nginx.org/Pitfalls"&gt;Pitfalls&lt;/a&gt; wiki page prior
to even reading this because the mistakes are scattered across the whole
Internet.&lt;/p&gt;
&lt;p&gt;If you want to ditch Apache or IIS but are entirely confused about
anything else, this book will give you an amazing boost in the right
direction.&lt;/p&gt;
&lt;p&gt;As for configurations for specific applications, there's also a Wiki
page about that. Check out the &lt;a class="reference external" href="http://wiki.nginx.org/NginxConfiguration#Applications"&gt;Applications&lt;/a&gt; section of the Nginx Wiki
to find configurations that will be nearly drop-in for whatever you want
to run. It's a growing collection and includes applications such as
Drupal, Wordpress, Mailman, Redmine, MediaWiki, etc.&lt;/p&gt;
&lt;p&gt;After reading the &amp;quot;Nginx HTTP Server&amp;quot; book and the Nginx Wiki, you
should be able to do just about anything in Nginx. Except for writing
your own modules which is only lightly touched in the Wiki.&lt;/p&gt;
&lt;p&gt;Packt Publishing has generously offered a &lt;a class="reference external" href="https://www.packtpub.com/sites/default/files/0868-chapter-3-basic-nginx-configuration_1.pdf"&gt;Sample Chapter&lt;/a&gt;&lt;/p&gt;
</content><category term="nginx"></category><category term="nginx"></category><category term="reviews"></category></entry><entry><title>Persistent SSH</title><link href="https://michael.lustfield.net/linux/persistent-ssh" rel="alternate"></link><published>2010-08-11T22:19:00-05:00</published><updated>2010-08-11T22:19:00-05:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2010-08-11:/linux/persistent-ssh</id><summary type="html">&lt;p&gt;It's time for another post. Recently I've had issues with dropping
network connections or wanting to connect and keep working on the same
thing from other systems. Most of you probably already know the answer.
You screen.&lt;/p&gt;
&lt;p&gt;Sounds easy enough. My issue is that I'm incredibly lazy. I don't want …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's time for another post. Recently I've had issues with dropping
network connections or wanting to connect and keep working on the same
thing from other systems. Most of you probably already know the answer.
You screen.&lt;/p&gt;
&lt;p&gt;Sounds easy enough. My issue is that I'm incredibly lazy. I don't want
to SSH into the system AND start screen AND detach AND reattach. That's
just asking way too much of someone like me.&lt;/p&gt;
&lt;p&gt;Here's the very simple solution. In my ~/.bashrc file I appended this
section of code.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ssh() {command ssh &amp;quot;$1&amp;quot; -Xt screen -aAdr -RR work bash}
&lt;/pre&gt;
&lt;p&gt;This makes a function called SSH. Bash always uses a function over a
command if the two collide. So running ssh will call this function
instead of calling the command(app) /usr/bin/ssh. If you want to not use
the function&lt;/p&gt;
&lt;p&gt;but use SSH you have two options. The first option is call the function
something else. Either s(), sshw(), or something_else().&lt;/p&gt;
&lt;p&gt;Recursion can happen. The &amp;quot;command&amp;quot; command is a BASH built-in function
if I recall correctly. This command breaks the function calls so it will
call /usr/bin/ssh (found from $PATH) rather than ssh(). Simple enough
to understand but not so easy to explain. I hope I did OK with that.&lt;/p&gt;
&lt;p&gt;The next part of this is the $1. This is the first parameter passed to
the ssh command. Example being &amp;quot;ssh foo.com&amp;quot; will insert foo.com in
place of $1.&lt;/p&gt;
&lt;p&gt;The rest of this is pretty simple. You establish the SSH connection and
call screen. If screen is running an instance named work it will attach
to that and boot the other connection. If the instance isn't named
doesn't exist&lt;/p&gt;
&lt;p&gt;then it gets created. Then &amp;quot;bash&amp;quot; following is just the command executed
on the new instance. I have a similar command that has irssi at the end.&lt;/p&gt;
&lt;p&gt;While writing this I was thinking about the need for using ssh to
connect to another server. Maybe you want to do something entirely
different. The answer is pretty simple. The function is designed so you
only pass one&lt;/p&gt;
&lt;p&gt;parameter to it. So any additional parameters means you're doing
something different.&lt;/p&gt;
&lt;p&gt;To make it simple I just came up with this function instead.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ssh() {
    if [[ &amp;quot;$2&amp;quot; == &amp;quot;&amp;quot; ]]; then
        command ssh &amp;quot;$1&amp;quot; -Xt screen -aAdr -RR work bash
    else
        command ssh $&amp;#64;
    fi
}
&lt;/pre&gt;
&lt;p&gt;If you only pass the server you're connecting to into the ssh command,
it will work with screen. If you pass it with more than one parameter it
just runs /usr/bin/ssh with the parameters you used.&lt;/p&gt;
&lt;p&gt;It's so simple but putting the pieces together can be a bit of a pain
the first time. I hope this will help someone else that may have a
similar use case.&lt;/p&gt;
</content><category term="linux"></category><category term="ssh"></category></entry><entry><title>Securing Websites</title><link href="https://michael.lustfield.net/nginx/securing-websites" rel="alternate"></link><published>2010-08-11T22:19:00-05:00</published><updated>2010-08-11T22:19:00-05:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2010-08-11:/nginx/securing-websites</id><summary type="html">&lt;p&gt;Building a secure setup is extremely hard. There's an old saying that's
basically &amp;quot;build an idiot-proof system and the world will build a better
idiot.&amp;quot; That works two ways. If you build a hacker-proof system then
you'll find better hackers. Loosely defined use of the term hacker of
course.&lt;/p&gt;
&lt;p&gt;So …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Building a secure setup is extremely hard. There's an old saying that's
basically &amp;quot;build an idiot-proof system and the world will build a better
idiot.&amp;quot; That works two ways. If you build a hacker-proof system then
you'll find better hackers. Loosely defined use of the term hacker of
course.&lt;/p&gt;
&lt;p&gt;So, how does one make a secure web server. The easiest would be to use
something like Nginx and server only static content with hundreds of
layers of strong security to get to altering those files with only one
fully trustworthy person able to pass through all of the layers and a
system of ensuring only correct content exists with no possible local
access.&lt;/p&gt;
&lt;p&gt;Moving over to the real world, I came up with my own system. For
starters, my company operates on a limited budget. Most of our servers
operate on 1.5GB RAM or less. We only have one system with more, and
it's not our production system.&lt;/p&gt;
&lt;p&gt;My company does Drupal / Pressflow website development and hosting as
well as graphic design. This means we use PHP. The problem is that PHP
has exec(). You can forbid the use of this but what you end up with is a
few things that won't work. In our case, it's Drush. That's irritating
enough by itself. If a person can touch your source code you basically
need to assume they can run anything on the shell.&lt;/p&gt;
&lt;p&gt;Fighting this is in some ways trivial and in some ways not. The simple
is the concept that all you need to do is restrict what the user account
can do and touch. The part that's not trivial is everything else. You
need to consider how the user will be separated from the system and how you
will interact with that users data.&lt;/p&gt;
&lt;p&gt;My solution came in a few ways. The first step is to not allow PHP to
execute exec(). That one still bites but I definitely need to do it. The
next was file system permissions. I don't care if anyone can read static
content, but I don't want them reading PHP of other users. Partly
because this includes settings.&lt;/p&gt;
&lt;p&gt;The solution here was to lock down home directory permissions. I run one
instance of PHP for each website as the user that owns the website. Of
source that's bound to a socket. I also include a periodic script that
rechecks permissions to make sure a user didn't change them. Because
only that user can read any PHP data, the connection strings are locked
down pretty tight. One site broken into won't inherently mean access to
all websites.&lt;/p&gt;
&lt;p&gt;Let's go back to the source here. Keeping a server secure means locking
down the users. I don't want them accessing 100's of commands and files
that they have no use for. Every additional application available,
there's an additional point of attack. So we need to eliminate this. You
can take the route of hardening the system beyond imagination and to the
point where your admin tasks suffer. This sounds icky to me.&lt;/p&gt;
&lt;p&gt;My thought, is to simply put the users in a jail. What's the best way is
a hard question to ask. I went a few ways. The first part in the path I
took was using debootstrap to build a chroot environment. Trust me,
trimming down a larger environment is MUCH easier than building up a
barely functional bare bones system. You get a much smaller system this
way though.&lt;/p&gt;
&lt;p&gt;I used debchroot and jailkit. The former is in the repositories but the
latter isn't. I loved this project so I setup some auto builds in
Launchpad. Check out the PPA in Launchpad &lt;a class="reference external" href="https://launchpad.net/%7Ejailkit/+archive/ppa"&gt;for jailkit&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to build a very minimal system you can follow these
commands.&lt;/p&gt;
&lt;p&gt;NOTE!! I found that a reboot after installing the package and after
running the basic commands can save you from having very severe issues.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# Basic System
mkdir /jailjk_init -v /jail
basicshelljk_init -v /jail
netutilsjk_init -v /jail
sshjk_init -v /jail jk_lsh
# Extras (add bash)
jk_cp -v -f /jail $(which bash)
# Extras (add su)
jk_cp -v -f /jail $(which su)
# Extras (add nano)
jk_cp -v -f /jail $(which nano)
&lt;/pre&gt;
&lt;p&gt;That looks amazingly easy, and it works. This issue is that it's too
minimal for doing most things. What I did was start with a chroot
bootstrap. Here's what I did BEFORE jk_init.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
debootstrap lenny /jail
&lt;/pre&gt;
&lt;p&gt;When that's done we want to strip it down.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
chroot /jailapt-get remove foo
&lt;/pre&gt;
&lt;p&gt;It's really that simple. You can add applications the same way.&lt;/p&gt;
&lt;p&gt;Now that you have your environment setup, you need to move users into
it. This is just too easy. A caution would be to not move your own
account into this or you could lose access to the entire parent system.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
jk_jailuser -m -s /bin/bash -j /jail USER
&lt;/pre&gt;
&lt;p&gt;This will move the user into the jail and setup their shell to am
application that will put them in the chroot when they log in. The -s
/bin/bash sets their shell inside of the chroot to bash. Otherwise they
get&lt;/p&gt;
&lt;p&gt;a shell that basically forbids interactive logins. The -m moves their
home directory in the jail. Make sure they're not logged in when you do
this.&lt;/p&gt;
&lt;p&gt;If you want more help, then look at &lt;a class="reference external" href="http://www.marthijnvandenheuvel.com/2010/03/10/how-to-create-a-chroot-ssh-user-in-ubuntu/"&gt;the guide&lt;/a&gt; that I followed to
understand jailkit. There's even more help available at the &lt;a class="reference external" href="http://olivier.sessink.nl/jailkit/"&gt;jailkit
website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can read the users data outside of the jail at /jail/home/user. Easy
enough. In fact, I just pointed my web server (nignx) at the new
location. This is pretty spiffy in that it's easy to do and really gives
you a more&lt;/p&gt;
&lt;p&gt;secure system because the users have no direct access to the parent
system. If you really want to get mean you could set the users shell to
/bin/rbash inside of the jail. I don't really see the point though.&lt;/p&gt;
&lt;p&gt;In my book, this is a much more secure setup. Nginx only reads static
content and PHP runs as the user and can't touch anything else. Even
allowing exec() we can feel much more comfortable in what the user is
able&lt;/p&gt;
&lt;p&gt;to touch. I still hate that exec() though. At this point, it's the users
only direct path into our main system.&lt;/p&gt;
&lt;p&gt;So.. in php.ini let's find &amp;quot;disable_functions = &amp;quot; and add &amp;quot;exec&amp;quot; to the
end. After restarting the PHP processes we will have eliminated the
worry of exec(). In my case I need it. Largely in part from bad code and
other&lt;/p&gt;
&lt;p&gt;developers using what amounts to being the wrong tool for the job. For
now, it's a battle that I'll need to admit defeat on. Coming up, a bit
battle with thousands of lines of code. Reworking a whole PHP project to
something&lt;/p&gt;
&lt;p&gt;that is better suited for the job. Perhaps it's time to learn python.&lt;/p&gt;
&lt;p&gt;Sometimes I need to run things as the user. These things are often not
available inside of the jail. Things like PHP. I don't want the user to
see that PHP is even available except for the .php files. There's a
simple way&lt;/p&gt;
&lt;p&gt;to do this. Rather than explain the whole thing, I'll just show.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo -n -u $user -s -- $command
&lt;/pre&gt;
&lt;p&gt;It looks simple, but it's another thing that took some painful work.
Basically, this allows me to do something as the user from outside of
the jail. There are a few itty bitty tweaks that need to take place but
I have had no issues with it once working.&lt;/p&gt;
&lt;p&gt;In the end it comes down to this. My setup won't work for everyone. If I
gave you my Nginx and PHP configs, you probably couldn't use it. I'm
commonly referred to as crazy or insane and this is a fact I won't
dispute.&lt;/p&gt;
&lt;p&gt;Running so many websites on 1GB of RAM is a feat in itself. However,
making a secure and locked down server is possible. It's not that hard.
If there's any documentation to what you're doing, it's trivial. Yes,
selinux did go through my head. No, I've not said no to it yet. It's
just an annoying pain that I don't feel like dealing with yet.&lt;/p&gt;
&lt;p&gt;What do you do to harden your server? I'd love to know. I'm doing
something that's apparently not done and poorly documented. Hopefully
this will throw a bone in the direction of someone else fighting the
same thing. There's so many things you can do. However, most of them
require that you heavily modify your OS. I'm happy to have found a
system that doesn't require this on nearly the same level.&lt;/p&gt;
</content><category term="nginx"></category><category term="websites"></category><category term="nginx"></category><category term="php"></category><category term="overkill"></category></entry><entry><title>Jack of all trades, master of none</title><link href="https://michael.lustfield.net/rambling/jack-of-all-trades-master-of-none" rel="alternate"></link><published>2010-07-18T06:28:00-05:00</published><updated>2010-07-18T06:28:00-05:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2010-07-18:/rambling/jack-of-all-trades-master-of-none</id><summary type="html">&lt;p&gt;&amp;quot;Jack of all trades, master of none&amp;quot; is a figure of speech used in
reference to a generalist: a person that is competent with many skills
but is not outstanding in any particular one. (Wikipedia)&lt;/p&gt;
&lt;p&gt;It's a very easy to become this. When I was 15 I got my first …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&amp;quot;Jack of all trades, master of none&amp;quot; is a figure of speech used in
reference to a generalist: a person that is competent with many skills
but is not outstanding in any particular one. (Wikipedia)&lt;/p&gt;
&lt;p&gt;It's a very easy to become this. When I was 15 I got my first job. I
worked at a grocery store. During that time I became a true master of
nearly every department. I was doing the closing work, the produce
department, the bakery department, checking, stocking, inventory
management, unloading truck, etc. No big deal really. Anyone that works
at a grocery store for a couple years gets to that point. After working
there, I started working at a pharmacy for a while. Then I started
working at a boat manufacturing facility before going to college. While
at college I started working at a meat locker. These last two jobs I
went in knowing they were temporary. I also took on a temporary position
as a construction worker.Then I started working at a security
development company. I had to stop because of all the insecurities I
found running around that wouldn't be acknowledged. Then I went onto
working as on site technical support. Part of that company got sold off
and I became an employee of another company. This is another company
that my personal beliefs conflicted with too much and lasted only a
month. After that I took a month off and started working at Hy-Vee. This
was an excellent place to work except that a previous injury took it's
toll. After a back surgery and too many late nights my back couldn't
take it anymore. Then I decided to focus on school. I did this until
someone decided they thought I'd be the perfect administrator for them.
That's when the two of us and one of his friends started Kalliki
Software. At 22 years old I'm now part owner of a business that has two
other employees.&lt;/p&gt;
&lt;p&gt;The fun thing is that what I stated is only my work history. I also did
a lot of open source work. I've played with the Linux kernel, Drupal
development, Ubuntu packaging, server development, security development,
FOSS programming in many languages, bug management, bug patching, user
support, around a few thousand or so other tasks.&lt;/p&gt;
&lt;p&gt;You'd think I'd be a pretty well rounded person. The truth is that not
specializing in one thing really hurts you overall. It's great to
understand a little tiny bit of everything. That's true. Understanding a
little bit of everything helps you understand how things fit in
together. For example, you want to know how an accountant interacts with
their software so you can know what they expect when you're designing a
new piece of software to replace their current system. It's also true
that working in too many different areas will prevent you from ever
becoming a master of one.&lt;/p&gt;
&lt;p&gt;This is the dilemma I face as a CTO today. I've worked in so many
different areas that I never let myself specialize in the one industry I
really cared about. I haven't been able to master any general tasks I
love doing. I've progressed in these areas but have yet to feel I've
really mastered any of it. It's definitely an issue many face. As
technology grows, our need to know everything and still specialize grows
more. Being a database administrator means you work with databases. That
should be all you ever do. In real life they're expected to also know
how to make other programming tools interact with the database. They're
expected to fix their neighbors computer when they break it.&lt;/p&gt;
&lt;p&gt;As an administrator I'm expected to run servers, no the best OS to use
in what situation, how to setup a mail server, how to setup
virtualization, setup staging environments, built testing servers for
developers, work on scripts for a few hundred tasks, make sure things
never ever go down. As a FOSS advocate I'm expected to work on many
different things such as what's listed above. As a CTO I'm expected to
understand hiring processes, financial management, and have *hack*
interpersonal skills. I'm without a doubt one of only a very large
number of people fighting this.&lt;/p&gt;
&lt;p&gt;We need to know a little about everything; we also need to make sure we
pick one thing to be a true master at and a couple other things to
become very proficient with. Is this going to happen? I really doubt it.&lt;/p&gt;
&lt;p&gt;The solution: I have none.&lt;/p&gt;
</content><category term="rambling"></category><category term="management"></category><category term="rant"></category></entry><entry><title>Light Weight Firefox Notes</title><link href="https://michael.lustfield.net/linux/light-weight-firefox-notes" rel="alternate"></link><published>2010-07-17T22:55:00-05:00</published><updated>2010-07-17T22:55:00-05:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2010-07-17:/linux/light-weight-firefox-notes</id><summary type="html">&lt;p&gt;Lately I've been cumulating a very large list of things I need to do.
It's been getting harder and harder to keep track of what I need to do.
If I make a nice simple text file and a command to open up vim with my
notes then I wind …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Lately I've been cumulating a very large list of things I need to do.
It's been getting harder and harder to keep track of what I need to do.
If I make a nice simple text file and a command to open up vim with my
notes then I wind up adding notes but never checking them. That helps
but it's not enough. There's a lot of really heavy note taking options
out there. You could make your home page go to Google Notebook. That's
definitely not light weight.&lt;/p&gt;
&lt;p&gt;I got fed up with these very heavy and cumbersome options. Instead, I
wanted something that was magic and instant. I don't want to wait to
load things. What do we come up with then?&lt;/p&gt;
&lt;p&gt;I started thinking about what applications I use the most. Firefox,
irssi, claws-mail, the terminal. That covers most of it. With Firefox I
open up new tabs all the time. BINGO! All I need to do is put my notes
in that new tab before I press Ctrl+L or Ctrl+K. Simple right? Yes.&lt;/p&gt;
&lt;p&gt;Here's how I did it:&lt;/p&gt;
&lt;p&gt;First of all, we need to make a file for our notes. We'll place this in
/home/YOUR_NAME/.notes. This leading dot (.) on the notes file will
make it a hidden file. This will initially be a hidden file. I'd rather
apply some pretty formatting. In this file I added the following text.&lt;/p&gt;
&lt;p&gt;~/.notes&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;lt;style&amp;gt; body { background-color: #BAD6AB; color: #000000; } &amp;lt;/style&amp;gt;&amp;lt;body&amp;gt;&amp;lt;center&amp;gt;&amp;lt;h1&amp;gt; Notes &amp;lt;/h1&amp;gt;
&lt;/pre&gt;
&lt;p&gt;It's not W3C compliant and honestly I don't really care. For this
purpose there's not really any sensible way to do it without using a
second file. That adds weight that I don't want.&lt;/p&gt;
&lt;p&gt;Now we need to make this file our home page. I'm assuming you replaced
YOUR_NAME with your actual user name above. We'll do that again. In
Firefox, go to Edit &amp;gt; Preferences. Under th&lt;/p&gt;
&lt;p&gt;e General tab you will see a Startup box. In the &amp;quot;When Firefox starts:&amp;quot;
drop down pick Show my home page.&amp;quot; In the &amp;quot;Home Page:&amp;quot; text box type
&amp;quot;&lt;a class="reference external" href="file:///home/YOUR_NAME/.notes"&gt;file:///home/YOUR_NAME/.notes&lt;/a&gt;&amp;quot; without the quotes. Now when you open
Firefox, this file will be displayed.&lt;/p&gt;
&lt;p&gt;This still isn't simple or easy though. We definitely want to make it
easy to enter notes. Let's do this. I use rxvt and dash because they're
as light as you can get without being pieces of crap. I also use
Openbox. I added a section to my rc.xml file that looks like this.&lt;/p&gt;
&lt;p&gt;~/.config/openbox/rc.xml&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;lt;keybind key=&amp;quot;W-n&amp;quot;&amp;gt;
    &amp;lt;action name=&amp;quot;Execute&amp;quot;&amp;gt;
        &amp;lt;execute&amp;gt;rxvt --geometry 100x1+300+300 +sb -fn 9x15 -bg black -fg grey -T Notes -e /bin/dash -c 'read -p &amp;quot;Note: &amp;quot; note &amp;amp;&amp;amp; echo &amp;quot;&amp;amp;lt;p&amp;amp;gt;$note&amp;amp;lt;/p&amp;amp;gt;&amp;quot; &amp;gt;&amp;gt; ~/.notes'&amp;lt;/execute&amp;gt;
    &amp;lt;/action&amp;gt;
&amp;lt;/keybind&amp;gt;
&lt;/pre&gt;
&lt;p&gt;I broke this onto a few lines for readability. The non-broken command is
a few lines down.&lt;/p&gt;
&lt;p&gt;This runs the command when I press Win+n. The important thing to take
away from this is the section between the execute tags. It is the
shortcut that you need to run.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
rxvt --geometry 100x1+300+300 +sb -fn 9x15 -bg black -fg grey -T Notes -e /bin/dash -c 'read -p &amp;quot;Note: &amp;quot; note &amp;amp;&amp;amp; echo &amp;quot;&amp;lt;p&amp;gt;$note&amp;lt;/p&amp;gt;&amp;quot; &amp;gt;&amp;gt; ~/.notes'
&lt;/pre&gt;
&lt;p&gt;This will give you a very nice little pop up that lets you type in a
note, press enter, and done. Remember that you need to have both rxvt
and dash installed. Try it out and then open your home page in Firefox.
You should be very pleased with the result. If you don't think it's
pretty - then change the style tags to whatever you want.&lt;/p&gt;
&lt;p&gt;That's great. How often you actually open your home page could change
this though. If you're like me, it's very rare. I do open a lot of new
tabs though. There is an addon called &lt;a class="reference external" href="https://addons.mozilla.org/en-US/firefox/addon/777/"&gt;New Tab Homepage&lt;/a&gt; that does a
very simple task. When you open a new tab, it loads your home page. I'm
very surprised this isn't an option built into Firefox. Ctrl+T and you
see your notes.&lt;/p&gt;
&lt;p&gt;There you have it. An in-your-face and drop-dead-easy but also
super-fast-and-light way to keep you on top of what you need to do. I
haven't tried this out for too long so we'll se how it stands up in the
long run.&lt;/p&gt;
</content><category term="linux"></category><category term="kiss"></category></entry><entry><title>Nginx vs. Apache</title><link href="https://michael.lustfield.net/nginx/nginx-vs-apache" rel="alternate"></link><published>2010-03-01T05:37:00-06:00</published><updated>2010-03-01T05:37:00-06:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2010-03-01:/nginx/nginx-vs-apache</id><summary type="html">&lt;p&gt;warning: no proof reading and some rambling...&lt;/p&gt;
&lt;p&gt;I recently made the change to Nginx from Apache. This change came with a
severe lack of fun and enjoyment. The whole process was &amp;gt;150 hours.
Painstaking. It should be pretty easy to move this to my production
server, probably be much much …&lt;/p&gt;</summary><content type="html">&lt;p&gt;warning: no proof reading and some rambling...&lt;/p&gt;
&lt;p&gt;I recently made the change to Nginx from Apache. This change came with a
severe lack of fun and enjoyment. The whole process was &amp;gt;150 hours.
Painstaking. It should be pretty easy to move this to my production
server, probably be much much easier. I have yet to even touch using it
as a proxy.&lt;/p&gt;
&lt;p&gt;Was the change worth it? I'd have to start by saying the reason for the
switch is a cap in RAM and system that we can utilize. We were hitting
our heads on that ceiling and frankly, going out to invest in more
memory and a host of other crap just didn't feel like the Linux way. It
felt like the Windows way.&lt;/p&gt;
&lt;p&gt;The raw data was generated by &amp;quot;&lt;tt class="docutils literal"&gt;top &lt;span class="pre"&gt;-b&lt;/span&gt; &lt;span class="pre"&gt;-d&lt;/span&gt; 04.00 &lt;span class="pre"&gt;-n&lt;/span&gt; 45 &amp;gt; &lt;span class="pre"&gt;file-httpd&lt;/span&gt;&lt;/tt&gt;&amp;quot;.
After parsing the output I now know a few more options to top would have
been a good idea. The total disk size of this data came to 2.1MB. That's
too much to post here. The summary contains a nicer collection of this
information and does not have modified values.&lt;/p&gt;
&lt;p&gt;The results we got are summarized the OOo document attached.
(Benchmark.ods)&lt;/p&gt;
&lt;p&gt;The test was pretty informal:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
start httpd
tell group to hammer sites (after clearing cache)
wait until top finishes
kill httpd
tell group to clear cache and get ready for new httpd
did with apache running; nginx running; no httpd/users (null)
&lt;/pre&gt;
&lt;p&gt;The summary:&lt;/p&gt;
&lt;p&gt;Nginx clearly beats Apache.&lt;/p&gt;
&lt;p&gt;Was the difference enough for me to get excited? YES!&lt;/p&gt;
&lt;p&gt;Attachments:&lt;/p&gt;
&lt;p&gt;&lt;img alt="image0" src="/files/icons/x-office-spreadsheet.png" /&gt; &lt;a class="reference external" href="/files/uploads/Benchmark.ods"&gt;Benchmark.ods&lt;/a&gt;&lt;/p&gt;
</content><category term="nginx"></category><category term="nginx"></category><category term="apache"></category><category term="reviews"></category></entry><entry><title>I Use Linux; Get It Right</title><link href="https://michael.lustfield.net/rambling/i-use-linux-get-it-right" rel="alternate"></link><published>2010-01-05T18:19:00-06:00</published><updated>2010-01-05T18:19:00-06:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2010-01-05:/rambling/i-use-linux-get-it-right</id><summary type="html">&lt;p&gt;WOW! I didn't expect this to be such a popular post. Honestly, I
recognise this as a rant both now and before posting. I'm impressed by
the number of people that were able to take a rant and make something
nice out of it.&lt;/p&gt;
&lt;p&gt;== Begin Opening ==&lt;/p&gt;
&lt;p&gt;I ventured onto the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;WOW! I didn't expect this to be such a popular post. Honestly, I
recognise this as a rant both now and before posting. I'm impressed by
the number of people that were able to take a rant and make something
nice out of it.&lt;/p&gt;
&lt;p&gt;== Begin Opening ==&lt;/p&gt;
&lt;p&gt;I ventured onto the gnu.org website wanting to read what their licenses
actually were. In the process I decided that I should figure out what
GNU actually is. Aside from discovering that the FSF seems to be just a
source of income for GNU, I was quite disturbed.&lt;/p&gt;
&lt;p&gt;I want to make very clear that I went into this with no bias in one way
or the other. It is only after all my research that I developed a very
strong opinion. I also want to say that a majority of my research was
done by reading pro-GNU information. I also asked about this in the #gnu
channel on Freenode. Below I'm giving my opinion on two specific
documents that bothered me in particular. Their text is cited verbatim
as well as links to the original.&lt;/p&gt;
&lt;p&gt;# Documents are below the conclusion.&lt;/p&gt;
&lt;p&gt;== Begin Conclusion ==&lt;/p&gt;
&lt;p&gt;Instead of placing my conclusion at the very bottom it's going here.&lt;/p&gt;
&lt;p&gt;If you don't want to read the whole thing, it boils down to GNU feeling
they thought of it first so their the originators of the Linux project
and all work belongs to them. However, I encourage you to actually read
it for yourself. Just follow the links, you don't need my opinions for
this.&lt;/p&gt;
&lt;p&gt;After everything below I have no doubt that what we call &amp;quot;Linux&amp;quot; should
be &amp;quot;Linux&amp;quot; and NOT &amp;quot;GNU/Linux.&amp;quot; I'm actually very certain that GNU
doesn't belong in the name of any operating system at this point. If
they can ever finish their own OS, then perhaps they can call that
system &amp;quot;GNU.&amp;quot; Until then, they should realize their failures as
developers and as free software idealists. They should realize that they
can make a &amp;quot;GNU Linux&amp;quot; system that is stripped of anything they don't
like and realize that this is what theire &amp;quot;GNU system&amp;quot; is.&lt;/p&gt;
&lt;p&gt;They claim we can't exist without them but that's wrong. Linux
distributions exist without any GNU software in them. They really need
to remove themselves from their communist beliefs and take a jump into
the real world.&lt;/p&gt;
&lt;p&gt;00:00 GNU: No! I use &amp;quot;Linux&amp;quot; and I will never use &amp;quot;GNU/Linux.&amp;quot; FOSS
belongs to everyone. Stop trying to claim the work of so many others as
your own.&lt;/p&gt;
&lt;p&gt;== Begin Doc 1 ==&lt;/p&gt;
&lt;div class="section" id="linux-and-the-gnu-project"&gt;
&lt;h2&gt;&lt;a class="reference external" href="http://www.gnu.org/gnu/linux-and-gnu.html"&gt;Linux and the GNU Project&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
Many computer users run a modified version of the GNU system every
day, without realizing it. Through a peculiar turn of events, the
version of GNU which is widely used today is often called &amp;quot;Linux&amp;quot;,
and many of its users are not aware that it is basically the GNU
system, developed by the GNU Project.&lt;/blockquote&gt;
&lt;p&gt;Linux is a kernel. It's not GNU. You explain this later down but maybe
you should start with clarity.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There really is a Linux, and these people are using it, but it is
just a part of the system they use. Linux is the kernel: the program
in the system that allocates the machine's resources to the other
programs that you run. The kernel is an essential part of an
operating system, but useless by itself; it can only function in the
context of a complete operating system. Linux is normally used in
combination with the GNU operating system: the whole system is
basically GNU with Linux added, or GNU/Linux. All the so-called
&amp;quot;Linux&amp;quot; distributions are really distributions of GNU/Linux.&lt;/p&gt;
&lt;p&gt;Many users do not understand the difference between the kernel,
which is Linux, and the whole system, which they also call &amp;quot;Linux&amp;quot;.
The ambiguous use of the name doesn't help people understand. These
users often think that Linus Torvalds developed the whole operating
system in 1991, with a bit of help.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Since when is a set of programs an operating system? Unless you have
some magic system that runs without a kernel your &amp;quot;GNU operating system&amp;quot;
is useless by itself as well. Besides, a Linux based operating system
can run just fine without GNU programs.&lt;/p&gt;
&lt;p&gt;Nobody thinks Linus developed all of the Linux based OS. Heck, most
people know that he didn't even write the entire Linux kernel himself.
The Linux kernel is a massive project with many very intelligent
programmers working on it.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Programmers generally know that Linux is a kernel. But since they
have generally heard the whole system called &amp;quot;Linux&amp;quot; as well, they
often envisage a history that would justify naming the whole system
after the kernel. For example, many believe that once Linus Torvalds
finished writing Linux, the kernel, its users looked around for
other free software to go with it, and found that (for no particular
reason) most everything necessary to make a Unix-like system was
already available.&lt;/p&gt;
&lt;p&gt;What they found was no accident-it was the not-quite-complete GNU
system. The available free software added up to a complete system
because the GNU Project had been working since 1984 to make one. In
the The GNU Manifesto we set forth the goal of developing a free
Unix-like system, called GNU. The Initial Announcement of the GNU
Project also outlines some of the original plans for the GNU system.
By the time Linux was started, GNU was almost finished.&lt;/p&gt;
&lt;p&gt;Most free software projects have the goal of developing a particular
program for a particular job. For example, Linus Torvalds set out to
write a Unix-like kernel (Linux); Donald Knuth set out to write a
text formatter (TeX); Bob Scheifler set out to develop a window
system (the X Window System). It's natural to measure the
contribution of this kind of project by specific programs that came
from the project.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let's see here... You started in 1984, he started in 1991. I don't know
when he finished but I sure as heck hope that you're nearly complete
after 7 years. However, you're still not near being completed. I don't
know what you mean about measuring contributions by specific programs.
The specific programs are generally not very useful. I measure
contributions based on the community, not a single entity.&lt;/p&gt;
&lt;p&gt;Most of this paragraph is pretty generic text though.&lt;/p&gt;
&lt;blockquote&gt;
If we tried to measure the GNU Project's contribution in this way,
what would we conclude? One CD-ROM vendor found that in their &amp;quot;Linux
distribution&amp;quot;, GNU software was the largest single contingent,
around 28% of the total source code, and this included some of the
essential major components without which there could be no system.
Linux itself was about 3%. (The proportions in 2008 are similar: in
the &amp;quot;main&amp;quot; repository of gNewSense, Linux is 1.5% and GNU packages
are 15%.) So if you were going to pick a name for the system based
on who wrote the programs in the system, the most appropriate single
choice would be &amp;quot;GNU&amp;quot;.&lt;/blockquote&gt;
&lt;p&gt;You lack any source for this &amp;quot;28%.&amp;quot; That doesn't matter because the
point is pretty irrelevant. Considering that you neglect a date, this
point is further irrelevant. If you really want to use % as a measure of
contribution and you can only contribute 15% GNU code to your &amp;quot;pure&amp;quot;
gNewSense system, that's pretty sad. You're saying that you only
contributed 15% to your own project and that's without even using your
own kernel.&lt;/p&gt;
&lt;blockquote&gt;
But that is not the deepest way to consider the question. The GNU
Project was not, is not, a project to develop specific software
packages. It was not a project to develop a C compiler, although we
did that. It was not a project to develop a text editor, although we
developed one. The GNU Project set out to develop a complete free
Unix-like system: GNU.&lt;/blockquote&gt;
&lt;p&gt;Well, you have yet to produce this complete system. So to this point all
you have contributed to the FOSS community IS in fact just a set of
software packages. Don't get me wrong, these are great pieces of
software, but the point still stands.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Many people have made major contributions to the free software in
the system, and they all deserve credit for their software. But the
reason it is an integrated system-and not just a collection of
useful programs-is because the GNU Project set out to make it one.
We made a list of the programs needed to make a complete free
system, and we systematically found, wrote, or found people to write
everything on the list. We wrote essential but unexciting (1)
components because you can't have a system without them. Some of our
system components, the programming tools, became popular on their
own among programmers, but we wrote many components that are not
tools (2). We even developed a chess game, GNU Chess, because a
complete system needs games too.&lt;/p&gt;
&lt;p&gt;By the early 90s we had put together the whole system aside from the
kernel. We had also started a kernel, the GNU Hurd, which runs on
top of Mach. Developing this kernel has been a lot harder than we
expected; the GNU Hurd started working reliably in 2001, but it is a
long way from being ready for people to use in general.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I don't think the GNU project is the sole reason everything became an
integrated system. Your work sure helped immensely, but you aren't the
glue that sticks everything together. We have an integrated system
because countless developers and other contributers got together to
build a complete system. You wrote &amp;quot;essential but unexciting&amp;quot; software
applications and the world appreciates it. You have yet to develop your
own kernel and rely on Linux.&lt;/p&gt;
&lt;blockquote&gt;
Fortunately, we didn't have to wait for the Hurd, because of Linux.
Once Torvalds wrote Linux, it fit into the last major gap in the GNU
system. People could then combine Linux with the GNU system to make
a complete free system: a Linux-based version of the GNU system; the
GNU/Linux system, for short.&lt;/blockquote&gt;
&lt;p&gt;Perhaps it's the other way around. Perhaps Linux was developed knowing
GNU was working on other software. Perhaps they kept compatibility in
mind. It seems more that Linux was built in a way that would allow GNU
to &amp;quot;fit into&amp;quot; the Linux based OS. This little argument goes both ways
and is ineffective either way.&lt;/p&gt;
&lt;blockquote&gt;
Making them work well together was not a trivial job. Some GNU
components(3) needed substantial change to work with Linux.
Integrating a complete system as a distribution that would work &amp;quot;out
of the box&amp;quot; was a big job, too. It required addressing the issue of
how to install and boot the system-a problem we had not tackled,
because we hadn't yet reached that point. Thus, the people who
developed the various system distributions did a lot of essential
work. But it was work that, in the nature of things, was surely
going to be done by someone.&lt;/blockquote&gt;
&lt;p&gt;Hm.. So they didn't &amp;quot;just fit?&amp;quot; The fact that you're the one that needed
to recode your software makes me think the above argument leans more
toward the &amp;quot;Linux OS&amp;quot; side instead of the &amp;quot;GNU OS&amp;quot; side.&lt;/p&gt;
&lt;blockquote&gt;
The GNU Project supports GNU/Linux systems as well as the GNU
system. The FSF funded the rewriting of the Linux-related extensions
to the GNU C library, so that now they are well integrated, and the
newest GNU/Linux systems use the current library release with no
changes. The FSF also funded an early stage of the development of
Debian GNU/Linux.&lt;/blockquote&gt;
&lt;p&gt;Stop referring to Linux as the &amp;quot;GNU/Linux system&amp;quot; and yours as the &amp;quot;GNU
system.&amp;quot; GNU is a set of software packages and Linux is a kernel. Make
the distinction already. We get it, your foundation funded your work to
make your software applications usable on the Linux based OS.&lt;/p&gt;
&lt;blockquote&gt;
Today there are many different variants of the GNU/Linux system
(often called &amp;quot;distros&amp;quot;). Most of them include non-free
software-their developers follow the philosophy associated with
Linux rather than that of GNU. But there are also completely free
GNU/Linux distros. The FSF supports computer facilities for two of
these distributions, Ututo and gNewSense.&lt;/blockquote&gt;
&lt;p&gt;This doesn't make much sense.&lt;/p&gt;
&lt;blockquote&gt;
Making a free GNU/Linux distribution is not just a matter of
eliminating various non-free programs. Nowadays, the usual version
of Linux contains non-free programs too. These programs are intended
to be loaded into I/O devices when the system starts, and they are
included, as long series of numbers, in the &amp;quot;source code&amp;quot; of Linux.
Thus, maintaining free GNU/Linux distributions now entails
maintaining a free version of Linux too.&lt;/blockquote&gt;
&lt;p&gt;So you took Linux and ripped out the parts you didn't like. That seems
kind of pointless. Maybe you should put that time into developing your
own elitist kernel instead of worrying about whether Linux follows your
idealist beliefs.S&lt;/p&gt;
&lt;blockquote&gt;
Whether you use GNU/Linux or not, please don't confuse the public by
using the name &amp;quot;Linux&amp;quot; ambiguously. Linux is the kernel, one of the
essential major components of the system. The system as a whole is
basically the GNU system, with Linux added. When you're talking
about this combination, please call it &amp;quot;GNU/Linux&amp;quot;.&lt;/blockquote&gt;
&lt;p&gt;The whole system is more correctly the &amp;quot;Linux system&amp;quot; than it is the
&amp;quot;GNU system.&amp;quot; The system I use isn't &amp;quot;basically the GNU system.&amp;quot; What I
use is &amp;quot;the Linux based system.&amp;quot; If you ever actually finish your kernel
and remove ALL software that isn't directly from GNU we can then, and
only then call your system &amp;quot;the GNU system.&amp;quot;&lt;/p&gt;
&lt;blockquote&gt;
If you want to make a link on &amp;quot;GNU/Linux&amp;quot; for further reference,
this page and &lt;a class="reference external" href="http://www.gnu.org/gnu/the-gnu-project.html"&gt;http://www.gnu.org/gnu/the-gnu-project.html&lt;/a&gt; are
good choices. If you mention Linux, the kernel, and want to add a
link for further reference,
&lt;a class="reference external" href="http://foldoc.doc.ic.ac.uk/foldoc/foldoc.cgi?Linux"&gt;http://foldoc.doc.ic.ac.uk/foldoc/foldoc.cgi?Linux&lt;/a&gt; is a good URL
to use.&lt;/blockquote&gt;
&lt;p&gt;I'm not too interested in this segment.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Addendum: Aside from GNU, one other project has independently
produced a free Unix-like operating system. This system is known as
BSD, and it was developed at UC Berkeley. It was non-free in the
80s, but became free in the early 90s. A free operating system that
exists today(4) is almost certainly either a variant of the GNU
system, or a kind of BSD system.&lt;/p&gt;
&lt;p&gt;People sometimes ask whether BSD too is a version of GNU, like
GNU/Linux. The BSD developers were inspired to make their code free
software by the example of the GNU Project, and explicit appeals
from GNU activists helped persuade them, but the code had little
overlap with GNU. BSD systems today use some GNU programs, just as
the GNU system and its variants use some BSD programs; however,
taken as wholes, they are two different systems that evolved
separately. The BSD developers did not write a kernel and add it to
the GNU system, and a name like GNU/BSD would not fit the
situation.(5)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;quot;the code had little overlap with GNU&amp;quot; Let's be honest. not much code
you produced is even used in the Linux system. Not even your own &amp;quot;GNU
system&amp;quot; uses much GNU software.&lt;/p&gt;
&lt;p&gt;&amp;quot;The BSD developers did not write a kernel and add it to the GNU system&amp;quot;
The Linux developers didn't do this either. You modified your code to
work with Linux, not the other way around. You specifically stated this
above.&lt;/p&gt;
&lt;p&gt;== Begin Doc 2 ==&lt;/p&gt;
&lt;p&gt;On to their &amp;quot;FAQ.&amp;quot; This is a LONG one full of crap.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="gnu-linux-faq-by-richard-stallman"&gt;
&lt;h2&gt;&lt;a class="reference external" href="http://www.gnu.org/gnu/gnu-linux-faq.html"&gt;GNU/Linux FAQ by Richard Stallman&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Why do you call it GNU/Linux and not Linux?&lt;/p&gt;
&lt;p&gt;Most operating system distributions based on Linux as kernel are
basically modified versions of the GNU operating system. We began
developing GNU in 1984, years before Linus Torvalds started to write
his kernel. Our goal was to develop a complete free operating
system. Of course, we did not develop all the parts ourselves-but we
led the way. We developed most of the central components, forming
the largest single contribution to the whole system. The basic
vision was ours too.&lt;/p&gt;
&lt;p&gt;In fairness, we ought to get at least equal mention.&lt;/p&gt;
&lt;p&gt;See Linux and the GNU Project and GNU Users Who Have Never Heard of
GNU for more explanation, and The GNU Project for the history.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;See the document I ranted about above this...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Why is the name important?&lt;/p&gt;
&lt;p&gt;Although the developers of Linux, the kernel, are contributing to
the free software community, many of them do not care about freedom.
People who think the whole system is Linux tend to get confused and
assign to those developers a role in the history of our community
which they did not actually play. Then they give inordinate weight
to those developers' views.&lt;/p&gt;
&lt;p&gt;Calling the system GNU/Linux recognizes the role that our idealism
played in building our community, and helps the public recognize the
practical importance of these ideals.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It seems you care about is the system being referred to as GNU for the
sole purpose of making your views have as much weight as possible. In
reality, the FOSS community has no real single view. The only views that
dictate what happens are the views of those that direct projects. If
Linus has a view of a fully free kernel, the mainline kernel would do
this. If I want Ubuntu-Drupal to pursue a project that's within my view,
it'll happen. There's no single entity that controls the whole view of
FOSS.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How did it come about that most people call the system &amp;quot;Linux&amp;quot;?&lt;/p&gt;
&lt;p&gt;Calling the system &amp;quot;Linux&amp;quot; is a confusion that has spread faster
than the corrective information.&lt;/p&gt;
&lt;p&gt;The people who combined Linux with the GNU system were not aware
that that's what their activity amounted to. They focused their
attention on the piece that was Linux and did not realize that more
of the combination was GNU. They started calling it &amp;quot;Linux&amp;quot; even
though that name did not fit what they had. It took a few years for
us to realize what a problem this was and ask people to correct the
practice. By that time, the confusion had a big head start.&lt;/p&gt;
&lt;p&gt;Most of the people who call the system &amp;quot;Linux&amp;quot; have never heard why
that's not the right thing. They saw others using that name and
assume it must be right. The name &amp;quot;Linux&amp;quot; also spreads a false
picture of the system's origin, because people tend to suppose that
the system's history was such as to fit that name. For instance,
they often believe its development was started by Linus Torvalds in
1991. This false picture tends to reinforce the idea that the system
should be called &amp;quot;Linux&amp;quot;.&lt;/p&gt;
&lt;p&gt;Many of the questions in this file represent people's attempts to
justify the name they are accustomed to using.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Linus very clearly stated when Linux started what his intentions were.
In fact, when he started nearing it's first public release he said that
he didn't expect it to ever be as big as anything like GNU. He (not you)
ported gcc and bash to work with it. Why? He did this because you
created some FOSS applications that he could use to make Linux do
something useful. So from that standpoint Linux is the starting point
and by your statement should be called Linux.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Should we always say &amp;quot;GNU/Linux&amp;quot; instead of &amp;quot;Linux&amp;quot;?&lt;/p&gt;
&lt;p&gt;Not always-only when you're talking about the whole system. When
you're referring specifically to the kernel, you should call it
&amp;quot;Linux&amp;quot;, the name its developer chose.&lt;/p&gt;
&lt;p&gt;When people call the whole system &amp;quot;Linux&amp;quot;, as a consequence they
call the whole system by the same name as the kernel. This causes
many kinds of confusion, because only experts can tell whether a
statement is about the kernel or the whole system. By calling the
whole system &amp;quot;GNU/Linux&amp;quot;, and calling the kernel &amp;quot;Linux&amp;quot;, you avoid
the ambiguity.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;BSD uses the BSD kernel and is called BSD. Linux uses the Linux kernel
and is called Linux. GNU uses the Linux kernel and is called GNU/Linux.
My system uses the Linux kernel and I call it Linux. If you ever finish
the GNU kernel perhaps you could make a system and call it GNU and leave
Linux users alone.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Would Linux have achieved the same success if there had been no GNU?&lt;/p&gt;
&lt;p&gt;In that alternative world, there would be nothing today like the
GNU/Linux system, and probably no free operating system at all. No
one attempted to develop a free operating system in the 1980s except
the GNU Project and (later) Berkeley CSRG, which had been
specifically asked by the GNU Project to start freeing its code.&lt;/p&gt;
&lt;p&gt;Linus Torvalds was partly influenced by a speech about GNU in
Finland in 1990. It's possible that even without this influence he
might have written a Unix-like kernel, but it probably would not
have been free software. Linux became free in 1992 when Linus
rereleased it under the GNU GPL. (See the release notes for version
0.12.)&lt;/p&gt;
&lt;p&gt;Even if Torvalds had released Linux under some other free software
license, a free kernel alone would not have made much difference to
the world. The significance of Linux came from fitting into a larger
framework, a complete free operating system: GNU/Linux.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As previously mentioned; the kernel wasn't fitted into anything. Other
things were fitted into it. The statement above is pretty accurate for
information. However, there is also alot of speculation. There is no
evidence that Linus was influenced by GNU altough this is highly
possible. There is also no evidence that suggests Linux would not have
been able to take off without GNU. In all honesty, I feel that the lack
of GNU would only have made Linux not take off as fast as it did. It
would most likely just have come out with the growth of Windows instead.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Wouldn't it be better for the community if you did not divide people
with this request?&lt;/p&gt;
&lt;p&gt;When we ask people to say &amp;quot;GNU/Linux&amp;quot;, we are not dividing people.
We are asking them to give the GNU Project credit for the GNU
operating system. This does not criticize anyone or push anyone
away.&lt;/p&gt;
&lt;p&gt;However, there are people who do not like our saying this. Sometimes
those people push us away in response. On occasion they are so rude
that one wonders if they are intentionally trying to intimidate us
into silence. It doesn't silence us, but it does tend to divide the
community, so we hope you can convince them to stop.&lt;/p&gt;
&lt;p&gt;However, this is only a secondary cause of division in our
community. The largest division in the community is between people
who appreciate free software as a social and ethical issue and
consider proprietary software a social problem (supporters of the
free software movement), and those who cite only practical benefits
and present free software only as an efficient development model
(the open source movement).&lt;/p&gt;
&lt;p&gt;This disagreement is not just a matter of names-it is a matter of
differing basic values. It is essential for the community to see and
think about this disagreement. The names &amp;quot;free software&amp;quot; and &amp;quot;open
source&amp;quot; are the banners of the two positions. See Why Open Source
misses the point of Free Software.&lt;/p&gt;
&lt;p&gt;The disagreement over values partially aligns with the amount of
attention people pay to the GNU Project's role in our community.
People who value freedom are more likely to call the system
&amp;quot;GNU/Linux&amp;quot;, and people who learn that the system is &amp;quot;GNU/Linux&amp;quot; are
more likely to pay attention to our philosophical arguments for
freedom and community (which is why the choice of name for the
system makes a real difference for society). However, the
disagreement would probably exist even if everyone knew the system's
real origin and its proper name, because the issue is a real one. It
can only go away if we who value freedom either persuade everyone
(which won't be easy) or are defeated entirely (let's hope not).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The hell you're not dividing people! Go out on IRC for just a short
while. Go into #gnu onf Freenode and try to discuss this; prepare to be
flamed heavily. This is the worst offendor as discussion in other
channels can be somewhat open. However, there is a very clear line
between who is on what side. The biggest division in the community is
not &amp;quot;supporters of the free software movement&amp;quot; vs. &amp;quot;the open source
movement.&amp;quot; In fact, these two groups are commonly just grouped into the
&amp;quot;FOSS community.&amp;quot; Those that call their systems Linux tend to not even
see this line you refer to; when they do they tend to ignore it
completely. They do however still see the very clear line between (GNU,
GNU/Linux) vs. (Linux).&lt;/p&gt;
&lt;p&gt;You're acting as if the whole world is out against you. In my view, it
seems you're really just out against the world. Maybe you should start
fighting the world and listen to it. There's obviously something you're
doin wrong. You go so far as to blame any divisions in the community on
those who don't share your view.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Doesn't the GNU project support an individual's free speech rights
to call the system by any name that individual chooses?&lt;/p&gt;
&lt;p&gt;Yes, indeed, we believe you have a free speech right to call the
operating system by any name you wish. We ask that people call it
GNU/Linux as a matter of doing justice to the GNU project, to
promote the values of freedom that GNU stands for, and to inform
others that those values of freedom brought the system into
existence.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It isn't you that brought the system into existance. If you stop trying
to attribute the existance of an entire system to your own doing perhaps
you could take a step back and see where your real contributions lie.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Since everyone knows GNU's role in developing the system, doesn't
the &amp;quot;GNU/&amp;quot; in the name go without saying?&lt;/p&gt;
&lt;p&gt;Experience shows that the system's users, and the computer-using
public in general, often know nothing about the GNU system. Most
articles about the system do not mention the name &amp;quot;GNU&amp;quot;, or the
ideals that GNU stands for. GNU Users Who Have Never Heard of GNU
explains further.&lt;/p&gt;
&lt;p&gt;The people who say this are probably geeks thinking of the geeks
they know. Geeks often do know about GNU, but many have a completely
wrong idea of what GNU is. For instance, many think it is a
collection of &amp;quot;tools&amp;quot;, or a project to develop tools.&lt;/p&gt;
&lt;p&gt;The wording of this question, which is typical, illustrates another
common misconception. To speak of &amp;quot;GNU's role&amp;quot; in developing
something assumes that GNU is a group of people. GNU is an operating
system. It would make sense to talk about the GNU Project's role in
this or some other activity, but not that of GNU.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;GNU IS NOT an operating system. You spend too much time putting effort
into making sure everyone shares your own beliefs and not enough time
finishing it. Finish it, remove any other non-GNU software, and shut up
about it already.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Since I know the role of GNU in this system, why does it matter what
name I use?&lt;/p&gt;
&lt;p&gt;If your words don't reflect your knowledge, you don't teach others.
Most people who have heard of the GNU/Linux system think it is
&amp;quot;Linux&amp;quot;, that it was started by Linus Torvalds, and that it was
intended to be &amp;quot;open source&amp;quot;. If you don't tell them, who will?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Linux was started by Linus Torvalds. It was aintended to be and still is
open source. If I want to patch it then I do it. If I want to review the
code then I do it. There are times where closed source code is included
in the Linux kernel and this is because they want Linux to be usable by
anyone. Perhaps this is a view you should adopt as well.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Isn't shortening &amp;quot;GNU/Linux&amp;quot; to &amp;quot;Linux&amp;quot; just like shortening
&amp;quot;Microsoft Windows&amp;quot; to &amp;quot;Windows&amp;quot;?&lt;/p&gt;
&lt;p&gt;It's useful to shorten a frequently-used name, but not if the
abbreviation is misleading.&lt;/p&gt;
&lt;p&gt;Most everyone in developed countries really does know that the
&amp;quot;Windows&amp;quot; system is made by Microsoft, so shortening &amp;quot;Microsoft
Windows&amp;quot; to &amp;quot;Windows&amp;quot; does not mislead anyone as to that system's
nature and origin. Shortening &amp;quot;GNU/Linux&amp;quot; to &amp;quot;Linux&amp;quot; does give the
wrong idea of where the system comes from.&lt;/p&gt;
&lt;p&gt;The question is itself misleading because GNU and Microsoft are not
the same kind of thing. Microsoft is a company; GNU is an operating
system.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I agree here, shortening &amp;quot;GNU/Linux&amp;quot; to &amp;quot;GNU&amp;quot; is not correct. &amp;quot;GNU&amp;quot;
doesn't belong there in the first place so there is no shortening that
should take place. &amp;quot;Microsoft&amp;quot; is the company that owns Windows. That is
the reason shortening to &amp;quot;Windows&amp;quot; is acceptable. What is to stop us
from thinking your goal is to take the appearance of owning the Linux
based operating system? It sure seems that's what your goal is.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Isn't GNU a collection of programming tools that were included in
Linux?&lt;/p&gt;
&lt;p&gt;People who think that Linux is an entire operating system, if they
hear about GNU at all, often get a wrong idea of what GNU is. They
may think that GNU is the name of a collection of programs-often
they say &amp;quot;programming tools&amp;quot;, since some of our programming tools
became popular on their own. The idea that &amp;quot;GNU&amp;quot; is the name of an
operating system is hard to fit into a conceptual framework in which
that operating system is labeled &amp;quot;Linux&amp;quot;.&lt;/p&gt;
&lt;p&gt;The GNU Project was named after the GNU operating system-it's the
project to develop the GNU system. (See the 1983 initial
announcement.)&lt;/p&gt;
&lt;p&gt;We developed programs such as GCC, GNU Emacs, GAS, GLIBC, BASH,
etc., because we needed them for the GNU operating system. GCC, the
GNU Compiler Collection is the compiler that we wrote for the GNU
operating system. We, the many people working on the GNU Project,
developed Ghostscript, GNUCash, GNU Chess and GNOME for the GNU
system too.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now now, that's not how I feel. GNU isn't just a set of prgramming
tools. You developed other things as well. Emacs is really just an
abomination to editors. You guys made bash, and some other very useful
tools and the world appreciates that. On the other hand, we don't
appreciate your little pitty party.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What is the difference between an operating system and a kernel?&lt;/p&gt;
&lt;p&gt;An operating system, as we use the term, means a collection of
programs that are sufficient to use the computer to do a wide
variety of jobs. A general purpose operating system, to be complete,
ought to handle all the jobs that many users may want to do.&lt;/p&gt;
&lt;p&gt;The kernel is one of the programs in an operating system-the program
that allocates the machine's resources to the other programs that
are running. The kernel also takes care of starting and stopping
other programs.&lt;/p&gt;
&lt;p&gt;To confuse matters, some people use the term &amp;quot;operating system&amp;quot; to
mean &amp;quot;kernel&amp;quot;. Both uses of the term go back many years. The use of
&amp;quot;operating system&amp;quot; to mean &amp;quot;kernel&amp;quot; is found in a number of
textbooks on system design, going back to the 80s. At the same time,
in the 80s, the &amp;quot;Unix operating system&amp;quot; was understood to include
all the system programs, and Berkeley's version of Unix included
even games. Since we intended GNU to be a Unix-like operating
system, we use the term &amp;quot;operating system&amp;quot; in the same way.&lt;/p&gt;
&lt;p&gt;Most of the time when people speak of the &amp;quot;Linux operating system&amp;quot;
they are using &amp;quot;operating system&amp;quot; in the same sense we use: they
mean the whole collection of programs. If that's what you are
referring to, please call it &amp;quot;GNU/Linux&amp;quot;. If you mean just the
kernel, then &amp;quot;Linux&amp;quot; is the right name for it, but please say
&amp;quot;kernel&amp;quot; also to avoid ambiguity about which body of software you
mean.&lt;/p&gt;
&lt;p&gt;If you prefer to use some other term such as &amp;quot;system distribution&amp;quot;
for the entire collection of programs, instead of &amp;quot;operating
system&amp;quot;, that's fine. Then you would talk about GNU/Linux system
distributions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I went through and easily ripped all GNU apps out from various operating
system. So, what should I call it now? I can't call it &amp;quot;GNU/Linux&amp;quot;
because GNU isn't part of the system at all. I also can't call it
&amp;quot;Linux&amp;quot; by your whole rant. What can I call it then? The fact of the
matter is that either way Linux is still the core and the system should
be called &amp;quot;Linux&amp;quot; either way.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The kernel of a system is like the foundation of a house. How can a
house be almost complete when it doesn't have a foundation?&lt;/p&gt;
&lt;p&gt;A kernel is not much like the foundation of a house because building
an operating system is not much like building a house.&lt;/p&gt;
&lt;p&gt;A house is built from lots of little general parts that are cut and
put together in situ. They have to be put together from the bottom
up. Thus, when the foundation has not been built, no substantial
part has been built; all you have is a hole in the ground.&lt;/p&gt;
&lt;p&gt;By contrast, an operating system consists of complex components that
can be developed in any order. When you have developed most of the
components, most of the work is done. This is much more like the
International Space Station than like a house. If most of the Space
Station modules were in orbit but awaiting one other essential
module, that would be like the GNU system in 1992.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You mean it would be useless? I'm wondering why you seem to think the
GNU software applications are the cornerstone of the operating system. A
Linux system can easily exist without GNU. However, the same can't be
said about the other way around. The &amp;quot;GNU system&amp;quot; does not exist without
GNU. GNU advocates are very clear that they feel their system is
complete even though they can not function without the Linux kernel or
the efforts of countless other developers.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Isn't the kernel the brain of the system?&lt;/p&gt;
&lt;p&gt;A computer system is not much like a human body, and no part of it
plays a role comparable to that of the brain in a human.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The kernel isn't the brain. It's a very vital part that without no
operating system will function. Without GNU the system would still
function and the gaps that were filled by GNU would be filled again.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Isn't writing the kernel most of the work in an operating system?&lt;/p&gt;
&lt;p&gt;No, many components take a lot of work.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What does this have to do with anything you're talking about?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We're calling the whole system after the kernel, Linux. Isn't it
normal to name an operating system after a kernel?&lt;/p&gt;
&lt;p&gt;That practice seems to be very rare-we can't find any examples other
than the misuse of the name &amp;quot;Linux&amp;quot;. Normally an operating system is
developed as a single unified project, and the developers choose a
name for the system as a whole. The kernel usually does not have a
name of its own-instead, people say &amp;quot;the kernel of such-and-such&amp;quot; or
&amp;quot;the such-and-such kernel&amp;quot;.&lt;/p&gt;
&lt;p&gt;Because those two constructions are used synonymously, the
expression &amp;quot;the Linux kernel&amp;quot; can easily be misunderstood as meaning
&amp;quot;the kernel of Linux&amp;quot; and implying that Linux must be more than a
kernel. You can avoid the possibility of this misunderstanding by
saying or writing &amp;quot;the kernel, Linux&amp;quot; or &amp;quot;Linux, the kernel.&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What about BSD, FreeBSD, OpenBSD, NetBSD, *BSD. These were all named
for their kernels. Microsof Windows uses two names for its kernel and
one of those is the &amp;quot;Windows kernel.&amp;quot; You're basically saying you want
us to say &amp;quot;The kernel of Ubuntu,&amp;quot; and ignore Linux where Linux is the
kernel underneath. Just like the Linux kernel is what sits underneath
your own system.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The problem with &amp;quot;GNU/Linux&amp;quot; is that it is too long. How about
recommending a shorter name?&lt;/p&gt;
&lt;p&gt;For a while we tried the name &amp;quot;LiGNUx&amp;quot;, which combines the words
&amp;quot;GNU&amp;quot; and &amp;quot;Linux&amp;quot;. The reaction was very bad. People accept
&amp;quot;GNU/Linux&amp;quot; much better.&lt;/p&gt;
&lt;p&gt;The shortest legitimate name for this system is &amp;quot;GNU&amp;quot;, but we call
it &amp;quot;GNU/Linux&amp;quot; for the reasons given below.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I found something online that describes this best...&lt;/p&gt;
&lt;p&gt;Dr. G.W. Wettstein wrote:&lt;/p&gt;
&lt;p&gt;&amp;gt; On Mar 7, 11:52am, Bill Powers wrote:&lt;/p&gt;
&lt;p&gt;&amp;gt; &amp;gt; What we need is a short, catchy, name that encompasses all of the
above...&lt;/p&gt;
&lt;p&gt;&amp;gt; &amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;gt; &amp;gt; LIGNUX !&lt;/p&gt;
&lt;p&gt;&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;gt; Catchy idea actually.&lt;/p&gt;
&lt;p&gt;&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;gt; The question to ask is do we want to go through the debacle of&lt;/p&gt;
&lt;p&gt;&amp;gt; describing it's pronunciation.....&lt;/p&gt;
&lt;p&gt;Short i, silent g, long u. Just like Linus pronounces it now.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Since Linux is a secondary contribution, would it be false to the
facts to call the system simply &amp;quot;GNU&amp;quot;?&lt;/p&gt;
&lt;p&gt;It would not be false to the facts, but it is not the best thing to
do. Here are the reasons we call that system version &amp;quot;GNU/Linux&amp;quot;
rather than just &amp;quot;GNU&amp;quot;:&lt;/p&gt;
&lt;p&gt;It's not exactly GNU-it has a different kernel (that is, Linux).
Distinguishing GNU/Linux from GNU is useful.&lt;/p&gt;
&lt;p&gt;It would be ungentlemanly to ask people to stop giving any credit to
Linus Torvalds. He did write an important component of the system.
We want to get credit for launching and sustaining the system's
development, but this doesn't mean we should treat Linus the same
way those who call the system &amp;quot;Linux&amp;quot; treat us. We strongly disagree
with his political views, but we deal with that disagreement
honorably and openly, rather than by trying to cut him out of the
credit for his contribution to the system.&lt;/p&gt;
&lt;p&gt;Since many people know of the system as &amp;quot;Linux&amp;quot;, if we say &amp;quot;GNU&amp;quot;
they may simply not recognize we're talking about the same system.
If we say &amp;quot;GNU/Linux&amp;quot;, they can make a connection to what they have
heard about.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So now Linux is just a secondary contribution to your own work? You
launched and maintain everything? I'm going to go with &amp;quot;No&amp;quot; on those.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I would have to pay a fee if I use &amp;quot;Linux&amp;quot; in the name of a product,
and that would also apply if I say &amp;quot;GNU/Linux&amp;quot;. Is it wrong if I use
&amp;quot;GNU&amp;quot; without &amp;quot;Linux&amp;quot;, to save the fee?&lt;/p&gt;
&lt;p&gt;There's nothing wrong in calling the system &amp;quot;GNU&amp;quot;; basically, that's
what it is. It is nice to give Linus Torvalds a share of the credit
as well, but you have no obligation to pay for the privilege of
doing so.&lt;/p&gt;
&lt;p&gt;So if you want to refer to the system simply as &amp;quot;GNU&amp;quot;, to avoid
paying the fee for calling it &amp;quot;Linux&amp;quot;, we won't criticize you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Since when is there a fee to put the word &amp;quot;Linux&amp;quot; on a system that's
running Linux? Last I checked Linux allows this pretty freely.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Many other projects contributed to the system as it is today; it
includes TeX, X11, Apache, Perl, and many more programs. Don't your
arguments imply we have to give them credit too? (But that would
lead to a name so long it is absurd.)&lt;/p&gt;
&lt;p&gt;What we say is that you ought to give the system's principal
developer a share of the credit. The principal developer is the GNU
Project, and the system is basically GNU.&lt;/p&gt;
&lt;p&gt;If you feel even more strongly about giving credit where it is due,
you might feel that some secondary contributors also deserve credit
in the system's name. If so, far be it from us to argue against it.
If you feel that X11 deserves credit in the system's name, and you
want to call the system GNU/X11/Linux, please do. If you feel that
Perl simply cries out for mention, and you want to write
GNU/Linux/Perl, go ahead.&lt;/p&gt;
&lt;p&gt;Since a long name such as
GNU/X11/Apache/Linux/TeX/Perl/Python/FreeCiv becomes absurd, at some
point you will have to set a threshold and omit the names of the
many other secondary contributions. There is no one obvious right
place to set the threshold, so wherever you set it, we won't argue
against it.&lt;/p&gt;
&lt;p&gt;Different threshold levels would lead to different choices of name
for the system. But one name that cannot result from concerns of
fairness and giving credit, not for any possible threshold level, is
&amp;quot;Linux&amp;quot;. It can't be fair to give all the credit to one secondary
contribution (Linux) while omitting the principal contribution
(GNU).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I drew a line and it stands as my threshold. I happened to fraw that
line at &amp;quot;Linux.&amp;quot; Nothing more, nothing less. I honestly don't care where
the credit is due. The system runs on Linux and that's what it should be
called. I have no interest in giving credit to individual contributors.
I give that credit instead to the FOSS community which is where it
belongs.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Many other projects contributed to the system as it is today, but
they don't insist on calling it XYZ/Linux. Why should we treat GNU
specially?&lt;/p&gt;
&lt;p&gt;Thousands of projects have developed programs commonly included in
today's GNU/Linux systems. They all deserve credit for their
contributions, but they aren't the principal developers of the
system as a whole, so they don't ask to be credited as such.&lt;/p&gt;
&lt;p&gt;GNU is different because it is more than just a contributed program,
more than just a collection of contributed programs. GNU is the
framework on which the system was made.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;GNU isn't a framework. It is a set of applications. These applications
were then ported to be able to run on Linux which was not even the
original doing of GNU. Linus himself made the first ports. I don't
believe you gave him any credit for that at all.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GNU is a small fraction of the system nowadays, so why should we
mention it?&lt;/p&gt;
&lt;p&gt;In 2008, we found that GNU packages made up 15% of the &amp;quot;main&amp;quot;
repository of the gNewSense GNU/Linux distribution. Linux made up
1.5%. So the same argument would apply even more strongly to calling
it &amp;quot;Linux&amp;quot;.&lt;/p&gt;
&lt;p&gt;GNU is a small fraction of the system nowadays, and Linux is an even
smaller fraction. But they are the system's core; the system was
made by combining them. Thus, the name &amp;quot;GNU/Linux&amp;quot; remains
appropriate.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This doesn't mean anything. A count of GNU apps in the GNU Main
repository doesn't mean anything to us in Linux land. For all we care
you could limit your &amp;quot;main&amp;quot; repository to GNU software only and make
that 15% into 100%. We still don't care. That's not how we in FOSS land
measure contributions. You should check it out sometime. It's really
nice when you realize the difference. Besides, you already mentioned
you've been stripping down the kernel. How are we supposed to interpret
that with this?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Many companies contributed to the system as it is today; doesn't
that mean we ought to call it GNU/Redhat/Novell/Linux?&lt;/p&gt;
&lt;p&gt;GNU is not comparable to Red Hat or Novell; it is not a company, or
an organization, or even an activity. GNU is an operating system.
(When we speak of the GNU Project, that refers to the project to
develop the GNU system.) The GNU/Linux system is based on GNU, and
that's why GNU ought to appear in its name.&lt;/p&gt;
&lt;p&gt;Much of those companies' contribution to the GNU/Linux system lies
in the code they have contributed to various GNU packages including
GCC and GNOME. Saying GNU/Linux gives credit to those companies
along with all the rest of the GNU developers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;By you're definition above, GNU is not an operating system. Then we're
back to beating that old dead horse. I think I've repeated myself with
the GNU repitions enough that you know where I stand. GNU is not an
operating system and unless you actually take your effort away from
whining it never will be.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Why do you write &amp;quot;GNU/Linux&amp;quot; instead of &amp;quot;GNU Linux&amp;quot;?&lt;/p&gt;
&lt;p&gt;Following the rules of English, in the construction &amp;quot;GNU Linux&amp;quot; the
word &amp;quot;GNU&amp;quot; modifies &amp;quot;Linux&amp;quot;. This can mean either &amp;quot;GNU's version of
Linux&amp;quot; or &amp;quot;Linux, which is a GNU package.&amp;quot; Neither of those meanings
fits the situation at hand.&lt;/p&gt;
&lt;p&gt;Linux is not a GNU package; that is, it wasn't developed under the
GNU Project's aegis or contributed specifically to the GNU Project.
Linus Torvalds wrote Linux independently, as his own project. So the
&amp;quot;Linux, which is a GNU package&amp;quot; meaning is not right.&lt;/p&gt;
&lt;p&gt;We're not talking about a distinct GNU version of Linux, the kernel.
The free GNU/Linux distros do have a separate version of Linux,
since the &amp;quot;standard&amp;quot; version contains non-free firmware &amp;quot;blobs&amp;quot;. If
this were part of the GNU Project, it could be considered &amp;quot;GNU
Linux&amp;quot;; but we would not want to call it that, because it would be
too confusing.&lt;/p&gt;
&lt;p&gt;We're talking about a version of GNU, the operating system,
distinguished by having Linux as the kernel. A slash fits the
situation because it means &amp;quot;combination.&amp;quot; (Think of &amp;quot;Input/Output&amp;quot;.)
This system is the combination of GNU and Linux; hence, &amp;quot;GNU/Linux&amp;quot;.&lt;/p&gt;
&lt;p&gt;There are other ways to express &amp;quot;combination&amp;quot;. If you think that a
plus-sign is clearer, please use that. In French, a hyphen is clear:
&amp;quot;GNU-Linux&amp;quot;. In Spanish, we sometimes say &amp;quot;GNU con Linux&amp;quot;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Actually this is quite funny. How about you refer to your system as &amp;quot;GNU
Linux&amp;quot; because your applications are modifying what we did. We'll
continue with &amp;quot;Linux&amp;quot; as all of FOSS modifies it. I guess you could call
us the &amp;quot;FOSS/Linux&amp;quot; if you really really want. Just &amp;quot;Linux&amp;quot; still makes
more sense.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Why &amp;quot;GNU/Linux&amp;quot; rather than &amp;quot;Linux/GNU&amp;quot;?&lt;/p&gt;
&lt;p&gt;It is right and proper to mention the principal contribution first.
The GNU contribution to the system is not only bigger than Linux and
prior to Linux, we actually started the whole activity.&lt;/p&gt;
&lt;p&gt;However, if you prefer to call the system &amp;quot;Linux/GNU&amp;quot;, that is a lot
better than what people usually do, which is to omit GNU entirely
and make it seem that the whole system is Linux.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Considering Linus started Linux and GNU applications need to be ported
to Linux. I'll still consider GNU the secondary contributor. So Linux
should come first. Not only that, but I still lack any reason to believe
GNU belongs in the name.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;My distro is called &amp;quot;Foobar Linux&amp;quot;; doesn't that show it's really
Linux?&lt;/p&gt;
&lt;p&gt;It means that the people who make the &amp;quot;Foobar Linux&amp;quot; distro are
repeating the common mistake.&lt;/p&gt;
&lt;p&gt;My distro's official name is &amp;quot;Foobar Linux&amp;quot;; isn't it wrong to call
the distro anything but &amp;quot;Linux&amp;quot;?&lt;/p&gt;
&lt;p&gt;If it's allowed for them to change &amp;quot;GNU&amp;quot; to &amp;quot;Foobar Linux&amp;quot;, it's
allowed for you to change it back and call the distro &amp;quot;Foobar
GNU/Linux&amp;quot;. It can't be more wrong to correct the mistake than it
was to make the mistake.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you had any real say in the matter, you wouldn't allow &amp;quot;GNU&amp;quot; to be
referred to as anything with the word Linux in it. The distribution
maker decided to name it what they felt like because Linux allows this
to be done.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Wouldn't it be more effective to ask companies such as Mandrake, Red
Hat and IBM to call their distributions &amp;quot;GNU/Linux&amp;quot; rather than
asking individuals?&lt;/p&gt;
&lt;p&gt;It isn't a choice of one or the other-we ask companies and
organizations and individuals to help spread the word about this. In
fact, we have asked all three of those companies. Mandrake said it
would use the term &amp;quot;GNU/Linux&amp;quot; some of the time, but IBM and Red Hat
were unwilling to help. One executive said, &amp;quot;This is a pure
commercial decision; we expect to make more money calling it
‘Linux’.&amp;quot; In other words, that company did not care what was right.&lt;/p&gt;
&lt;p&gt;We can't make them do this right, but we're not the sort to give up
just because the road isn't easy. You may not have as much influence
at your disposal as IBM or Red Hat, but you can still help.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So you couldn't convince the big guys to make the little guys listen so
now you want to convince the little guys to force the big guys listen.
Kind of interesting. To be honest IBM has provided a much more
substantial contribution to FOSS than GNU. If we need to decide between
IBM or GNU to pick the name we use, I'll pick IBM.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Together we can change the situation to the point where companies
will make more profit calling it &amp;quot;GNU/Linux&amp;quot;.&lt;/p&gt;
&lt;p&gt;Wouldn't it be better to reserve the name &amp;quot;GNU/Linux&amp;quot; for
distributions that are purely free software? After all, that is the
ideal of GNU.&lt;/p&gt;
&lt;p&gt;The widespread practice of adding non-free software to the GNU/Linux
system is a major problem for our community. It teaches the users
that non-free software is ok, and that using it is part of the
spirit of &amp;quot;Linux&amp;quot;. Many &amp;quot;Linux&amp;quot; User Groups make it part of their
mission to help users use non-free add-ons, and may even invite
salesmen to come and make sales pitches for them. They adopt goals
such as &amp;quot;helping the users&amp;quot; of GNU/Linux (including helping them use
non-free applications and drivers), or making the system more
popular even at the cost of freedom.&lt;/p&gt;
&lt;p&gt;The question is how to try to change this.&lt;/p&gt;
&lt;p&gt;Given that most of the community which uses GNU with Linux already
does not realize that's what it is, for us to disown these
adulterated versions, saying they are not really GNU, would not
teach the users to value freedom more. They would not get the
intended message. They would only respond they never thought these
systems were GNU in the first place.&lt;/p&gt;
&lt;p&gt;The way to lead these users to see a connection with freedom is
exactly the opposite: to inform them that all these system versions
are versions of GNU, that they all are based on a system that exists
specifically for the sake of the users' freedom. With this
understanding, they can start to recognize the distributions that
include non-free software as perverted, adulterated versions of GNU,
instead of thinking they are proper and appropriate &amp;quot;versions of
Linux&amp;quot;.&lt;/p&gt;
&lt;p&gt;It is very useful to start GNU/Linux User Groups, which call the
system GNU/Linux and adopt the ideals of the GNU Project as a basis
for their activities. If the Linux User Group in your area has the
problems describe above, we suggest you either campaign within the
group to change its orientation (and name) or start a new group. The
people who focus on the more superficial goals have a right to their
views, but don't let them drag you along!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That's actually a good idea. Save &amp;quot;GNU/Linux&amp;quot; for something that fits
into your elite view. That would be what? &amp;quot;gNewSense GNU/Linux&amp;quot;&lt;/p&gt;
&lt;p&gt;You mention not letting people focusing on superficial goals drag us
along. Very well then, we won't let you drag us along. As a matter of
fact I should probably listen and stop reading right now. I won't, I'm
going to see what other crap you have to say.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Why not make a GNU distribution of Linux (sic) and call that
GNU/Linux?&lt;/p&gt;
&lt;p&gt;All the &amp;quot;Linux&amp;quot; distributions are actually versions of the GNU
system with Linux as the kernel. The purpose of the term &amp;quot;GNU/Linux&amp;quot;
is to communicate this point. To develop one new distribution and
call that alone &amp;quot;GNU/Linux&amp;quot; would obscure the point we want to make.&lt;/p&gt;
&lt;p&gt;As for developing a distribution of GNU/Linux, we already did this
once, when we funded the early development of Debian GNU/Linux. To
do it again now does not seem useful; it would be a lot of work, and
unless the new distribution had substantial practical advantages
over other distributions, it would serve no purpose.&lt;/p&gt;
&lt;p&gt;Instead we help the developers of 100% free GNU/Linux distributions,
such as gNewSense and Ututo.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Back to that beaten dead and rotting horse. You have yet to make a GNU
operating system.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Why not just say &amp;quot;Linux is the GNU kernel&amp;quot; and release some existing
version of GNU/Linux under the name &amp;quot;GNU&amp;quot;?&lt;/p&gt;
&lt;p&gt;It might have been a good idea to adopt Linux as the GNU kernel back
in 1992. If we had realized, then, how long it would take to get the
GNU Hurd to work, we might have done that. (Alas, that is
hindsight.)&lt;/p&gt;
&lt;p&gt;If we were to take an existing version of GNU/Linux and relabel it
as &amp;quot;GNU&amp;quot;, that would be somewhat like making a version of the GNU
system and labeling it &amp;quot;Linux&amp;quot;. That wasn't right, and we don't want
to act like that.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You have yet to make Hurd a widely released product. You're perhaps not
capable? Linus built the first kernel himself. He clearly stated what it
was capable of and that he didn't expect it to go furhter. His code was
then in a position to be lifted up by a community that made it what it
is today. Why is it that you can't get your kernel working? I would
assume because you're either too busy whining, you're too busy tearing
at Linux to make it fit your needs, or because you're not capable of
doing it in the first place.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Did the GNU Project condemn and oppose use of Linux in the early
days?&lt;/p&gt;
&lt;p&gt;We did not adopt Linux as our kernel, but we didn't condemn or
oppose it. In 1993 we started discussing the arrangements to sponsor
the development of Debian GNU/Linux. We also sought to cooperate
with the people who were changing some GNU packages for use with
Linux. We wanted to include their changes in the standard releases
so that these GNU packages would work out-of-the-box in combination
with Linux. But the changes were often ad-hoc and nonportable; they
needed to be cleaned up for installation.&lt;/p&gt;
&lt;p&gt;The people who had made the changes showed little interest in
cooperating with us. One of them actually told us that he didn't
care about working with the GNU Project because he was a &amp;quot;Linux
user&amp;quot;. That came as a shock, because the people who ported GNU
packages to other systems had generally wanted to work with us to
get their changes installed. Yet these people, developing a system
that was primarily based on GNU, were the first (and still
practically the only) group that was unwilling to work with us.&lt;/p&gt;
&lt;p&gt;It was this experience that first showed us that people were calling
a version of the GNU system &amp;quot;Linux&amp;quot;, and that this confusion was
obstructing our work. Asking you to call the system &amp;quot;GNU/Linux&amp;quot; is
our response to that problem, and to the other problems caused by
the &amp;quot;Linux&amp;quot; misnomer.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I don't really believe you. After all your current whining and ranting
it's very likely they were entirely turned off by your attitude. I need
to hilight this though. &lt;strong&gt;&amp;quot;who ported GNU packages to other systems&amp;quot;&lt;/strong&gt;
Right here you are admitting that GNU is being ported to other systems.
That system that you're complaining about is the Linux system. Read
this... this fact is plainly stated right here.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Why did you wait so long before asking people to use the name
GNU/Linux?&lt;/p&gt;
&lt;p&gt;Actually we didn't. We began talking privately with developers and
distributors about this in 1994, and made a more public campaign in
1996. We will continue for as long as it's necessary.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Dead Horse... Not repeating this yet again...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Should the GNU/name convention be applied to all programs that are
GPL'ed?&lt;/p&gt;
&lt;p&gt;We never refer to individual programs as &amp;quot;GNU/name&amp;quot;. When a program
is a GNU package, we may call it &amp;quot;GNU name&amp;quot;.&lt;/p&gt;
&lt;p&gt;GNU, the operating system, is made up of many different programs.
Some of the programs in GNU were written as part of the GNU Project
or specifically contributed to it; these are the GNU packages, and
we often use &amp;quot;GNU&amp;quot; in their names.&lt;/p&gt;
&lt;p&gt;It's up to the developers of a program to decide if they want to
contribute it and make it a GNU package. If you have developed a
program and you would like it to be a GNU package, please write to ,
so we can evaluate it and decide whether we want it.&lt;/p&gt;
&lt;p&gt;It wouldn't be fair to put the name GNU on every individual program
that is released under the GPL. If you write a program and release
it under the GPL, that doesn't mean the GNU Project wrote it or that
you wrote it for us. For instance, the kernel, Linux, is released
under the GNU GPL, but Linus did not write it as part of the GNU
Project-he did the work independently. If something is not a GNU
package, the GNU Project can't take credit for it, and putting &amp;quot;GNU&amp;quot;
in its name would be improper.&lt;/p&gt;
&lt;p&gt;In contrast, we do deserve the overall credit for the GNU operating
system as a whole, even though not for each and every program in it.
The system exists as a system because of our determination and
persistence, starting in 1984, many years before Linux was begun.&lt;/p&gt;
&lt;p&gt;The operating system in which Linux became popular was basically the
same as the GNU operating system. It was not entirely the same,
because it had a different kernel, but it was mostly the same
system. It was a variant of GNU. It was the GNU/Linux system.&lt;/p&gt;
&lt;p&gt;Linux continues to be used primarily in derivatives of that
system-in today's versions of the GNU/Linux system. What gives these
systems their identity is GNU and Linux at the center of them, not
particularly Linux alone.&lt;/p&gt;
&lt;p&gt;Since much of GNU comes from Unix, shouldn't GNU give credit to Unix
by using &amp;quot;Unix&amp;quot; in its name?&lt;/p&gt;
&lt;p&gt;Actually, none of GNU comes from Unix. Unix was proprietary software
(and still is), so using any of its code in GNU would have been
illegal. This is not a coincidence; this is why we developed GNU:
since you could not have freedom in using Unix, or any of the other
operating systems of the day, we needed a free system to replace it.
We could not copy programs, or even parts of them, from Unix;
everything had to be written afresh.&lt;/p&gt;
&lt;p&gt;No code in GNU comes from Unix, but GNU is a Unix-compatible system;
therefore, many of the ideas and specifications of GNU do come from
Unix. The name &amp;quot;GNU&amp;quot;, which stands for &amp;quot;GNU's Not Unix&amp;quot;, is a
humorous way of giving credit to Unix for this, following a hacker
tradition of recursive acronyms that started in the 70s.&lt;/p&gt;
&lt;p&gt;The first such recursive acronym was TINT, &amp;quot;TINT Is Not TECO&amp;quot;. The
author of TINT wrote another implementation of TECO (there were
already many of them, for various systems), but instead of calling
it by a dull name like &amp;quot;somethingorother TECO&amp;quot;, he thought of a
clever amusing name. (That's what hacking means: playful
cleverness.)&lt;/p&gt;
&lt;p&gt;Other hackers enjoyed that name so much that we imitated the
approach. It became a tradition that, when you were writing from
scratch a program that was similar to some existing program (let's
imagine its name was &amp;quot;Klever&amp;quot;), you could give it a recursive
acronym name, such as &amp;quot;MINK&amp;quot; for &amp;quot;MINK Is Not Klever.&amp;quot; In this same
spirit we called our replacement for Unix &amp;quot;GNU's Not Unix&amp;quot;.&lt;/p&gt;
&lt;p&gt;Historically, AT&amp;amp;T which developed Unix did not want anyone to give
it credit by using &amp;quot;Unix&amp;quot; in the name of a similar system, not even
in a system 99% copied from Unix. AT&amp;amp;T actually threatened to sue
anyone giving AT&amp;amp;T credit in that way. This is why each of the
various modified versions of Unix (all proprietary, like Unix) had a
completely different name that didn't include &amp;quot;Unix&amp;quot;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This entire block has absolutely nothing to do with what you're
complaining about. This is only why you don't think it should be
&amp;quot;Unix/GNU&amp;quot; instead.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Should we say &amp;quot;GNU/BSD&amp;quot; too?&lt;/p&gt;
&lt;p&gt;We don't call the BSD systems (FreeBSD, etc.) &amp;quot;GNU/BSD&amp;quot; systems,
because that term does not fit the history of the BSD systems.&lt;/p&gt;
&lt;p&gt;The BSD system was developed by UC Berkeley as non-free software in
the 80s, and became free in the early 90s. A free operating system
that exists today is almost certainly either a variant of the GNU
system, or a kind of BSD system.&lt;/p&gt;
&lt;p&gt;People sometimes ask whether BSD too is a variant of GNU, as
GNU/Linux is. It is not. The BSD developers were inspired to make
their code free software by the example of the GNU Project, and
explicit appeals from GNU activists helped convince them to start,
but the code had little overlap with GNU.&lt;/p&gt;
&lt;p&gt;BSD systems today use some GNU packages, just as the GNU system and
its variants use some BSD programs; however, taken as wholes, they
are two different systems that evolved separately. The BSD
developers did not write a kernel and add it to the GNU system, so a
name like GNU/BSD would not fit the situation.&lt;/p&gt;
&lt;p&gt;The connection between GNU/Linux and GNU is much closer, and that's
why the name &amp;quot;GNU/Linux&amp;quot; is appropriate for it.&lt;/p&gt;
&lt;p&gt;There is a version of GNU which uses the kernel from NetBSD. Its
developers call it &amp;quot;Debian GNU/NetBSD&amp;quot;, but &amp;quot;GNU/kernelofNetBSD&amp;quot;
would be more accurate, since NetBSD is an entire system, not just
the kernel. This is not a BSD system, since most of the system is
the same as the GNU/Linux system.&lt;/p&gt;
&lt;p&gt;If I install the GNU tools on Windows, does that mean I am running a
GNU/Windows system?&lt;/p&gt;
&lt;p&gt;Not in the same sense that we mean by &amp;quot;GNU/Linux&amp;quot;. The tools of GNU
are just a part of the GNU software, which is just a part of the GNU
system, and underneath them you would still have another complete
operating system which has no code in common with GNU. All in all,
that's a very different situation from GNU/Linux.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I'll take this moment to say that I kind of laughed at something that
was said earlier.&lt;/p&gt;
&lt;p&gt;##freebsd on Freenode&lt;/p&gt;
&lt;p&gt;18:42 alrighty, just reading something on the gnu site saying no os is
named after it's kernel&lt;/p&gt;
&lt;p&gt;18:42 thanks&lt;/p&gt;
&lt;p&gt;18:42 BSD are NOT like linux, that is only a kernel and the O.S. is a
distribution of that kernel...&lt;/p&gt;
&lt;p&gt;18:42 MTecknology: they're nuts, over there&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Can't there be Linux systems without GNU?&lt;/p&gt;
&lt;p&gt;It is possible to make a system that uses Linux as the kernel but is
not based on GNU. I'm told there are small systems, used for
embedded development, that include Linux but not the GNU system. IBM
was once rumored to be planning to put Linux as the kernel into AIX;
whether or not they actually tried to do this, it is theoretically
possible. What conclusions can we draw from this about the naming of
various systems?&lt;/p&gt;
&lt;p&gt;People who think of the kernel as more important than all the rest
of the system say, &amp;quot;They all contain Linux, so let's call them all
Linux systems.&amp;quot; But any two of these systems are mostly different,
and calling them by the same name is misleading. (It leads people to
think that the kernel is more important than all the rest of the
system, for instance.)&lt;/p&gt;
&lt;p&gt;In the small embedded systems, Linux may be most of the system;
perhaps &amp;quot;Linux systems&amp;quot; is the right name for them. They are very
different from GNU/Linux systems, which are more GNU than Linux. The
hypothetical IBM system would be different from either of those. The
right name for it would be AIX/Linux: basically AIX, but with Linux
as the kernel. These different names would show users how these
systems are different.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Many Linux systems exist without any GNU software in them. They did this
because of they way you pushed them away. You pushed be to trim as many
software applications from my Ubuntu system as I could. With no effort I
was down to only 8 GNU applications and with a little more digging I
pretty easily removed 3 more. So my Ubuntu system has 5 GNU applications
on it. I still need to call my system &amp;quot;GNU/Linux&amp;quot; by your standards? NO!
The kernel alone on my system weighs much heavier that these. So I need
to rebrand my system? No thanks.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Why not call the system &amp;quot;Linux&amp;quot; anyway, and strengthen Linus
Torvalds' role as posterboy for our community?&lt;/p&gt;
&lt;p&gt;Linus Torvalds is the &amp;quot;posterboy&amp;quot; (other people's choice of word,
not ours) for his goals, not ours. His goal is to make the system
more popular, and he believes its value to society lies merely in
the practical advantages it offers: its power, reliability and easy
availability. He has never advocated freedom to cooperate as an
ethical principle, which is why the public does not connect the name
&amp;quot;Linux&amp;quot; with that principle.&lt;/p&gt;
&lt;p&gt;Linus publicly states his disagreement with the free software
movement's ideals. He developed non-free software in his job for
many years (and said so to a large audience at a &amp;quot;Linux&amp;quot;World show),
and publicly invited fellow developers of Linux, the kernel, to use
non-free software to work on it with him. He goes even further, and
rebukes people who suggest that engineers and scientists should
consider social consequences of our technical work-rejecting the
lessons society learned from the development of the atom bomb.&lt;/p&gt;
&lt;p&gt;There is nothing wrong with writing a free program for the
motivations of learning and having fun; the kernel Linus wrote for
those reasons was an important contribution to our community. But
those motivations are not the reason why the complete free system,
GNU/Linux, exists, and they won't secure our freedom in the future.
The public needs to know this. Linus has the right to promote his
views; however, people should be aware that the operating system in
question stems from ideals of freedom, not from his views.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;He doesn't voice his disagreements with free software ideals. He voices
his disagreement with your ideals. So does a large part of the FOSS
community.&lt;/p&gt;
&lt;p&gt;On a side note: My company is working on a massive project that will
advocate and very quickly spread the usage of some FOSS applications.
Our goal is to position ourselves into a place where other FOSS
applications fitting into our criteria will want us to integrate their
tools into our system. However, it will be a long time after our public
release before we consider releasing source code. Does that mean you
want to fight us too? We're promoting FOSS but keeping some proprietary
code to do so.&lt;/p&gt;
&lt;p&gt;That side note is where Linus is taking his views. He's known for a
sharp tongue that is very blunt, to the point, and honest. Maybe you
should listen to what he's saying instead of twisting his words.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Isn't it wrong for us to label Linus Torvalds' work as GNU?&lt;/p&gt;
&lt;p&gt;It would be wrong, so we don't do that. Torvalds' work is Linux, the
kernel; we are careful not to attribute that work to the GNU Project
or label it as &amp;quot;GNU&amp;quot;. When we talk about the whole system, the name
&amp;quot;GNU/Linux&amp;quot; gives him a share of the credit.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Nah, you're not giving him enough credit. At least you haven't yet
reached the point of saying Linux is the work of GNU.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Does Linus Torvalds agree that Linux is just the kernel?&lt;/p&gt;
&lt;p&gt;He recognized this at the beginning. The earliest Linux release
notes said, &amp;quot;Most of the tools used with linux are GNU software and
are under the GNU copyleft. These tools aren't in the distribution -
ask me (or GNU) for more info&amp;quot;.&lt;/p&gt;
&lt;p&gt;The battle is already lost-society has made its decision and we
can't change it, so why even think about it?&lt;/p&gt;
&lt;p&gt;This isn't a battle, it is a campaign of education. What to call the
system is not a single decision, to be made at one moment by
&amp;quot;society&amp;quot;: each person, each organization, can decide what name to
use. You can't make others say &amp;quot;GNU/Linux&amp;quot;, but you can decide to
call the system &amp;quot;GNU/Linux&amp;quot; yourself-and by doing so, you will help
educate others.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;At the beginning Linux was just a kernel. He started porting some of the
work of GNU to it.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Society has made its decision and we can't change it, so what good
does it do if I say &amp;quot;GNU/Linux&amp;quot;?&lt;/p&gt;
&lt;p&gt;This is not an all-or-nothing situation: correct and incorrect
pictures are being spread more or less by various people. If you
call the system &amp;quot;GNU/Linux&amp;quot;, you will help others learn the system's
true history, origin, and reason for being. You can't correct the
misnomer everywhere on your own, any more than we can, but you can
help. If only a few hundred people see you use the term &amp;quot;GNU/Linux&amp;quot;,
you will have educated a substantial number of people with very
little work. And some of them will spread the correction to others.&lt;/p&gt;
&lt;p&gt;Wouldn't it be better to call the system &amp;quot;Linux&amp;quot; and teach people
its real origin with a ten-minute explanation?&lt;/p&gt;
&lt;p&gt;If you help us by explaining to others in that way, we appreciate
your effort, but that is not the best method. It is not as effective
as calling the system &amp;quot;GNU/Linux&amp;quot;, and uses your time inefficiently.&lt;/p&gt;
&lt;p&gt;It is ineffective because it may not sink in, and surely will not
propagate. Some of the people who hear your explanation will pay
attention, and they may learn a correct picture of the system's
origin. But they are unlikely to repeat the explanation to others
whenever they talk about the system. They will probably just call it
&amp;quot;Linux&amp;quot;. Without particularly intending to, they will help spread
the incorrect picture.&lt;/p&gt;
&lt;p&gt;It is inefficient because it takes a lot more time. Saying and
writing &amp;quot;GNU/Linux&amp;quot; will take you only a few seconds a day, not
minutes, so you can afford to reach far more people that way.
Distinguishing between Linux and GNU/Linux when you write and speak
is by far the easiest way to help the GNU Project effectively.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is more of a call to action based on the above FUD.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Some people laugh at you when you ask them to call the system
GNU/Linux. Why do you subject yourself to this treatment?&lt;/p&gt;
&lt;p&gt;Calling the system &amp;quot;Linux&amp;quot; tends to give people a mistaken picture
of the system's history and reason for existence. People who laugh
at our request probably have picked up that mistaken picture-they
think our work was done by Linus, so they laugh when we ask for
credit for it. If they knew the truth, they probably wouldn't laugh.&lt;/p&gt;
&lt;p&gt;Why do we take the risk of making a request that sometimes leads
people to ridicule us? Because often it has useful results that help
the GNU Project. We will run the risk of undeserved abuse to achieve
our goals.&lt;/p&gt;
&lt;p&gt;If you see such an ironically unfair situation occurring, please
don't sit idly by. Please teach the laughing people the real
history. When they see why the request is justified, those who have
any sense will stop laughing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The people that laugh are those that read through this FUD and know what
you guys are really like.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Some people condemn you when you ask them to call the system
GNU/Linux. Don't you lose by alienating them?&lt;/p&gt;
&lt;p&gt;Not much. People who don't appreciate our role in developing the
system are unlikely to make substantial efforts to help us. If they
do work that advances our goals, such as releasing free software, it
is probably for other unrelated reasons, not because we asked them.
Meanwhile, by teaching others to attribute our work to someone else,
they are undermining our ability to recruit the help of others.&lt;/p&gt;
&lt;p&gt;It makes no sense to worry about alienating people who are already
mostly uncooperative, and it is self-defeating to be deterred from
correcting a major problem lest we anger the people who perpetuate
it. Therefore, we will continue trying to correct the misnomer.&lt;/p&gt;
&lt;p&gt;Whatever you contributed, is it legitimate to rename the operating
system?&lt;/p&gt;
&lt;p&gt;We are not renaming anything; we have been calling this system &amp;quot;GNU&amp;quot;
ever since we announced it in 1983. The people who tried to rename
it to &amp;quot;Linux&amp;quot; should not have done so.&lt;/p&gt;
&lt;p&gt;Isn't it wrong to force people to call the system &amp;quot;GNU/Linux&amp;quot;?&lt;/p&gt;
&lt;p&gt;It would be wrong to force them, and we don't try. We call the
system &amp;quot;GNU/Linux&amp;quot;, and we ask you to do it too.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Most of the substantial contributions did not even come from GNU. They
came from countless numbers of developers and other individuals.
Individuals that are part of the FOSS community which you oppose so
dearly.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Why not sue people who call the whole system &amp;quot;Linux&amp;quot;?&lt;/p&gt;
&lt;p&gt;There are no legal grounds to sue them, but since we believe in
freedom of speech, we wouldn't want to do that anyway. We ask people
to call the system &amp;quot;GNU/Linux&amp;quot; because that is the right thing to
do.&lt;/p&gt;
&lt;p&gt;Shouldn't you put something in the GNU GPL to require people to call
the system &amp;quot;GNU&amp;quot;?&lt;/p&gt;
&lt;p&gt;The purpose of the GNU GPL is to protect the users' freedom from
those who would make proprietary versions of free software. While it
is true that those who call the system &amp;quot;Linux&amp;quot; often do things that
limit the users' freedom, such as bundling non-free software with
the GNU/Linux system or even developing non-free software for such
use, the mere act of calling the system &amp;quot;Linux&amp;quot; does not, in itself,
deny users their freedom. It seems improper to make the GPL restrict
what name people can use for the system.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you had the legal grounds I very much doubt you wouldn't have gove
after anyone and everyone by now. Besides, if you added that clause to
the GPL it's unlikely many users would continue to use the license which
is probably your most substantial contribution to the community.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Since you objected to the original BSD license's advertising
requirement to give credit to the University of California, isn't it
hypocritical to demand credit for the GNU project?&lt;/p&gt;
&lt;p&gt;It would be hypocritical to make the name GNU/Linux a license
requirement, and we don't. We only ask you to give us the credit we
deserve.&lt;/p&gt;
&lt;p&gt;Since you failed to put something in the GNU GPL to require people
to call the system &amp;quot;GNU&amp;quot;, you deserve what happened; why are you
complaining now?&lt;/p&gt;
&lt;p&gt;The question presupposes a rather controversial general ethical
premise: that if people do not force you to treat them fairly, you
are entitled to take advantage of them as much as you like. In other
words, it assumes that might makes right.&lt;/p&gt;
&lt;p&gt;We hope you disagree with that premise just as we do.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It's also hypocritical to even make this expectation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Wouldn't you be better off not contradicting what so many people
believe?&lt;/p&gt;
&lt;p&gt;We don't think we should go along with large numbers of people
because they have been misled. We hope you too will decide that
truth is important.&lt;/p&gt;
&lt;p&gt;We could never have developed a free operating system without first
denying the belief, held by most people, that proprietary software
was legitimate and acceptable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Instead of going along with what is right, you'd rather continue to
mislead others. An interesting concept. You also couldn't develop a free
operating system (by your definition) with first denying the belief
you're referring to. You still havent (dead horse) finished your own GNU
OS.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Since many people call it &amp;quot;Linux&amp;quot;, doesn't that make it right?&lt;/p&gt;
&lt;p&gt;We don't think that the popularity of an error makes it the truth.&lt;/p&gt;
&lt;p&gt;Many people care about what's convenient or who's winning, not about
arguments of right or wrong. Couldn't you get more of their support
by a different road?&lt;/p&gt;
&lt;p&gt;To care only about what's convenient or who's winning is an amoral
approach to life. Non-free software is an example of that amoral
approach and thrives on it. So in the long run it is self-defeating
for us to bow to that approach. We will continue talking in terms of
right and wrong.&lt;/p&gt;
&lt;p&gt;We hope that you are one of those for whom right and wrong do
matter.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The popularity has nothing to do with calling it &amp;quot;Linux.&amp;quot; The reason we
use &amp;quot;Linux&amp;quot; is because all the above FUD reassures us that you're on a
whining power trip.&lt;/p&gt;
&lt;/div&gt;
</content><category term="rambling"></category><category term="linux"></category><category term="gnu"></category><category term="open source"></category><category term="rant"></category><category term="overkill"></category></entry><entry><title>SSH Tab Complete</title><link href="https://michael.lustfield.net/linux/ssh-tab-complete" rel="alternate"></link><published>2009-12-05T21:12:00-06:00</published><updated>2009-12-05T21:12:00-06:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2009-12-05:/linux/ssh-tab-complete</id><summary type="html">&lt;p&gt;I manage many servers as well as pop into a few other systems now and
then. I was getting somewhat irritated with typing out everything. A
search on Google showed many results. It seemed the most common command
to do this was this.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
complete -W &amp;quot;$(echo `cat ~/.ssh/known_hosts | cut …&lt;/pre&gt;</summary><content type="html">&lt;p&gt;I manage many servers as well as pop into a few other systems now and
then. I was getting somewhat irritated with typing out everything. A
search on Google showed many results. It seemed the most common command
to do this was this.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
complete -W &amp;quot;$(echo `cat ~/.ssh/known_hosts | cut -f 1 -d ' ' | sed -e s/,.*//g | uniq | grep -v &amp;quot;\[&amp;quot;`;)&amp;quot; ssh
&lt;/pre&gt;
&lt;p&gt;It does a pretty crappy job of actually scanning your known_hosts file
and seems to only marginally do what it's supposed to. If you're like me
you also tend to be involved with rearranging many servers. This causes
issues to because the simplest fix for the key verification is to delete
the known_hosts file. This means your tab complete won't work anymore.&lt;/p&gt;
&lt;p&gt;My method is create a file (~/.ssh/hosts). On each line I add a host
that I want to exist in my tab complete. Example:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
server1.domain.com
server2.domain.com
server3.domain.com
&lt;/pre&gt;
&lt;p&gt;It's white space that matters so you could have it all on one line and
just have a space between each if you want. Next, add this line to your
~/.bashrc file.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
complete -W &amp;quot;$(&amp;lt;~/.ssh/hosts)&amp;quot; ssh
&lt;/pre&gt;
&lt;p&gt;I just added it to the end of the file. Either reload your shell or type
bash .&lt;/p&gt;
&lt;p&gt;Now do ssh &amp;lt;tab&amp;gt;&amp;lt;tab&amp;gt;. See how pretty that is? :)&lt;/p&gt;
&lt;p&gt;Alternatively, you could edit your ~/.ssh/config file to include aliases.&lt;/p&gt;
&lt;p&gt;~/.ssh/config:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# parens
Host parens
    Hostname parens.domain.tld
    User michael

Host fw
    Hostname firewall.domain.tld
    User admin
&lt;/pre&gt;
&lt;p&gt;If you have the complete command available, then it's likely that any Host in
this file will already be auto-completed using tab. This is done using the file
/usr/share/bash-completion/completions/ssh.&lt;/p&gt;
</content><category term="linux"></category><category term="ssh"></category></entry><entry><title>Light Weight Ubuntu Kernel</title><link href="https://michael.lustfield.net/linux/light-weight-ubuntu-kernel" rel="alternate"></link><published>2009-12-04T17:36:00-06:00</published><updated>2009-12-04T17:36:00-06:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2009-12-04:/linux/light-weight-ubuntu-kernel</id><summary type="html">&lt;p&gt;As a preliminary note: DO NOT follow anything in this and proceed to ask
for help. If you follow this than consider yourself void of ANY support.
Especially from the -kernel channel. They support and develop stock
kernels, not your personal modifications.&lt;/p&gt;
&lt;p&gt;Now.. In my quest for a fast boot …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As a preliminary note: DO NOT follow anything in this and proceed to ask
for help. If you follow this than consider yourself void of ANY support.
Especially from the -kernel channel. They support and develop stock
kernels, not your personal modifications.&lt;/p&gt;
&lt;p&gt;Now.. In my quest for a fast boot time into a fully functional system
that is very light weight, I tried out Gentoo. After using Gentoo I
discovered that they're not that &amp;quot;ricer&amp;quot; community everyone claims they
are. In many way's they're the exact opposite. Sure some of them fall
into the ricer category but they're not very common.&lt;/p&gt;
&lt;p&gt;One of the biggest aspects of Gentoo is that you compile your own
kernel. This was the most painful parts for me until I finally got the
hang of it. The default Gentoo kernel is minimal and requires you to
enable some extra features before compiling.&lt;/p&gt;
&lt;p&gt;I decided to take this to the next step and after getting the kernel to
work spend a massive amount of time trimming out the 'fat' that was
default. By doing this I got a firm understanding of what each piece of
the configuration was and the arrangement inside menuconfig. This is
where I started to take on the ricer nick.&lt;/p&gt;
&lt;p&gt;After a while I tired of Gentoo and my short segue neared to an end. I
have continued to hang around their awesome community. They're
incredibly helpful for any distribution and are great to just have a
chat with.&lt;/p&gt;
&lt;p&gt;During my return to Ubuntu I took the realization that the existing
kernel is very heavy. Of course part of the appeal of Ubuntu is that it
&amp;quot;just works&amp;quot; for anyone. I really did become a ricer and decided to see
what I could do.&lt;/p&gt;
&lt;p&gt;The general process is:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
aptitude install git-core
git clone git://kernel.ubuntu.com/ubuntu/ubuntu-karmic.git
cd ubuntu-karmic
git tag -l Ubuntu-*
git checkout [LatestTag]
make menuconfig
# Tweak the crap out of it
make all modules_install install
update-grub
&lt;/pre&gt;
&lt;p&gt;To update when a new kernel is released:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cd ubuntu-karmic
git fetch
git checkout [LatestTag]
make all modules_install install
&lt;/pre&gt;
&lt;p&gt;That is the simplest way to deal your own kernel. Don't think you're
smart enough for the KernelTeam though. These guys deal with the kernel
code and work on modifications that are intended to eventually make it
into the mainline kernel tree. It's also not how they suggest packaging
it for further distribution or proper installation.&lt;/p&gt;
&lt;p&gt;What you can now do is - as I said above - tweak the crap out of your
kernel. I was able to get my kernel under 2.4MB in size without any
init*. This is very small and gave a very noticeable change in the
system.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Many kernel panics&lt;/li&gt;
&lt;li&gt;Could log into system&lt;/li&gt;
&lt;li&gt;Severe overheating&lt;/li&gt;
&lt;li&gt;Couldn't connect to any network&lt;/li&gt;
&lt;li&gt;Couldn't load profile when logging into system&lt;/li&gt;
&lt;li&gt;Unmounted file systems&lt;/li&gt;
&lt;li&gt;No 64bit support (mostly java/flash issues resulted)&lt;/li&gt;
&lt;li&gt;No AppArmor support&lt;/li&gt;
&lt;li&gt;No iptables support&lt;/li&gt;
&lt;li&gt;No encryption support&lt;/li&gt;
&lt;li&gt;Various other issues&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Those are just some of the issues I caused for myself. Read that again,
I caused these issues for myself. That means it was my fault and it was
up to me to fix these issues.&lt;/p&gt;
&lt;p&gt;I have no time available to me to 'rice' this more but I would like to.
I'll just have to consider that rather than reserving memory for the
kernel, it actually frees memory. I've been happy with the performance
change as well. This will just have to be enough for me.&lt;/p&gt;
&lt;p&gt;I'm attaching my kernel configuration for your reference. Keep in mind
that I said this is tweaked for just me. That means that it is almost
guaranteed to not work on your system. Rather, you can just use it to
see some of the changes I made and play with them incrementally.&lt;/p&gt;
&lt;p&gt;Attachments:&lt;/p&gt;
&lt;p&gt;&lt;img alt="image0" src="/files/icons/text-plain.png" /&gt; &lt;a class="reference external" href="/files/uploads/kernel.config"&gt;kernel.config&lt;/a&gt;&lt;/p&gt;
</content><category term="linux"></category><category term="kiss"></category><category term="overkill"></category></entry><entry><title>Creating Your Own Bazaar Server</title><link href="https://michael.lustfield.net/linux/creating-your-own-bazaar-server" rel="alternate"></link><published>2009-10-31T23:02:00-05:00</published><updated>2009-10-31T23:02:00-05:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2009-10-31:/linux/creating-your-own-bazaar-server</id><summary type="html">&lt;p&gt;By now we've all heard about the Bazaar (bzr) version control system. If
you're a coder then you're well aware of what a version control system
is and why it's helpful. If you code on Launchpad you're equally aware
how incredibly awesome this system is.&lt;/p&gt;
&lt;p&gt;Rather than discuss how incredible …&lt;/p&gt;</summary><content type="html">&lt;p&gt;By now we've all heard about the Bazaar (bzr) version control system. If
you're a coder then you're well aware of what a version control system
is and why it's helpful. If you code on Launchpad you're equally aware
how incredibly awesome this system is.&lt;/p&gt;
&lt;p&gt;Rather than discuss how incredible bazaar is, I'd like to explain how to
set up a production level deployment for a bzr server. If you're curious
what makes bazaar great, just try it out. You can use
&lt;a class="reference external" href="https://staging.launchpad.net/"&gt;https://staging.launchpad.net/&lt;/a&gt; to create branches for playing around.&lt;/p&gt;
&lt;p&gt;To deploy a low level and basic setup you only need to run this command
on your server:&lt;/p&gt;
&lt;p&gt;sudo aptitude install openssh-server bzr&lt;/p&gt;
&lt;p&gt;That's really all there is to it. You can now push an existing code
branch to your server using the following command:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
bzr push bzr+ssh://yourserver.com/~/branch
&lt;/pre&gt;
&lt;p&gt;That's only a basic deployment. What I like doing is having branches
where multiple people can work on the same branch. This first thing I do
is create a directory that this whole thing will be based in. I like to
do this on its own partition for obvious reasons. For me this always
exists at /bazaar. I then use the following:&lt;/p&gt;
&lt;p&gt;# Get into the branch directory&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cd /bazaar
&lt;/pre&gt;
&lt;p&gt;# Create a directory for branch content&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mkdir bzr
&lt;/pre&gt;
&lt;p&gt;# Make a nice short directory name to this&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cd /
ln -s /bazaar/bzr
&lt;/pre&gt;
&lt;p&gt;Now anyone with the right permissions (root) can push to the server
using bzr push bzr+ssh://yourserver.com/bzr/branch. However, we
don't want to give everyone root access. Instead of doing this, I issue
the following:&lt;/p&gt;
&lt;p&gt;# Create a generic bzr group&lt;/p&gt;
&lt;pre class="literal-block"&gt;
groupadd bzr
&lt;/pre&gt;
&lt;p&gt;# Assign group to branches&lt;/p&gt;
&lt;pre class="literal-block"&gt;
chown root:bzr /bazaar/bzr
&lt;/pre&gt;
&lt;p&gt;Now anyone in the bzr group can push to this. However, we're working in
teams of users. The user that makes the commit will be the only one that
can manage this branch. I guess it's time to learn about the &amp;quot;sticky
bit.&amp;quot; This little bit allows us to retain the group that owns the
directory. The sticky bit doesn't seem to like retaining the owner but
that becomes irrelevant because it's the groups we care about.&lt;/p&gt;
&lt;p&gt;# Set generic permissions&lt;/p&gt;
&lt;pre class="literal-block"&gt;
chmod 770 /bazaar/bzr
&lt;/pre&gt;
&lt;p&gt;# Set the sticky bit&lt;/p&gt;
&lt;pre class="literal-block"&gt;
chmod +s /bazaar/bzr
&lt;/pre&gt;
&lt;p&gt;Now it's time to give a user permission to work with these branches.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
usermod -a -G bzr username
&lt;/pre&gt;
&lt;p&gt;You should be ready to rock now. If you create a branch and decide that
only a handful of users should be able to access it, this is easy.
Something could be a highly secret piece of code that is the &amp;quot;bread and
butter&amp;quot; to a massive project you are undertaking.&lt;/p&gt;
&lt;p&gt;# Create new group&lt;/p&gt;
&lt;pre class="literal-block"&gt;
groupadd bzr-special
&lt;/pre&gt;
&lt;p&gt;# Set permissions on branch&lt;/p&gt;
&lt;pre class="literal-block"&gt;
chown -R root:bzr-special /bzr/branch
&lt;/pre&gt;
&lt;p&gt;# Add users to the special group&lt;/p&gt;
&lt;pre class="literal-block"&gt;
usermod -a -G bzr-special username
&lt;/pre&gt;
&lt;p&gt;Heck Ya! That was easy enough wasn't it? It really is once you've gone
through the hassle of picking out these little things. It's actually
amazingly easy if you have a guide. I wasn't able to find this guide and
I hope this will help others trying to do the same thing.&lt;/p&gt;
&lt;p&gt;What's next? I'd suggest pulling the loggerhead source and setting it
up. This is a great tool for seeing revision changes. I'd like to see a
way to send an email diff on branch changes but this may be too hard
without created a chopped down version of Launchpad.&lt;/p&gt;
</content><category term="linux"></category><category term="bazaar"></category><category term="vcs"></category></entry><entry><title>64bit Java / Flash Deathroll</title><link href="https://michael.lustfield.net/linux/64bit-java-flash-deathroll" rel="alternate"></link><published>2009-09-10T16:43:00-05:00</published><updated>2009-09-10T16:43:00-05:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2009-09-10:/linux/64bit-java-flash-deathroll</id><summary type="html">&lt;p&gt;I think Linux users can safely agree that Flash and Java make web usage into a
battle ground. Many of us choose to blame the issue on the distribution we use.
When we favor our distribution too much we'll point fingers at Sun or Adobe. If
we use the FOSS …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I think Linux users can safely agree that Flash and Java make web usage into a
battle ground. Many of us choose to blame the issue on the distribution we use.
When we favor our distribution too much we'll point fingers at Sun or Adobe. If
we use the FOSS versions we'll point fingers at the respective maintainers.&lt;/p&gt;
&lt;p&gt;The sad truth is that I'm writing this not really knowing where the blame lies.
However, I'm not sure that it even matters. I don't care whose fault it is, I
just want it to work.&lt;/p&gt;
&lt;p&gt;How can we fix this plaguing problem? For starters, I think we need to get back
to our roots. Rather than rely on the repositories, lets roll back to pulling
the vanilla packages. For me, this worked like absolute perfection.&lt;/p&gt;
&lt;p&gt;Note that I'm using 64bit and this is where most issues are. Following this with
32bit is nearly the exact same except for the obvious changes.&lt;/p&gt;
&lt;p&gt;To get ‘vanilla' 64bit java:&lt;/p&gt;
&lt;p&gt;Download 64bit java tarball from &lt;a class="reference external" href="http://www.java.com/"&gt;http://www.java.com/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As Root:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# Remove old java
aptitude purge sun-java6-jdk sun-java6-bin sun-java6-jre sun-java6-plugin
# Create the directory
mkdir -p /opt/java/66
# Move the downloaded package to the new directory
mv ~/jre-6u17-linux-x64.bin /opt/java/64
# Make the file executable
chmod +x ~/jre-6u17-linux-x64.bin
# Execute the binary file / Unpacks java
/opt/java/64/jre-6u17-linux-x64.bin
Do you agree to the above license terms? [yes or no] yes
# Install the java option
update-alternatives --install &amp;quot;/usr/bin/java&amp;quot; &amp;quot;java&amp;quot; &amp;quot;/opt/java/64/jre1.6.0_17/bin/java&amp;quot; 1
# Set the Java option
update-alternatives --set java /opt/java/64/jre1.6.0_17/bin/java
&lt;/pre&gt;
&lt;p&gt;As User:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# Create the plugins directory if it doesn't exist
mkdir ~/.mozilla/plugins
# Force the creation of a symbolic link to the installed java
ln -sf /opt/java/64/jre1.6.0_17/lib/amd64/libnpjp2.so ~/.mozilla/plugins/
&lt;/pre&gt;
&lt;p&gt;Now you need to get flash working:&lt;/p&gt;
&lt;p&gt;Download the latest flash player from &lt;a class="reference external" href="http://labs.adobe.com/downloads/flashplayer10_64bit.html"&gt;http://labs.adobe.com/downloads/flashplayer10_64bit.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As root:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# Remove old flash
aptitude purge flashplugin-nonfree flashplugin-installer
rm -f /usr/lib/mozilla/plugins/*flash*
rm -f ~/.mozilla/plugins/*flash*
rm -f /usr/lib/firefox/plugins/*flash*
rm -f /usr/lib/firefox-addons/plugins/*flash*
rm -rfd /usr/lib/nspluginwrapper
&lt;/pre&gt;
&lt;p&gt;As User:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# Unpack flash
tar zxf libflashplayer-10.0.32.18.linux-x86_64.so.tar.gz
# Create plugins directory if it doesn't exist
mkdir ~/.mozilla/plugins
# Move flash to plugins directory
mv libflashplayer.so ~/.mozilla/plugins/
&lt;/pre&gt;
&lt;p&gt;Now to test that it works...&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Test Java: &lt;a class="reference external" href="http://java.com/en/download/installed.jsp"&gt;http://java.com/en/download/installed.jsp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Test Flash: &lt;a class="reference external" href="http://www.adobe.com/shockwave/welcome"&gt;http://www.adobe.com/shockwave/welcome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Test Flash Note: Ignore the &amp;quot;Adobe Shockwave Player&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NOW! What does this mean? It sure doesn't prove that Adobe or Sun are against
Linux. I really don't think we suspected Sun of that. It could possibly prove
that our distributions aren't keeping up on these issues. Considering the vast
number of distributions with the issue, I don't think that's really the case
either. I would point fingers at those that maintain the packages but I know
some of them personally and I can guarantee flash/java are important to them.&lt;/p&gt;
&lt;p&gt;Where does that leave us? It leaves us with a whole massive list of suspects.
Each and every package installed on a system could be causing part of the
problem. GTK+ update caused many issues and I can see that being part of the
existing issue. However, I doubt it's the only reason.&lt;/p&gt;
&lt;p&gt;Thousands of bugs have been created in the issue queues among the bug trackers
for many distributions as well as many different packages.&lt;/p&gt;
&lt;p&gt;I have no doubt the issue will be resolved at some point. Adobe and Sun have
proven to be taking an active role in this support. It's just up to us to track
down and destroy the remainder of issues. Our big up side is that the companies
aren't against our success. As opposed to multimedia companies because of that
dang DRM crap that they worship…&lt;/p&gt;
</content><category term="linux"></category><category term="java"></category><category term="flash"></category></entry><entry><title>Moving from personal mail server to Gmail</title><link href="https://michael.lustfield.net/linux/moving-from-personal-mail-server-to-gmail" rel="alternate"></link><published>2009-06-09T12:07:00-05:00</published><updated>2009-06-09T12:07:00-05:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2009-06-09:/linux/moving-from-personal-mail-server-to-gmail</id><summary type="html">&lt;p&gt;I was hosting my own email server for about a year. I enjoyed the fact
that I had full and complete control over the entire mail server. I
enjoyed being able to fine tune everything to fit my needs exactly. I
was doing this for about 1.5 years.&lt;/p&gt;
&lt;p&gt;Unfortunately …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I was hosting my own email server for about a year. I enjoyed the fact
that I had full and complete control over the entire mail server. I
enjoyed being able to fine tune everything to fit my needs exactly. I
was doing this for about 1.5 years.&lt;/p&gt;
&lt;p&gt;Unfortunately, there were a few things I couldn't control that really
killed the fun of running my own email server. First of all, dealing
with the people complaining that it's not how they want it weighed on
me. Aside from that there were also power outages, hardware failures,
software hangs (from power dips), firewall/router deaths, modem spasms
(now very frequent), etc. Not only that, but I only had 1mbit upload
available and 1.5mib max available at about $100/mo more.&lt;/p&gt;
&lt;p&gt;What it came down to is that running a mail server just isn't for me
given my limitations. I needed an alternative and I found one. There is
this thing called Google Apps (google.com/a) that is capable of hosting
your domain email for you.&lt;/p&gt;
&lt;p&gt;I decided to give it a shot. It's not a quick or idiot proof process,
but it was worth the effort.&lt;/p&gt;
&lt;p&gt;What you first need to do is sign up for &lt;a class="reference external" href="http://google.com/a/"&gt;Google Apps&lt;/a&gt;. When you click
sign up, make sure to click the &amp;quot;Standard Edition&amp;quot; link to avoid them
wanting money. If you already have your own domain then you enter it and
procede with signup. Otherwise you can purchase a domain through Google.
It doesn't matter. They give you pretty easy to follow instructions to
setup your DNS to point MX and CNAME records to them instead of wherever
you're currently hosting from.&lt;/p&gt;
&lt;p&gt;After you setup everything, you need to sync your email. I just set up
two different IMAP accounts in my email client (claws-mail) and
dragged/dropped the messages from my own server to the other.&lt;/p&gt;
&lt;p&gt;Gmail handles email with tags and not folders. This is really the point
of this blog. Your mail client will recognize these tags as folders, but
Gmail doesn't handle them as such. This can make things pretty
interesting.&lt;/p&gt;
&lt;p&gt;To start, make sure you archive all of your email. Anything in Trash
will be deleted after 30 days. Now we need to make some tags that our
mail client will use. Make sure you prefix all tags with [Gmail]/.
You'll see why later. At a minimum, you need to have [Gmail]/Archived,
[Gmail]/Drafts, [Gmail]/Queue, and [Gmail]/Trash. I also have a few
others such as [Gmail]/Saved, [Gmail]/Ubuntu, and [Gmail]/Kalliki. The
last three are personal tags that represent folders I want to have
available.&lt;/p&gt;
&lt;p&gt;If any [Imap]/ tags exist, delete them. They're ugly and useless. You
may need to delete them after doing all of this too.&lt;/p&gt;
&lt;p&gt;When it comes to a mail client, I use &lt;a class="reference external" href="http://www.claws-mail.org/"&gt;Claws Mail&lt;/a&gt;. It's the only
client I've found with the features required to do this. You will need
to setup your connection to Gmail the same as as anything else. In order
to be able to do this at all, you'll need to log into your account, go
to &amp;quot;Settings &amp;gt; Forwarding and POP/IMAP&amp;quot; click &amp;quot;Enable IMAP&amp;quot; and click
&amp;quot;Save&amp;quot;. This will allow you to access your account with claws-mail.&lt;/p&gt;
&lt;p&gt;After you've set up the basics in claws-mail, you will see your standard
Inbox, Sent, Trash, etc. You will also see a [Gmail] directory with all
the tags you created underneath it.&lt;/p&gt;
&lt;p&gt;Isn't that just ugly? Everything in a sub directory... Ya, let's fix
that.&lt;/p&gt;
&lt;p&gt;Remember, I'm referencing claws-mail, not Thunderbird. I don't know if
Thunderbird can do this at all.&lt;/p&gt;
&lt;p&gt;Go to Configuration &amp;gt; Edit Accounts. Select your account and click Edit.
Check out the Receive section. In this section you will see an &amp;quot;IMAP
server directory&amp;quot;. In this area you will add &amp;quot;[Gmail]&amp;quot; (w/o quotes of
course). This will get rid of the [Gmail] directory and all your tags
will show up as directories at the root level. This is already MUCH
nicer to look at.&lt;/p&gt;
&lt;p&gt;We don't want to stop there, but for now. Click Apply, OK, Close. Right
click the Account name in your folder list, this is the account name and
should show (IMAP4) beside it. From the right click menu, select
&amp;quot;Rebuild folder tree&amp;quot;. This will make things easier to look at.&lt;/p&gt;
&lt;p&gt;You have a &amp;quot;Sent Mail&amp;quot; folder and a &amp;quot;Sent&amp;quot; folder. &amp;quot;Sent Mail&amp;quot; is
created by Gmail and this is the one we want to copy sent mail to. Right
click &amp;quot;Sent Mail&amp;quot; and click Properties. Across from &amp;quot;Folder Type&amp;quot; select
&amp;quot;Outbox&amp;quot; and click Apply, OK. You can now delete the &amp;quot;Sent&amp;quot; folder as it
no longer matters. You will now use the Gmail's &amp;quot;Sent Mail&amp;quot; instead.&lt;/p&gt;
&lt;p&gt;You also have an &amp;quot;Archived&amp;quot; folder and a &amp;quot;Trash&amp;quot; folder. You will set
your client to move deleted items here later. If Right click &amp;quot;Archived&amp;quot;
and click Properties. Set the Folder type to &amp;quot;Trash&amp;quot;. Click Apply, OK.
This will make sure when you delete something, it's marked as read. The
actual directory it goes to when deleted is handled down this page.&lt;/p&gt;
&lt;p&gt;Go back to your account properties. Configuration &amp;gt; Edit Accounts |
Account | Edit. This time, go to the Advanced section. You will see a
box titled Folder. This is a big deal with what we're doing. Check all
four boxes. Click the Browse button and select the appropriate folder.
~!Read this word for word!~ You want to make sure everything is filed
with a [Gmail]/ tag. Sent messages should be going into the &amp;quot;Sent Mail&amp;quot;
folder that Gmail uses. Deleted messages should be going in the Archived
folder you created with the tag.&lt;/p&gt;
&lt;p&gt;By sending mail to Archived, we avoid Google's 30 day Trash deletion
nuisance.&lt;/p&gt;
&lt;p&gt;Here is a sample of what I have:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Put sent messages in: #imap/Profarius/[Gmail]/Sent Mail
Put queued messages in: #imap/Profarius/[Gmail]/Queue
Put draft messages in: #imap/Profarius/[Gmail]/Drafts
Put deleted messages in: #imap/Profarius/[Gmail]/Archived
&lt;/pre&gt;
&lt;p&gt;Note that Profarius is the name of the account. It will be whatever you
named yours. The rest should be identical. Make sure the [Gmail]/ part
exists in EVERY line.&lt;/p&gt;
&lt;p&gt;When you delete something, it will instead be archived. No need to worry
about automatic deletion. If you really do decide you have email you
want to delete, you can drag it to the Trash. After 30 days, if you
haven't realized you really do need that message, it will be gone. This
avoids that &amp;quot;holy crap I needed that&amp;quot; problem.&lt;/p&gt;
&lt;p&gt;It's possible that you have two &amp;quot;Trash&amp;quot; folders. If this is the case,
it's because claws-mail created one and Gmail created one. Just drop a
test email into one and check your Trash on Gmail. If the message is
there, delete the other Trash folder and move your test message back
wherever you want it. If it doesn't show up, then repeat the process
with the other directory, just to make sure.&lt;/p&gt;
&lt;p&gt;The last step is to subscribe to ONLY the folders you care about. Right
click the account name, go to Subscriptions, click Subscribe, check
Search recursively, click Search. You can use this process to subscribe
to specific or all folders. My personal preference it to subscribe to
all and specifically unsubscribe from what I don't want.&lt;/p&gt;
&lt;p&gt;I find Spam useless because I don't want to see spam. I find Starred
useless because I don't ever flag messages. I have [Gmail]/Saved to save
important messages. Of course if you flag messages, you could use this.
One folder that you may as well not bother with is &amp;quot;All Mail&amp;quot; because
it's just a duplication of everything else, including what you're
keeping in Archived.&lt;/p&gt;
&lt;p&gt;I've tried to do this setup under other mail clients, but they don't
seem to have the features and flexibility required to do this.&lt;/p&gt;
&lt;p&gt;You should now have your mail client working perfectly and beautifully
using Google's 'tag your email instead of sort it' approach. This is the
exact approach I took to host my email on Google using my domain. It
took me about 15hr to finish tweaking things to make it work just
perfect and I didn't figure out the last little piece until I was
writing this. Overall, I'm very happy with the result and I do feel the
hassle was worth the reward.&lt;/p&gt;
&lt;p&gt;Of course, if you're going to have over 7GB of email, you will need to
split things between multiple user accounts or stick with your own
server. You can use this exact same process To have Archived on one
account, Inbox on another, etc. You just can't apply multiple tags.&lt;/p&gt;
&lt;p&gt;I hope this helps someone out there!&lt;/p&gt;
&lt;p&gt;By request, also on &lt;a class="reference external" href="http://www.claws-mail.org/faq/index.php?title=Using_Claws_with_Gmail"&gt;Claws Wiki&lt;/a&gt;.&lt;/p&gt;
</content><category term="linux"></category><category term="email"></category></entry><entry><title>Upgrading to 9.04 and Ext4 Remotely</title><link href="https://michael.lustfield.net/linux/upgrading-to-904-and-ext4-remotely" rel="alternate"></link><published>2009-04-07T19:05:00-05:00</published><updated>2009-04-07T19:05:00-05:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2009-04-07:/linux/upgrading-to-904-and-ext4-remotely</id><summary type="html">&lt;p&gt;WARNING! Do Not do this to your systems. This is for informational
purposes only. Do this in a virtual machine only. If you do this outside
of a virtual machine, your computer will blow up and you will die.
You've been warned.&lt;/p&gt;
&lt;p&gt;I did in fact do this over SSH …&lt;/p&gt;</summary><content type="html">&lt;p&gt;WARNING! Do Not do this to your systems. This is for informational
purposes only. Do this in a virtual machine only. If you do this outside
of a virtual machine, your computer will blow up and you will die.
You've been warned.&lt;/p&gt;
&lt;p&gt;I did in fact do this over SSH which was not safe and not smart. That
fact that I did it does not mean any intelligent or knowledgeable person
should do so. In fact, they probably wouldn't consider it.&lt;/p&gt;
&lt;p&gt;Now, if you do decide to do this such thing without heeding my warning
about your own death, then it's time to stop joking. DO NOT follow other
guides. I've read many other guides and all of them left out at least
one very important step. All of them left out one step listed on the
Ubuntu website which renders your system unbootable if not done.&lt;/p&gt;
&lt;p&gt;First off, we'll do the more stable upgrade. If you want to use Ext4
then you should be using Jaunty Jackalope (9.04). To get to Jaunty, we
first want to update your system to ensure a smooth transition.&lt;/p&gt;
&lt;p&gt;sudo aptitude update &amp;amp;&amp;amp; sudo aptitude full-upgrade&lt;/p&gt;
&lt;p&gt;Now to upgrade to Jaunty.&lt;/p&gt;
&lt;p&gt;sudo do-release-upgrade -d&lt;/p&gt;
&lt;p&gt;Once this completes, reboot and you will be running the Beta version of
Jaunty. Read that again, Beta, not officially released yet.
(&lt;a class="reference external" href="http://wordnetweb.princeton.edu/perl/webwn?s=beta"&gt;http://wordnetweb.princeton.edu/perl/webwn?s=beta&lt;/a&gt; | second
adjective)&lt;/p&gt;
&lt;p&gt;Now to upgrade from Ext3 to Ext4. Do not stop half way through the
process and read this whole thing first before starting.&lt;/p&gt;
&lt;p&gt;To start, we'll do this to non-vital drives. This means not /home,
/boot, or /. Anything else is game for the moment. Run 'mount | grep
/dev/sd' to see what partitions you have mounted. Your output will look
like this.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
michael&amp;#64;panther:~$ mount | grep /dev/sd
/dev/sda5 on / type ext3 (rw,relatime,errors=remount-ro)
/dev/sda1 on /boot type ext3 (rw,relatime)
/dev/sda7 on /home type ext3 (rw,relatime)
/dev/sda8 on /var/vbox type ext3 (rw,relatime)
&lt;/pre&gt;
&lt;p&gt;According to what I stated and this list, I will only do /dev/sda8 for
the moment. We first unmount the device.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo umount /dev/sda8
&lt;/pre&gt;
&lt;p&gt;Now we'll set some flags on the device. Almost every guide you will see
will set different flags and I'm sure this isn't the absolute best.
However, I did grab these from a partition created as Ext4 from the
Ubuntu install CD so I assume they're set for a combination of stability
and performance.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo tune2fs -O has_journal,ext_attr,resize_inode,dir_index,filetype,needs_recovery,extent,flex_bg,sparse_super,large_file,huge_file,uninit_bg,dir_nlink,extra_isize /dev/sda8
&lt;/pre&gt;
&lt;p&gt;As a side note, I've seen it where the
ext_attr,resize_inode,needs_recovery options aren't supported. I
haven't seen any issues with omitting these.&lt;/p&gt;
&lt;p&gt;Now that I set the options on this device, I need to run an fsck on the
drive.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo fsck -pf /dev/sda8
&lt;/pre&gt;
&lt;p&gt;The flags here:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
f - forces the check even if the file system looks clean
p - automatically fix (preen) the file system
&lt;/pre&gt;
&lt;p&gt;Now we need to edit /etc/fstab to reflect the change.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo vim /etc/fstab

### Find the line relating to the partition you changed

# /var/vbox was on /dev/sda8 during installation

UUID=3311b3e1-3cfa-48a9-8911-f3ac30bc0afb /var/vbox ext3 relatime 0 2

### And change the ext3 to ext4

UUID=3311b3e1-3cfa-48a9-8911-f3ac30bc0afb /var/vbox ext4 relatime 0 2

Save/Close - :x
&lt;/pre&gt;
&lt;p&gt;You should reboot at this point to make sure everything is working. If
everything is going great, then it's time to move onto the rest of your
partitions.&lt;/p&gt;
&lt;p&gt;Please note: this is where things get dangerous and your system could
stop booting. It is generally recommended to not do this to the root or boot
partitions.&lt;/p&gt;
&lt;p&gt;Now, we'll tune the next partitions. I did this on /dev/sda1, /dev/sda5,
and /dev/sda7. Refer to the mount listing for a reference.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo tune2fs -O has_journal,ext_attr,resize_inode,dir_index,filetype,needs_recovery,extent,flex_bg,sparse_super,large_file,huge_file,uninit_bg,dir_nlink,extra_isize /dev/sda1
&lt;/pre&gt;
&lt;p&gt;Edit /etc/fstab as stated above to reflect these changes.&lt;/p&gt;
&lt;p&gt;At this point, be nervous. This is a point that was missed in every
other guide I read. You need to reinstall GRUB or it won't be able to
read your partitions anymore. Make /dev/sda reflect your setup. More
than likely, /dev/sda is what you want; unless you want your MBR on your
second drive. You most likely don't want to install it to a partition.
Remember, you're installing GRUB to the MBR, not creating files on your
partition.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
grub-install /dev/sda
&lt;/pre&gt;
&lt;p&gt;This little command will bring your system from not being bootable to
being great. I believe you get one reboot before this must be done. When
you reboot, your system will do an fsck on these partitions and convert
them to Ext4. At this point, the drives are still Ext3.&lt;/p&gt;
&lt;p&gt;Now that you've rebooted after installing GRUB to the MBR, do the
grub-install command again and reboot again. It's a quick little thing
that I've seen help systems.&lt;/p&gt;
&lt;p&gt;CONGRATULATIONS! If you're system is still running, then you now have
the Ubuntu 9.04 running Ext4.&lt;/p&gt;
&lt;p&gt;Your existing files are not using extents however. Your old files will
still behave like Ext3 files. New files will take the behavior of Ext4.
This will change after you do a defragmentation of your Ext4 file
systems. On-line defragmentation is not supported yet and is very
unstable. So unstable that I'm not even considering trying it yet. Once
Ubuntu officially supports it, I will indeed post something about it.&lt;/p&gt;
</content><category term="linux"></category><category term="file systems"></category></entry><entry><title>Irssi to SMS</title><link href="https://michael.lustfield.net/linux/irssi-to-sms" rel="alternate"></link><published>2009-02-02T16:43:00-06:00</published><updated>2009-02-02T16:43:00-06:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2009-02-02:/linux/irssi-to-sms</id><summary type="html">&lt;p&gt;It's no longer a secret that when I'm not in an active irssi session and
you hilight me, that I get a text message. By popular request, I'm
writing up an explanation to it.&lt;/p&gt;
&lt;p&gt;1. Get irssi. When you're using it, you'll want to have it in a screen
session …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's no longer a secret that when I'm not in an active irssi session and
you hilight me, that I get a text message. By popular request, I'm
writing up an explanation to it.&lt;/p&gt;
&lt;p&gt;1. Get irssi. When you're using it, you'll want to have it in a screen
session so you can always stay online. I already wrote a guide about
&lt;a class="reference external" href="http://michael.lustfield.net/content/irssi-using-screen-and-ssh"&gt;Using irssi with screen and SSH&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;2. Setup Scripts. Once you're doing this, you'll want to get
&lt;a class="reference external" href="http://scripts.irssi.org/scripts/screen_away.pl"&gt;screen_away.pl&lt;/a&gt; and &lt;a class="reference external" href="http://scripts.irssi.org/scripts/awayproxy.pl"&gt;awayproxy.pl&lt;/a&gt;. I explained this in the
previously mentioned guide as well.&lt;/p&gt;
&lt;p&gt;Descriptions from irssi.org:&lt;/p&gt;
&lt;p&gt;screen-away.pl - set (un)away, if screen is attached/detached&lt;/p&gt;
&lt;p&gt;awayproxy.pl - Sets nick away when client discconects from the.
irssi-proxy. If away gathers messages targeted to nick and forwards .
them to an email address.&lt;/p&gt;
&lt;p&gt;They are pretty basic to setup and the comments explain things very
well. screen-away.pl is just a drop-in script. awayproxy.pl is one you
will want to edit.&lt;/p&gt;
&lt;p&gt;3. Sprinkle in some magic. So you have these scripts working and you're
getting emails about hilights you receive while away. What!? You don't
have an expensive phone/contract to alert you? I don't either.&lt;/p&gt;
&lt;p&gt;What I do have is unlimited text messaging. Hurray, we're not doing the
magic, someone else is.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.livejournal.com/tools/textmessage.bml?mode=details"&gt;http://www.livejournal.com/tools/textmessage.bml?mode=details&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Example, if my number is 123-456-7890 and I'm a verizon customer, I
would set my email to &lt;a class="reference external" href="mailto:1234567890&amp;#64;vtext.com"&gt;1234567890&amp;#64;vtext.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It's all incredibly simple, but without going through and doing the
research, it's a pain to put together. Have fun with this. :)&lt;/p&gt;
</content><category term="linux"></category><category term="irc"></category></entry><entry><title>Irssi Using Screen And SSH</title><link href="https://michael.lustfield.net/linux/irssi-using-screen-and-ssh" rel="alternate"></link><published>2008-12-30T19:14:00-06:00</published><updated>2008-12-30T19:14:00-06:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2008-12-30:/linux/irssi-using-screen-and-ssh</id><summary type="html">&lt;p&gt;I know this concept sound simple. You SSH into a server and restore a
screen session running irssi. However, I wouldn't be writing about it if
I didn't have a way to make it more efficient.&lt;/p&gt;
&lt;p&gt;I'll explain the benefits as we go along.&lt;/p&gt;
&lt;p&gt;First we need to get you …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I know this concept sound simple. You SSH into a server and restore a
screen session running irssi. However, I wouldn't be writing about it if
I didn't have a way to make it more efficient.&lt;/p&gt;
&lt;p&gt;I'll explain the benefits as we go along.&lt;/p&gt;
&lt;p&gt;First we need to get you into your server. I suggest setting up a shared
key between you and your server. There's plenty of guides out there
about shared keys.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ssh server.com
&lt;/pre&gt;
&lt;p&gt;Once in your server you need to install irssi and screen.&lt;/p&gt;
&lt;p&gt;sudo aptitude install irssi screen&lt;/p&gt;
&lt;p&gt;Set up irssi however you would do it if you were setting if set it up on
your own system. After this you will need to grab some files I've
uploaded.&lt;/p&gt;
&lt;p&gt;First make the directory structure&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mkdir -p ~/.irssi/scripts/autorun
&lt;/pre&gt;
&lt;p&gt;notify.pl is a modified version that pops up nice little message bubbles
on your desktop. It can be downloaded using subversion from
&lt;a class="reference external" href="http://code.google.com/p/irssi-libnotify/source/checkout"&gt;http://code.google.com/p/irssi-libnotify/source/checkout&lt;/a&gt; or directly
from my site.&lt;/p&gt;
&lt;p&gt;awayproxy.pl handles hilights when you are away. It's very well
commented and easy to follow.&lt;/p&gt;
&lt;p&gt;screen_away.pl handles your away status when you connect and disconnect
from screen.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
wget -O ~/.irssi/scripts/notify.pl http://michael.lustfield.net/files/uploads/notify.pl.txt
wget -O ~/.irssi/scripts/awayproxy.pl http://scripts.irssi.org/scripts/awayproxy.pl
wget -O ~/.irssi/scripts/screen_away.pl http://scripts.irssi.org/scripts/screen_away.pl
&lt;/pre&gt;
&lt;p&gt;We'll make symbolic links to make these run on irssi startup.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cd ~/.irssi/scripts/autorun
ln -s ../notify.pl
ln -s ../awayproxy.pl
ln -s ../screen_away.pl
&lt;/pre&gt;
&lt;p&gt;Now that you've setup everything on the server, it's time to start
things on your client. This is pretty much just a single command that
you can place in a menu item.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
rxvt -bg black -fg green -sr -T irssi -n irssi -e ssh server.com -Xt screen -aAdr -RR irssi irssi
&lt;/pre&gt;
&lt;p&gt;I use rxvt since it loads incredibly fast and is light weight.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
rxvt - The terminal emulator I run
-bg black - Makes the background black
-fg green - Makes the text green
-sr - Places the scrollbar on the right side
-T irssi - Gives the window a title
-n irssi - Gives the window a name
-e - Everything after this is the command we're running in the terminal
ssh - The command that we're running
server.com - The server you're connecting to
-Xt - Combined (order matters)
-X - Enable X forwarding (for the notify.pl script)
-t screen - The command we're running on the server after ssh connects
-a - Include all capabilities possible in the session
-A - Handles changing window sizes
-dr - Reattach a session and if necessary detach it first
-RR - Reattach a session and if necessary detach or create it
irssi - The first occurance is the name we're giving this screen session
irssi - The second occurance is the command we're running inside of screen
&lt;/pre&gt;
&lt;p&gt;This is a VERY long command that we're running. Hopefully I explained
all the parts correctly and efficiently enough that you can use and
modify it to fit your exact needs.&lt;/p&gt;
&lt;p&gt;Attachments:&lt;/p&gt;
&lt;p&gt;&lt;img alt="image0" src="/files/icons/text-plain.png" /&gt; &lt;a class="reference external" href="/files/uploads/notify.pl"&gt;notify.pl&lt;/a&gt;&lt;/p&gt;
</content><category term="linux"></category><category term="irc"></category><category term="ssh"></category></entry><entry><title>Irssi As A Proxy</title><link href="https://michael.lustfield.net/linux/irssi-as-a-proxy" rel="alternate"></link><published>2008-12-30T19:13:00-06:00</published><updated>2008-12-30T19:13:00-06:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2008-12-30:/linux/irssi-as-a-proxy</id><summary type="html">&lt;p&gt;Irssi has a fairly nice proxy feature. It's probably the best proxy I've
ever used. Unfortunately, it has a few flaws and is very under
documented.&lt;/p&gt;
&lt;p&gt;I gave up on ever having a decent proxy and switched to the screen
option but I still want to explain this feature so …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Irssi has a fairly nice proxy feature. It's probably the best proxy I've
ever used. Unfortunately, it has a few flaws and is very under
documented.&lt;/p&gt;
&lt;p&gt;I gave up on ever having a decent proxy and switched to the screen
option but I still want to explain this feature so it's decently
documented somewhere.&lt;/p&gt;
&lt;p&gt;To setup the server you need to first install irssi and screen. Edit
your configuration the same as you normally would to connect to any
other server.&lt;/p&gt;
&lt;p&gt;You want to proxy to load my default so edit ~/.irssi/startup and add
the line &amp;quot;/LOAD PROXY&amp;quot;.&lt;/p&gt;
&lt;p&gt;You can either edit the configuration file yourself IF you know what
you're doing or you can use the commands to do it. People seem to screw
this up a lot so I won't show it. The irssi group seem to advise against
as well.&lt;/p&gt;
&lt;p&gt;Set a password with&lt;/p&gt;
&lt;pre class="literal-block"&gt;
/SET irssiproxy_password PASSWORD
&lt;/pre&gt;
&lt;p&gt;You need to set a different port for each network in the configuration.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
/SET irssiproxy_ports Freenode=7001 Bitlbee=7002
&lt;/pre&gt;
&lt;p&gt;You need to make sure to save the settings.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
/SAVE ALL
&lt;/pre&gt;
&lt;p&gt;Create a directory called scripts and then autorun underneath it.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mkdir -p ~/.irssi/scripts/autorun
&lt;/pre&gt;
&lt;p&gt;Put the &lt;a class="reference external" href="http://scripts.irssi.org/scripts/awayproxy.pl"&gt;awayproxy.pl&lt;/a&gt; and &lt;a class="reference external" href="http://wouter.coekaerts.be/irssi/scripts/proxy_backlog.pl"&gt;proxy_backlog.pl&lt;/a&gt; scripts in the scripts
directory. You want to make these run at launch time so just make a
symlink to them in the autorun.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cd ~/.irssi/scripts/autorun
ln -s ../awayproxy.pl
ln -s ../proxy\_backlog.pl
&lt;/pre&gt;
&lt;p&gt;Edit the awayproxy file. It's very well commented. The other file is a
drop in tool. It's not pretty or elegant, but it fixes the fact that
irssi proxy doesn't have a backlog viewer available.&lt;/p&gt;
&lt;p&gt;Now you need to setup a task to launch this on your server. We'll add
this to the boot process. Edit /etc/rc.local&lt;/p&gt;
&lt;p&gt;Add this line replacing USER with your user name.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo -H -u USER screen -d -m -S irssi-proxy irssi
&lt;/pre&gt;
&lt;p&gt;Breaking down the command&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo ; runs command as user
-H ; sets the home directory to the users
-u ; sets the command to act as USER
screen ; the command sudo is executing
-d -m ; starts screen detached. This solves a lot of issues later.
-S ; starts the screen session with the irssi-proxy ID.
irssi ; the command we're launching
&lt;/pre&gt;
&lt;p&gt;If you want to connect to this screen session from your server to see if
the proxy connection is missing something - like PM's - just log in and
do &amp;quot;&lt;tt class="docutils literal"&gt;screen &lt;span class="pre"&gt;-r&lt;/span&gt; &lt;span class="pre"&gt;irssi-proxy&lt;/span&gt;&lt;/tt&gt;&amp;quot; That big long command that we did made it
possible to only need that little line to connect.&lt;/p&gt;
&lt;p&gt;What did you say? You want to connect to it now? I'm afraid that's
beyond the scope of this.... :P&lt;/p&gt;
&lt;p&gt;On your client. Create an alias command. I used&lt;/p&gt;
&lt;pre class="literal-block"&gt;
BL = &amp;quot;CTCP -proxy- IRSSIPROXY BACKLOG SEND&amp;quot;;
&lt;/pre&gt;
&lt;p&gt;We need to create a network&lt;/p&gt;
&lt;pre class="literal-block"&gt;
/NETWORK ADD Proxy
&lt;/pre&gt;
&lt;p&gt;Then add a server to it&lt;/p&gt;
&lt;pre class="literal-block"&gt;
/SERVER ADD -auto -network Proxy proxy.server.com 7001 PASSWORD
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Remember that you have different ports for each proxy network&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Make sure to save the settings&lt;/p&gt;
&lt;pre class="literal-block"&gt;
/SAVE ALL
&lt;/pre&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Hurray, all should be set up and well. Just run irssi on your local
system and it should connect to the proxy.&lt;/p&gt;
&lt;p&gt;If it isn't working for you just comment a request for help or email me
and I'll be glad to help you.&lt;/p&gt;
&lt;p&gt;If you need help I'd suggest finding some place other than their
channel. It tends to be full of RTFM ass holes and pricks. Especially
when you ask something they don't know the answer to. It's best to find
another channel of people that use it and just ask there instead.&lt;/p&gt;
</content><category term="linux"></category><category term="irc"></category></entry><entry><title>Perfect Irssi and OpenBox Integration</title><link href="https://michael.lustfield.net/linux/perfect-irssi-and-openbox-integration" rel="alternate"></link><published>2008-12-30T19:11:00-06:00</published><updated>2008-12-30T19:11:00-06:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2008-12-30:/linux/perfect-irssi-and-openbox-integration</id><summary type="html">&lt;p&gt;I think I achieved nearly the perfect Irssi + OpenBox.&lt;/p&gt;
&lt;p&gt;There's four steps to my setup. Configuring gnome-terminal, alltray,
irssi, and an image.&lt;/p&gt;
&lt;p&gt;First of all, we need to set up irssi. If your'e reading this, I'm
guessing you've already done this. I use murf. You can find themes at
&lt;a class="reference external" href="http://irssi.org/themes"&gt;http …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;I think I achieved nearly the perfect Irssi + OpenBox.&lt;/p&gt;
&lt;p&gt;There's four steps to my setup. Configuring gnome-terminal, alltray,
irssi, and an image.&lt;/p&gt;
&lt;p&gt;First of all, we need to set up irssi. If your'e reading this, I'm
guessing you've already done this. I use murf. You can find themes at
&lt;a class="reference external" href="http://irssi.org/themes"&gt;http://irssi.org/themes&lt;/a&gt;. Download one, place it in ~/.irssi/ and
execute /theme inside of irssi. You can do /save to save these settings.&lt;/p&gt;
&lt;p&gt;To set up gnome-terminal, go to Edit &amp;gt; Current Profile. Go to the
Effects tab. Now choose the Background Image option. I uploaded an image
that somebody gave me that I really liked. Just download it to wherever
you want. Spaces in the path name are usually bad. Once you set the
background image, you will want to change the transparency level. This
is a rather bright image. I turned it down to about 80% opacity. The
image is uploaded as cavechaos.jpg. I keep this file in
~/Pictures/Backgrounds/&lt;/p&gt;
&lt;p&gt;Now on to allray. Install it using sudo aptitude install alltray. This
will allow you to run your application in a tiny icon on your tray. I
use pypanel for this. Some people just use docker, but I'm pretty stuck
on pypanel.&lt;/p&gt;
&lt;p&gt;Now that we have alltray, we need to add some pretty pictures for it. If
you try to run gnome-terminal inside of alltray right now, you will get
kind of an ugly terminal icon. I prefer something a little more fitting.
I uploaded a copy of irssi.png. I use a very black theme so a black icon
doesn't really work. I inverted the colors and came up with
irssi-invert.png. These images just came from the official irssi.org
site. I keep these in ~/.icons/&lt;/p&gt;
&lt;p&gt;Now to bring them all together. I just have a menu entry with the exact
text. Remember where I keep everything and adjust this accordingly.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
alltray -s -na -i ~/.icons/irssi-invert.png &amp;quot;gnome-terminal --hide-menubar -t irssi -e irssi&amp;quot;
&lt;/pre&gt;
&lt;p&gt;It looks like a lot, but I'll break it down.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
alltray:
    -s - Makes the window shown when it launches rather than hiding it
    -na - Keeps (AllTray) from showing up in the title
    -i - Gives alltray an icon to use in the tray
    &amp;quot; &amp;quot; - Everything inside quotes is what alltray will call

gnome-terminal:
    --hide-menubat - Keeps the menu hidden.
    Having multiple tabs can affect the way irssi behaves.
    -t - This is the text gnome-terminal passes to the WM for the title
    -e - This is what gnome-terminal will execute.
&lt;/pre&gt;
&lt;p&gt;Problems with this setup:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;I need to figure out how to make gnome-terminal startup maximized.&lt;/li&gt;
&lt;li&gt;I need to figure out how to make gnome-terminal startup on screen 2.&lt;/li&gt;
&lt;li&gt;Gnome-terminal doesn't grab the title and instead uses &amp;quot;Unnamed Window&amp;quot;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Attachments:&lt;/p&gt;
&lt;p&gt;&lt;img alt="image0" src="files/icons/image-x-generic.png" /&gt; &lt;a class="reference external" href="/files/uploads/cavechaos.jpg"&gt;cavechaos.jpg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="image0" src="files/icons/image-x-generic.png" /&gt; &lt;a class="reference external" href="/files/uploads/irssi.png"&gt;irssi.png&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="image0" src="files/icons/image-x-generic.png" /&gt; &lt;a class="reference external" href="/files/uploads/irssi-invert.png"&gt;irssi-invert.png&lt;/a&gt;&lt;/p&gt;
</content><category term="linux"></category><category term="irc"></category><category term="openbox"></category></entry><entry><title>Worthless Backups</title><link href="https://michael.lustfield.net/rambling/worthless-backups" rel="alternate"></link><published>2008-12-30T19:11:00-06:00</published><updated>2008-12-30T19:11:00-06:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2008-12-30:/rambling/worthless-backups</id><summary type="html">&lt;p&gt;How good are your backups?&lt;/p&gt;
&lt;p&gt;I thought mine were pretty dang good. I found out otherwise. I had the
following two lines running nightly for my backups.&lt;/p&gt;
&lt;p&gt;# Make MySQL backup&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mysqldump -u root -p &amp;quot;$(/.sql.pwd)&amp;quot; --all-databases | gzip &amp;gt; /var/mysqldump/mysql-$(date +%F).gz
&lt;/pre&gt;
&lt;p&gt;# Delete old copies&lt;/p&gt;
&lt;pre class="literal-block"&gt;
find /var/mysqldump …&lt;/pre&gt;</summary><content type="html">&lt;p&gt;How good are your backups?&lt;/p&gt;
&lt;p&gt;I thought mine were pretty dang good. I found out otherwise. I had the
following two lines running nightly for my backups.&lt;/p&gt;
&lt;p&gt;# Make MySQL backup&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mysqldump -u root -p &amp;quot;$(/.sql.pwd)&amp;quot; --all-databases | gzip &amp;gt; /var/mysqldump/mysql-$(date +%F).gz
&lt;/pre&gt;
&lt;p&gt;# Delete old copies&lt;/p&gt;
&lt;pre class="literal-block"&gt;
find /var/mysqldump/ -mtime +90 -exec rm {} \;
&lt;/pre&gt;
&lt;p&gt;Anybody know what's wrong with that?&lt;/p&gt;
&lt;p&gt;For 99% of Linux commands, this would be perfectly good syntax.
Unfortunately, this is one of those 1% times where things aren't the way
you expect them.&lt;/p&gt;
&lt;p&gt;I was using -u root -p &amp;quot;$(&amp;lt;/root/.sql.pwd)&amp;quot;&lt;/p&gt;
&lt;p&gt;What I needed to be using was -uroot -p&amp;quot;$(&amp;lt;/root/.sql.pwd)&amp;quot;&lt;/p&gt;
&lt;p&gt;When working with MySQL in this syntax, you don't want a space when
passing in an argument.&lt;/p&gt;
&lt;p&gt;I have a massive database issue and wasn't able to recover from it. I
tried to restore from the database backups. Problem is that I've been
creating backups of an error message. Worse yet, is I had no way of
knowing without actually going in and trying to restore from a backup.&lt;/p&gt;
&lt;p&gt;Bottom line: TEST YOUR BACKUPS&lt;/p&gt;
</content><category term="rambling"></category><category term="mysql"></category><category term="backup"></category><category term="rant"></category></entry><entry><title>Push POP to IMAP Folder</title><link href="https://michael.lustfield.net/linux/push-pop-to-imap-folder" rel="alternate"></link><published>2008-12-30T19:10:00-06:00</published><updated>2008-12-30T19:10:00-06:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2008-12-30:/linux/push-pop-to-imap-folder</id><summary type="html">&lt;p&gt;This is for anybody with multiple email accounts that wants to
consolidate. My solution here requires and number of POP email accounts
and one IMAP account.&lt;/p&gt;
&lt;p&gt;I don't even want to begin thinking about the time it took me to come up
with this solution. Hopefully it can save somebody …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is for anybody with multiple email accounts that wants to
consolidate. My solution here requires and number of POP email accounts
and one IMAP account.&lt;/p&gt;
&lt;p&gt;I don't even want to begin thinking about the time it took me to come up
with this solution. Hopefully it can save somebody 10 or more hours of
digging and scripting.&lt;/p&gt;
&lt;p&gt;My method works like this.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Synchronize IMAP account with local Maildir copy&lt;/li&gt;
&lt;li&gt;Download POP emails&lt;/li&gt;
&lt;li&gt;Push emails to Maildir local copy&lt;/li&gt;
&lt;li&gt;Synchronize local Maildir copy with IMAP account&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The first synchronization is to prevent any little issues that could pop
up.&lt;/p&gt;
&lt;p&gt;First and foremost, I assume you are working on a Linux system. No
exceptions. I also assume a system that uses Apt.&lt;/p&gt;
&lt;p&gt;You'll need to install a couple tools that are most likely not installed
by default.&lt;/p&gt;
&lt;p&gt;sudo aptitude install getmail4 procmail offlineimap&lt;/p&gt;
&lt;p&gt;I did my best to keep everything in a nice central directory which you
need to create as well.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mkdir ~/.synmail
&lt;/pre&gt;
&lt;p&gt;The first thing we need to do is create a file in here called pushmail.
Rather than showing you all the text, you can just download this script.
It's attached as pushmail at the bottom of this post. Download it to
~/.synmail/pushmail You will need to make sure it's executable as well.
Just a note, make sure there is no period on the end.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
chmod +x ~/.synmail/pushmail
&lt;/pre&gt;
&lt;p&gt;The first file our pushmail script will use is for offlineimap. In order
for this application to work, we need to create our very own IMAP
directory.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mkdir ~/.synmail/imap
&lt;/pre&gt;
&lt;p&gt;Now we need to create the offlineimap configuration file.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
vim ~/.synmail/offlineimap.conf
&lt;/pre&gt;
&lt;p&gt;Rather than go through all the details of setting this up, I just
uploaded my copy. It is listed as offlineimap.conf. There isn't puch
point in discussing all the various options because there is an
excellent fully commented explation of everything sitting on your
computer. Just follow these commands to get the copy.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cp /usr/share/doc/offlineimap/examples/offlineimap.conf.gz ~/
gunzip ~/offlineimap.conf.gz
&lt;/pre&gt;
&lt;p&gt;The next file our pushmail script needs is the getmail file. Our script
expects this file in a very specific way. It's basically just
prefix-getm. I have two gmail accounts so I use gm1-getm and gm2-getm. I
uploaded a copy of my gm1-getm file. The values should make sense. If
they don't you shouldn't be reading this. This file goes to
~/.synmail/gm1-getm&lt;/p&gt;
&lt;p&gt;The only line that might be confusing is the arguments line. The reason
we have the &amp;quot; &amp;quot; added in is because of the way parameters are passed to
procmail. This caused me a lot of headaches and you're probably better
off leaving it alone. The next part is the path to your procmail
configuration.&lt;/p&gt;
&lt;p&gt;Now that we're on that page, it's time to talk about our procmail
configuration. This file will have the same prefix as the one before it.
I obviously called mine gm1-proc. Go figure, I uploaded my copy. Not
only that, but I didn't have to hide passwords or anything. That's
because this file is ONLY a delivery agent.&lt;/p&gt;
&lt;p&gt;When you look at this file, notice that there is a line called DEFAULT.
This line is the reason we need different configurations for each
account. That &amp;quot;FODLER&amp;quot; part at the end is what folder our files will be
going into. Unfortunately, we can't leave it at that. Because of the way
Maildir works, we need to add the /new at the end. I'm not saying
Maildir sucks, and it really doesn't make this any harder.&lt;/p&gt;
&lt;p&gt;I probably don't need to note that you need to save this file just like
the getmail configuration. Mine is at ~/.synmail/gm1-proc.&lt;/p&gt;
&lt;p&gt;Hurray, we now should have everything in place that we need to in order
to run this setup successfully. You've probably noticed that our
passwords show up a couple times. I don't like it either. We can have a
password input file and a few other methods to keep things secure, but
none of it is really worth it. Instead, I just like to make it readable
and writable to only my user. Not only do I suggest it, it's in the
script you got from me.&lt;/p&gt;
&lt;p&gt;Keep It Private:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
chmod +x 0700 $HOME/.synmail
&lt;/pre&gt;
&lt;p&gt;Now that we have that cleared up, it's time to test this puppy out. I
have been using the prefix gm1, replace gm1 with whatever you have been
using.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cd $HOME/.synmail/
./pushmail gm1
&lt;/pre&gt;
&lt;p&gt;The rest will be done for you. What happens is that the script takes
your prefix input and uses this to find the other configuration files
you created. This is why you need to keep the prefix the same, and
follow my naming convention. If you don't like it, then the script is
yours, do with it whatever you want. I love open source.&lt;/p&gt;
&lt;p&gt;When you're running this script, you will notice that it probably takes
an insanely long time to go through. You might say to yourself that
there's no way this is acceptable if it's going to happen every time.
However, after the first run you'll realize that in fact it was just
pulling down every single email you had on your IMAP server. If you look
at it closely enough, you'll find that there's more files around than
what you expected would be there.&lt;/p&gt;
&lt;p&gt;So, you'll see offlineimap making a copy of the current state of your
IMAP data. Then you'll see getmail retrieving your POP emails. procmail
will be running behind the scenes to sort your mail. And then you'll see
offlineimap doing it's last sync with your newer emails going out to
your server.&lt;/p&gt;
&lt;p&gt;BONUS: You can also use this local copy of your IMAP data if your IMAP
server is ever offline or you won't have internet access. I would
suggest being careful with it because of the nature of these scripts.&lt;/p&gt;
&lt;p&gt;That's the primary intention of offlineimap in the first place.&lt;/p&gt;
&lt;p&gt;BONUS 2: I've modified the pushmail script to be able to do ALL files in
the directory in one shot. PLEASE DO NOT run this before you've verified
ALL of your other settings work. Don't leave any extra -getm or -proc
files. If you looks at the script, it'll be obvious why.&lt;/p&gt;
&lt;p&gt;Attachments:&lt;/p&gt;
&lt;p&gt;&lt;img alt="image0" src="/files/icons/application-octet-stream.png" /&gt; &lt;a class="reference external" href="/files/uploads/pushmail"&gt;pushmail&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="image0" src="/files/icons/application-octet-stream.png" /&gt; &lt;a class="reference external" href="/files/uploads/pushmail-all"&gt;pushmail-all&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="image0" src="/files/icons/application-octet-stream.png" /&gt; &lt;a class="reference external" href="/files/uploads/offlineimap.conf"&gt;offlineimap.conf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="image0" src="/files/icons/application-octet-stream.png" /&gt; &lt;a class="reference external" href="/files/uploads/gm1-getm"&gt;gm1-getm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="image0" src="/files/icons/application-octet-stream.png" /&gt; &lt;a class="reference external" href="/files/uploads/gm1-proc"&gt;gm1-proc&lt;/a&gt;&lt;/p&gt;
</content><category term="linux"></category><category term="email"></category></entry><entry><title>Power Friendly Memo Script</title><link href="https://michael.lustfield.net/linux/power-friendly-memo-script" rel="alternate"></link><published>2008-12-30T19:08:00-06:00</published><updated>2008-12-30T19:08:00-06:00</updated><author><name>michael</name></author><id>tag:michael.lustfield.net,2008-12-30:/linux/power-friendly-memo-script</id><summary type="html">&lt;p&gt;I've been bragging recently about how many obstacles I've overcome with
Linux as a whole. There's many things I've been doing to Ubuntu to make
it extremely fast and flexible for my uses. I also happen to be one of
those people that forgets absolutely everything.&lt;/p&gt;
&lt;p&gt;I very frequently decide …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been bragging recently about how many obstacles I've overcome with
Linux as a whole. There's many things I've been doing to Ubuntu to make
it extremely fast and flexible for my uses. I also happen to be one of
those people that forgets absolutely everything.&lt;/p&gt;
&lt;p&gt;I very frequently decide I'm going to do something later that isn't
something big and forget about it, or forget about a homework
assignment. I've tried using those note taking and memo apps. I found
that tomboy was pretty good. Unfortunately, not good enough.&lt;/p&gt;
&lt;p&gt;I decided to go through and figure out a very simple way to take memos
or quick little notes that wouldn't eat up any extra memory or waste any
extra battery.&lt;/p&gt;
&lt;p&gt;The isn't a small app that you can download but it can be set up very
easily. I don't know how to do key binding in anything other than
OpenBox but I'm sure a few quick Google searches will answer things
pretty quick. I'll try to do a search and list some of my finds. later
on.&lt;/p&gt;
&lt;p&gt;First off, you'll need to make the script. I keep all of my scripts
inside of ~/.bin/ unless I want them system usable, in which case I use
/usr/local/sbin/ for most things.&lt;/p&gt;
&lt;p&gt;So, open up your favorite text editor and create ~/.bin/memo. Add the
following text to this file.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
#!/bin/bash
echo &amp;quot;Enter a short memo followed by Enter.&amp;quot;
read memo
echo &amp;quot;$memo&amp;quot; &amp;gt;&amp;gt; ~/memo
&lt;/pre&gt;
&lt;p&gt;I know it's short but also very efficient. Now you need to make the
script executable. Do this with chmod +x ~/.bin/memo.&lt;/p&gt;
&lt;p&gt;Now we need to be able to call this script, otherwise it's not very
useful to us. You can either call it from the terminal. If you have
~/.bin in your PATH variable you can just call it by typing memo. You
can add it to your path variable with PATH=&amp;quot;$PATH:~/.bin&amp;quot;.&lt;/p&gt;
&lt;p&gt;I prefer to call it using a hothey. I use Alt+F6. Not for any particular
reason other that Alt+F2 and Alt+F4 are being used.&lt;/p&gt;
&lt;p&gt;Open up ~/.config/openbox/rc.xml. Please, don't attempt this if you
don't have a very minimal understanding of XML.&lt;/p&gt;
&lt;p&gt;Find the tag. You will want to add a level directly below this. I
actually put mine right above . Add the following text to the XML file.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
xterm -T Memo -geometry 63x2+450+336 -e /bin/bash -l -c /home/michael/.bin/memo
&lt;/pre&gt;
&lt;p&gt;Save the file and reload OpenBox. You should now be able to Press Alt+F6
and have a box pop up in your screen that you can take a memo with. Type
some text in and press enter. This text will be tagged to the end of
~/memo.&lt;/p&gt;
&lt;p&gt;I personally have a --- UNSORTED --- line at the end of the file.
Whenever I go into the file, I can take anything below that line and
sort things out.&lt;/p&gt;
&lt;p&gt;The -geometry option for xterm can be kind of tricky to figure out. You
will probably need to mess with it to fit your screen.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
-geometry AxB+C+D . A=Width \| B=Height \| C=From Left \| D=From Top
&lt;/pre&gt;
&lt;p&gt;Hope this can help you as much as it helped me.&lt;/p&gt;
</content><category term="linux"></category><category term="kiss"></category></entry></feed>